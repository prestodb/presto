/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftPrimitiveTypeInfo", builder=ThriftPrimitiveTypeInfo.Builder.class)
public final class ThriftPrimitiveTypeInfo implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftPrimitiveTypeInfo(
        @com.facebook.swift.codec.ThriftField(value=1, name="typeName", requiredness=Requiredness.NONE) final String typeName
    ) {
        this.typeName = typeName;
    }
    
    @ThriftConstructor
    protected ThriftPrimitiveTypeInfo() {
      this.typeName = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftPrimitiveTypeInfo other) {
      return new Builder(other);
    }

    public static class Builder {
        private String typeName = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="typeName", requiredness=Requiredness.NONE)    public Builder setTypeName(String typeName) {
            this.typeName = typeName;
            return this;
        }
    
        public String getTypeName() { return typeName; }
    
        public Builder() { }
        public Builder(ThriftPrimitiveTypeInfo other) {
            this.typeName = other.typeName;
        }
    
        @ThriftConstructor
        public ThriftPrimitiveTypeInfo build() {
            ThriftPrimitiveTypeInfo result = new ThriftPrimitiveTypeInfo (
                this.typeName
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftPrimitiveTypeInfo");
    private final String typeName;
    public static final int _TYPENAME = 1;
    private static final TField TYPE_NAME_FIELD_DESC = new TField("typeName", TType.STRING, (short)1);
    static {
      NAMES_TO_IDS.put("typeName", 1);
      THRIFT_NAMES_TO_IDS.put("typeName", 1);
      FIELD_METADATA.put(1, TYPE_NAME_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="typeName", requiredness=Requiredness.NONE)
    public String getTypeName() { return typeName; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("typeName", typeName);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftPrimitiveTypeInfo other = (ThriftPrimitiveTypeInfo)o;
    
        return
            Objects.equals(typeName, other.typeName) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            typeName
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftPrimitiveTypeInfo> asReader() {
      return ThriftPrimitiveTypeInfo::read0;
    }
    
    public static ThriftPrimitiveTypeInfo read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftPrimitiveTypeInfo.NAMES_TO_IDS, ThriftPrimitiveTypeInfo.THRIFT_NAMES_TO_IDS, ThriftPrimitiveTypeInfo.FIELD_METADATA);
      ThriftPrimitiveTypeInfo.Builder builder = new ThriftPrimitiveTypeInfo.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _TYPENAME:
          if (__field.type == TType.STRING) {
            String typeName = oprot.readString();
            builder.setTypeName(typeName);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (typeName != null) {
        oprot.writeFieldBegin(TYPE_NAME_FIELD_DESC);
        oprot.writeString(this.typeName);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftPrimitiveTypeInfoLazy {
        private static final ThriftPrimitiveTypeInfo _DEFAULT = new ThriftPrimitiveTypeInfo.Builder().build();
    }
    
    public static ThriftPrimitiveTypeInfo defaultInstance() {
        return  _ThriftPrimitiveTypeInfoLazy._DEFAULT;
    }
}
