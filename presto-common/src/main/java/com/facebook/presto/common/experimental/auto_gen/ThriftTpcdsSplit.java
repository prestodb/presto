/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftTpcdsSplit", builder=ThriftTpcdsSplit.Builder.class)
public final class ThriftTpcdsSplit implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftTpcdsSplit(
        @com.facebook.swift.codec.ThriftField(value=1, name="tableHandle", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftTpcdsTableHandle tableHandle,
        @com.facebook.swift.codec.ThriftField(value=2, name="totalParts", requiredness=Requiredness.NONE) final int totalParts,
        @com.facebook.swift.codec.ThriftField(value=3, name="partNumber", requiredness=Requiredness.NONE) final int partNumber,
        @com.facebook.swift.codec.ThriftField(value=4, name="addresses", requiredness=Requiredness.NONE) final List<com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress> addresses,
        @com.facebook.swift.codec.ThriftField(value=5, name="noSexism", requiredness=Requiredness.NONE) final boolean noSexism
    ) {
        this.tableHandle = tableHandle;
        this.totalParts = totalParts;
        this.partNumber = partNumber;
        this.addresses = addresses;
        this.noSexism = noSexism;
    }
    
    @ThriftConstructor
    protected ThriftTpcdsSplit() {
      this.tableHandle = null;
      this.totalParts = 0;
      this.partNumber = 0;
      this.addresses = null;
      this.noSexism = false;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftTpcdsSplit other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftTpcdsTableHandle tableHandle = null;
        private int totalParts = 0;
        private int partNumber = 0;
        private List<com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress> addresses = null;
        private boolean noSexism = false;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="tableHandle", requiredness=Requiredness.NONE)    public Builder setTableHandle(com.facebook.presto.common.experimental.auto_gen.ThriftTpcdsTableHandle tableHandle) {
            this.tableHandle = tableHandle;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftTpcdsTableHandle getTableHandle() { return tableHandle; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="totalParts", requiredness=Requiredness.NONE)    public Builder setTotalParts(int totalParts) {
            this.totalParts = totalParts;
            return this;
        }
    
        public int getTotalParts() { return totalParts; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="partNumber", requiredness=Requiredness.NONE)    public Builder setPartNumber(int partNumber) {
            this.partNumber = partNumber;
            return this;
        }
    
        public int getPartNumber() { return partNumber; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="addresses", requiredness=Requiredness.NONE)    public Builder setAddresses(List<com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress> addresses) {
            this.addresses = addresses;
            return this;
        }
    
        public List<com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress> getAddresses() { return addresses; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="noSexism", requiredness=Requiredness.NONE)    public Builder setNoSexism(boolean noSexism) {
            this.noSexism = noSexism;
            return this;
        }
    
        public boolean isNoSexism() { return noSexism; }
    
        public Builder() { }
        public Builder(ThriftTpcdsSplit other) {
            this.tableHandle = other.tableHandle;
            this.totalParts = other.totalParts;
            this.partNumber = other.partNumber;
            this.addresses = other.addresses;
            this.noSexism = other.noSexism;
        }
    
        @ThriftConstructor
        public ThriftTpcdsSplit build() {
            ThriftTpcdsSplit result = new ThriftTpcdsSplit (
                this.tableHandle,
                this.totalParts,
                this.partNumber,
                this.addresses,
                this.noSexism
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftTpcdsSplit");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftTpcdsTableHandle tableHandle;
    public static final int _TABLEHANDLE = 1;
    private static final TField TABLE_HANDLE_FIELD_DESC = new TField("tableHandle", TType.STRUCT, (short)1);
        private final int totalParts;
    public static final int _TOTALPARTS = 2;
    private static final TField TOTAL_PARTS_FIELD_DESC = new TField("totalParts", TType.I32, (short)2);
        private final int partNumber;
    public static final int _PARTNUMBER = 3;
    private static final TField PART_NUMBER_FIELD_DESC = new TField("partNumber", TType.I32, (short)3);
        private final List<com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress> addresses;
    public static final int _ADDRESSES = 4;
    private static final TField ADDRESSES_FIELD_DESC = new TField("addresses", TType.LIST, (short)4);
        private final boolean noSexism;
    public static final int _NOSEXISM = 5;
    private static final TField NO_SEXISM_FIELD_DESC = new TField("noSexism", TType.BOOL, (short)5);
    static {
      NAMES_TO_IDS.put("tableHandle", 1);
      THRIFT_NAMES_TO_IDS.put("tableHandle", 1);
      FIELD_METADATA.put(1, TABLE_HANDLE_FIELD_DESC);
      NAMES_TO_IDS.put("totalParts", 2);
      THRIFT_NAMES_TO_IDS.put("totalParts", 2);
      FIELD_METADATA.put(2, TOTAL_PARTS_FIELD_DESC);
      NAMES_TO_IDS.put("partNumber", 3);
      THRIFT_NAMES_TO_IDS.put("partNumber", 3);
      FIELD_METADATA.put(3, PART_NUMBER_FIELD_DESC);
      NAMES_TO_IDS.put("addresses", 4);
      THRIFT_NAMES_TO_IDS.put("addresses", 4);
      FIELD_METADATA.put(4, ADDRESSES_FIELD_DESC);
      NAMES_TO_IDS.put("noSexism", 5);
      THRIFT_NAMES_TO_IDS.put("noSexism", 5);
      FIELD_METADATA.put(5, NO_SEXISM_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="tableHandle", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftTpcdsTableHandle getTableHandle() { return tableHandle; }

    
    
    @com.facebook.swift.codec.ThriftField(value=2, name="totalParts", requiredness=Requiredness.NONE)
    public int getTotalParts() { return totalParts; }

    
    
    @com.facebook.swift.codec.ThriftField(value=3, name="partNumber", requiredness=Requiredness.NONE)
    public int getPartNumber() { return partNumber; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="addresses", requiredness=Requiredness.NONE)
    public List<com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress> getAddresses() { return addresses; }

    
    
    @com.facebook.swift.codec.ThriftField(value=5, name="noSexism", requiredness=Requiredness.NONE)
    public boolean isNoSexism() { return noSexism; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("tableHandle", tableHandle);
        helper.add("totalParts", totalParts);
        helper.add("partNumber", partNumber);
        helper.add("addresses", addresses);
        helper.add("noSexism", noSexism);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftTpcdsSplit other = (ThriftTpcdsSplit)o;
    
        return
            Objects.equals(tableHandle, other.tableHandle) &&
            Objects.equals(totalParts, other.totalParts) &&
            Objects.equals(partNumber, other.partNumber) &&
            Objects.equals(addresses, other.addresses) &&
            Objects.equals(noSexism, other.noSexism) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            tableHandle,
            totalParts,
            partNumber,
            addresses,
            noSexism
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftTpcdsSplit> asReader() {
      return ThriftTpcdsSplit::read0;
    }
    
    public static ThriftTpcdsSplit read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftTpcdsSplit.NAMES_TO_IDS, ThriftTpcdsSplit.THRIFT_NAMES_TO_IDS, ThriftTpcdsSplit.FIELD_METADATA);
      ThriftTpcdsSplit.Builder builder = new ThriftTpcdsSplit.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _TABLEHANDLE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftTpcdsTableHandle tableHandle = com.facebook.presto.common.experimental.auto_gen.ThriftTpcdsTableHandle.read0(oprot);
            builder.setTableHandle(tableHandle);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TOTALPARTS:
          if (__field.type == TType.I32) {
            int totalParts = oprot.readI32();
            builder.setTotalParts(totalParts);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PARTNUMBER:
          if (__field.type == TType.I32) {
            int partNumber = oprot.readI32();
            builder.setPartNumber(partNumber);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ADDRESSES:
          if (__field.type == TType.LIST) {
            List<com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress> addresses;
                {
                TList _list = oprot.readListBegin();
                addresses = new ArrayList<com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress.read0(oprot);
                    addresses.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setAddresses(addresses);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _NOSEXISM:
          if (__field.type == TType.BOOL) {
            boolean noSexism = oprot.readBool();
            builder.setNoSexism(noSexism);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (tableHandle != null) {
        oprot.writeFieldBegin(TABLE_HANDLE_FIELD_DESC);
        this.tableHandle.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_PARTS_FIELD_DESC);
      oprot.writeI32(this.totalParts);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PART_NUMBER_FIELD_DESC);
      oprot.writeI32(this.partNumber);
      oprot.writeFieldEnd();
      if (addresses != null) {
        oprot.writeFieldBegin(ADDRESSES_FIELD_DESC);
        List<com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress> _iter0 = addresses;
        oprot.writeListBegin(new TList(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftHostAddress _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NO_SEXISM_FIELD_DESC);
      oprot.writeBool(this.noSexism);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftTpcdsSplitLazy {
        private static final ThriftTpcdsSplit _DEFAULT = new ThriftTpcdsSplit.Builder().build();
    }
    
    public static ThriftTpcdsSplit defaultInstance() {
        return  _ThriftTpcdsSplitLazy._DEFAULT;
    }
}
