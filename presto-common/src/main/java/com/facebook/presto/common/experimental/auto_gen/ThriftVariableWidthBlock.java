/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftVariableWidthBlock", builder=ThriftVariableWidthBlock.Builder.class)
public final class ThriftVariableWidthBlock implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftVariableWidthBlock(
        @com.facebook.swift.codec.ThriftField(value=1, name="positionCount", requiredness=Requiredness.NONE) final int positionCount,
        @com.facebook.swift.codec.ThriftField(value=2, name="slice", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftSlice slice,
        @com.facebook.swift.codec.ThriftField(value=3, name="offsets", requiredness=Requiredness.NONE) final List<Integer> offsets,
        @com.facebook.swift.codec.ThriftField(value=4, name="valueIsNull", requiredness=Requiredness.OPTIONAL) final List<Boolean> valueIsNull
    ) {
        this.positionCount = positionCount;
        this.slice = slice;
        this.offsets = offsets;
        this.valueIsNull = valueIsNull;
    }
    
    @ThriftConstructor
    protected ThriftVariableWidthBlock() {
      this.positionCount = 0;
      this.slice = null;
      this.offsets = null;
      this.valueIsNull = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftVariableWidthBlock other) {
      return new Builder(other);
    }

    public static class Builder {
        private int positionCount = 0;
        private com.facebook.presto.common.experimental.auto_gen.ThriftSlice slice = null;
        private List<Integer> offsets = null;
        private List<Boolean> valueIsNull = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="positionCount", requiredness=Requiredness.NONE)    public Builder setPositionCount(int positionCount) {
            this.positionCount = positionCount;
            return this;
        }
    
        public int getPositionCount() { return positionCount; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="slice", requiredness=Requiredness.NONE)    public Builder setSlice(com.facebook.presto.common.experimental.auto_gen.ThriftSlice slice) {
            this.slice = slice;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftSlice getSlice() { return slice; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="offsets", requiredness=Requiredness.NONE)    public Builder setOffsets(List<Integer> offsets) {
            this.offsets = offsets;
            return this;
        }
    
        public List<Integer> getOffsets() { return offsets; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="valueIsNull", requiredness=Requiredness.OPTIONAL)    public Builder setValueIsNull(List<Boolean> valueIsNull) {
            this.valueIsNull = valueIsNull;
            return this;
        }
    
        public List<Boolean> getValueIsNull() { return valueIsNull; }
    
        public Builder() { }
        public Builder(ThriftVariableWidthBlock other) {
            this.positionCount = other.positionCount;
            this.slice = other.slice;
            this.offsets = other.offsets;
            this.valueIsNull = other.valueIsNull;
        }
    
        @ThriftConstructor
        public ThriftVariableWidthBlock build() {
            ThriftVariableWidthBlock result = new ThriftVariableWidthBlock (
                this.positionCount,
                this.slice,
                this.offsets,
                this.valueIsNull
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftVariableWidthBlock");
    private final int positionCount;
    public static final int _POSITIONCOUNT = 1;
    private static final TField POSITION_COUNT_FIELD_DESC = new TField("positionCount", TType.I32, (short)1);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftSlice slice;
    public static final int _SLICE = 2;
    private static final TField SLICE_FIELD_DESC = new TField("slice", TType.STRUCT, (short)2);
        private final List<Integer> offsets;
    public static final int _OFFSETS = 3;
    private static final TField OFFSETS_FIELD_DESC = new TField("offsets", TType.LIST, (short)3);
        private final List<Boolean> valueIsNull;
    public static final int _VALUEISNULL = 4;
    private static final TField VALUE_IS_NULL_FIELD_DESC = new TField("valueIsNull", TType.LIST, (short)4);
    static {
      NAMES_TO_IDS.put("positionCount", 1);
      THRIFT_NAMES_TO_IDS.put("positionCount", 1);
      FIELD_METADATA.put(1, POSITION_COUNT_FIELD_DESC);
      NAMES_TO_IDS.put("slice", 2);
      THRIFT_NAMES_TO_IDS.put("slice", 2);
      FIELD_METADATA.put(2, SLICE_FIELD_DESC);
      NAMES_TO_IDS.put("offsets", 3);
      THRIFT_NAMES_TO_IDS.put("offsets", 3);
      FIELD_METADATA.put(3, OFFSETS_FIELD_DESC);
      NAMES_TO_IDS.put("valueIsNull", 4);
      THRIFT_NAMES_TO_IDS.put("valueIsNull", 4);
      FIELD_METADATA.put(4, VALUE_IS_NULL_FIELD_DESC);
    }
    
    
    @com.facebook.swift.codec.ThriftField(value=1, name="positionCount", requiredness=Requiredness.NONE)
    public int getPositionCount() { return positionCount; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="slice", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftSlice getSlice() { return slice; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="offsets", requiredness=Requiredness.NONE)
    public List<Integer> getOffsets() { return offsets; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="valueIsNull", requiredness=Requiredness.OPTIONAL)
    public List<Boolean> getValueIsNull() { return valueIsNull; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("positionCount", positionCount);
        helper.add("slice", slice);
        helper.add("offsets", offsets);
        helper.add("valueIsNull", valueIsNull);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftVariableWidthBlock other = (ThriftVariableWidthBlock)o;
    
        return
            Objects.equals(positionCount, other.positionCount) &&
            Objects.equals(slice, other.slice) &&
            Objects.equals(offsets, other.offsets) &&
            Objects.equals(valueIsNull, other.valueIsNull) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            positionCount,
            slice,
            offsets,
            valueIsNull
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftVariableWidthBlock> asReader() {
      return ThriftVariableWidthBlock::read0;
    }
    
    public static ThriftVariableWidthBlock read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftVariableWidthBlock.NAMES_TO_IDS, ThriftVariableWidthBlock.THRIFT_NAMES_TO_IDS, ThriftVariableWidthBlock.FIELD_METADATA);
      ThriftVariableWidthBlock.Builder builder = new ThriftVariableWidthBlock.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _POSITIONCOUNT:
          if (__field.type == TType.I32) {
            int positionCount = oprot.readI32();
            builder.setPositionCount(positionCount);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _SLICE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftSlice slice = com.facebook.presto.common.experimental.auto_gen.ThriftSlice.read0(oprot);
            builder.setSlice(slice);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _OFFSETS:
          if (__field.type == TType.LIST) {
            List<Integer> offsets;
                {
                TList _list = oprot.readListBegin();
                offsets = new ArrayList<Integer>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    int _value1 = oprot.readI32();
                    offsets.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setOffsets(offsets);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _VALUEISNULL:
          if (__field.type == TType.LIST) {
            List<Boolean> valueIsNull;
                {
                TList _list = oprot.readListBegin();
                valueIsNull = new ArrayList<Boolean>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    boolean _value1 = oprot.readBool();
                    valueIsNull.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setValueIsNull(valueIsNull);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(POSITION_COUNT_FIELD_DESC);
      oprot.writeI32(this.positionCount);
      oprot.writeFieldEnd();
      if (slice != null) {
        oprot.writeFieldBegin(SLICE_FIELD_DESC);
        this.slice.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (offsets != null) {
        oprot.writeFieldBegin(OFFSETS_FIELD_DESC);
        List<Integer> _iter0 = offsets;
        oprot.writeListBegin(new TList(TType.I32, _iter0.size()));
            for (int _iter1 : _iter0) {
              oprot.writeI32(_iter1);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      if (valueIsNull != null) {
        oprot.writeFieldBegin(VALUE_IS_NULL_FIELD_DESC);
        List<Boolean>  _iter0 = valueIsNull;
        oprot.writeListBegin(new TList(TType.BOOL, _iter0.size()));
            for (boolean _iter1 : _iter0) {
              oprot.writeBool(_iter1);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftVariableWidthBlockLazy {
        private static final ThriftVariableWidthBlock _DEFAULT = new ThriftVariableWidthBlock.Builder().build();
    }
    
    public static ThriftVariableWidthBlock defaultInstance() {
        return  _ThriftVariableWidthBlockLazy._DEFAULT;
    }
}
