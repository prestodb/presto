/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftRange", builder=ThriftRange.Builder.class)
public final class ThriftRange implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftRange(
        @com.facebook.swift.codec.ThriftField(value=1, name="low", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftMarker low,
        @com.facebook.swift.codec.ThriftField(value=2, name="high", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftMarker high
    ) {
        this.low = low;
        this.high = high;
    }
    
    @ThriftConstructor
    protected ThriftRange() {
      this.low = null;
      this.high = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftRange other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftMarker low = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftMarker high = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="low", requiredness=Requiredness.NONE)    public Builder setLow(com.facebook.presto.common.experimental.auto_gen.ThriftMarker low) {
            this.low = low;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftMarker getLow() { return low; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="high", requiredness=Requiredness.NONE)    public Builder setHigh(com.facebook.presto.common.experimental.auto_gen.ThriftMarker high) {
            this.high = high;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftMarker getHigh() { return high; }
    
        public Builder() { }
        public Builder(ThriftRange other) {
            this.low = other.low;
            this.high = other.high;
        }
    
        @ThriftConstructor
        public ThriftRange build() {
            ThriftRange result = new ThriftRange (
                this.low,
                this.high
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftRange");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftMarker low;
    public static final int _LOW = 1;
    private static final TField LOW_FIELD_DESC = new TField("low", TType.STRUCT, (short)1);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftMarker high;
    public static final int _HIGH = 2;
    private static final TField HIGH_FIELD_DESC = new TField("high", TType.STRUCT, (short)2);
    static {
      NAMES_TO_IDS.put("low", 1);
      THRIFT_NAMES_TO_IDS.put("low", 1);
      FIELD_METADATA.put(1, LOW_FIELD_DESC);
      NAMES_TO_IDS.put("high", 2);
      THRIFT_NAMES_TO_IDS.put("high", 2);
      FIELD_METADATA.put(2, HIGH_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="low", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftMarker getLow() { return low; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="high", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftMarker getHigh() { return high; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("low", low);
        helper.add("high", high);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftRange other = (ThriftRange)o;
    
        return
            Objects.equals(low, other.low) &&
            Objects.equals(high, other.high) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            low,
            high
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftRange> asReader() {
      return ThriftRange::read0;
    }
    
    public static ThriftRange read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftRange.NAMES_TO_IDS, ThriftRange.THRIFT_NAMES_TO_IDS, ThriftRange.FIELD_METADATA);
      ThriftRange.Builder builder = new ThriftRange.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _LOW:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftMarker low = com.facebook.presto.common.experimental.auto_gen.ThriftMarker.read0(oprot);
            builder.setLow(low);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _HIGH:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftMarker high = com.facebook.presto.common.experimental.auto_gen.ThriftMarker.read0(oprot);
            builder.setHigh(high);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (low != null) {
        oprot.writeFieldBegin(LOW_FIELD_DESC);
        this.low.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (high != null) {
        oprot.writeFieldBegin(HIGH_FIELD_DESC);
        this.high.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftRangeLazy {
        private static final ThriftRange _DEFAULT = new ThriftRange.Builder().build();
    }
    
    public static ThriftRange defaultInstance() {
        return  _ThriftRangeLazy._DEFAULT;
    }
}
