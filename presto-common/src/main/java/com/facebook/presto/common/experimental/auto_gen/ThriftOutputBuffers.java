/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftOutputBuffers", builder=ThriftOutputBuffers.Builder.class)
public final class ThriftOutputBuffers implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftOutputBuffers(
        @com.facebook.swift.codec.ThriftField(value=1, name="type", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftBufferType type,
        @com.facebook.swift.codec.ThriftField(value=2, name="version", requiredness=Requiredness.NONE) final long version,
        @com.facebook.swift.codec.ThriftField(value=3, name="noMoreBufferIds", requiredness=Requiredness.NONE) final boolean noMoreBufferIds,
        @com.facebook.swift.codec.ThriftField(value=4, name="buffers", requiredness=Requiredness.NONE) final Map<Integer, Integer> buffers
    ) {
        this.type = type;
        this.version = version;
        this.noMoreBufferIds = noMoreBufferIds;
        this.buffers = buffers;
    }
    
    @ThriftConstructor
    protected ThriftOutputBuffers() {
      this.type = com.facebook.presto.common.experimental.auto_gen.ThriftBufferType.fromInteger(0);
      this.version = 0L;
      this.noMoreBufferIds = false;
      this.buffers = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftOutputBuffers other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftBufferType type = com.facebook.presto.common.experimental.auto_gen.ThriftBufferType.fromInteger(0);
        private long version = 0L;
        private boolean noMoreBufferIds = false;
        private Map<Integer, Integer> buffers = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="type", requiredness=Requiredness.NONE)    public Builder setType(com.facebook.presto.common.experimental.auto_gen.ThriftBufferType type) {
            this.type = type;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftBufferType getType() { return type; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="version", requiredness=Requiredness.NONE)    public Builder setVersion(long version) {
            this.version = version;
            return this;
        }
    
        public long getVersion() { return version; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="noMoreBufferIds", requiredness=Requiredness.NONE)    public Builder setNoMoreBufferIds(boolean noMoreBufferIds) {
            this.noMoreBufferIds = noMoreBufferIds;
            return this;
        }
    
        public boolean isNoMoreBufferIds() { return noMoreBufferIds; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="buffers", requiredness=Requiredness.NONE)    public Builder setBuffers(Map<Integer, Integer> buffers) {
            this.buffers = buffers;
            return this;
        }
    
        public Map<Integer, Integer> getBuffers() { return buffers; }
    
        public Builder() { }
        public Builder(ThriftOutputBuffers other) {
            this.type = other.type;
            this.version = other.version;
            this.noMoreBufferIds = other.noMoreBufferIds;
            this.buffers = other.buffers;
        }
    
        @ThriftConstructor
        public ThriftOutputBuffers build() {
            ThriftOutputBuffers result = new ThriftOutputBuffers (
                this.type,
                this.version,
                this.noMoreBufferIds,
                this.buffers
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftOutputBuffers");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftBufferType type;
    public static final int _TYPE = 1;
    private static final TField TYPE_FIELD_DESC = new TField("type", TType.I32, (short)1);
        private final long version;
    public static final int _VERSION = 2;
    private static final TField VERSION_FIELD_DESC = new TField("version", TType.I64, (short)2);
        private final boolean noMoreBufferIds;
    public static final int _NOMOREBUFFERIDS = 3;
    private static final TField NO_MORE_BUFFER_IDS_FIELD_DESC = new TField("noMoreBufferIds", TType.BOOL, (short)3);
        private final Map<Integer, Integer> buffers;
    public static final int _BUFFERS = 4;
    private static final TField BUFFERS_FIELD_DESC = new TField("buffers", TType.MAP, (short)4);
    static {
      NAMES_TO_IDS.put("type", 1);
      THRIFT_NAMES_TO_IDS.put("type", 1);
      FIELD_METADATA.put(1, TYPE_FIELD_DESC);
      NAMES_TO_IDS.put("version", 2);
      THRIFT_NAMES_TO_IDS.put("version", 2);
      FIELD_METADATA.put(2, VERSION_FIELD_DESC);
      NAMES_TO_IDS.put("noMoreBufferIds", 3);
      THRIFT_NAMES_TO_IDS.put("noMoreBufferIds", 3);
      FIELD_METADATA.put(3, NO_MORE_BUFFER_IDS_FIELD_DESC);
      NAMES_TO_IDS.put("buffers", 4);
      THRIFT_NAMES_TO_IDS.put("buffers", 4);
      FIELD_METADATA.put(4, BUFFERS_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="type", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftBufferType getType() { return type; }

    
    
    @com.facebook.swift.codec.ThriftField(value=2, name="version", requiredness=Requiredness.NONE)
    public long getVersion() { return version; }

    
    
    @com.facebook.swift.codec.ThriftField(value=3, name="noMoreBufferIds", requiredness=Requiredness.NONE)
    public boolean isNoMoreBufferIds() { return noMoreBufferIds; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="buffers", requiredness=Requiredness.NONE)
    public Map<Integer, Integer> getBuffers() { return buffers; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("type", type);
        helper.add("version", version);
        helper.add("noMoreBufferIds", noMoreBufferIds);
        helper.add("buffers", buffers);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftOutputBuffers other = (ThriftOutputBuffers)o;
    
        return
            Objects.equals(type, other.type) &&
            Objects.equals(version, other.version) &&
            Objects.equals(noMoreBufferIds, other.noMoreBufferIds) &&
            Objects.equals(buffers, other.buffers) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            type,
            version,
            noMoreBufferIds,
            buffers
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftOutputBuffers> asReader() {
      return ThriftOutputBuffers::read0;
    }
    
    public static ThriftOutputBuffers read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftOutputBuffers.NAMES_TO_IDS, ThriftOutputBuffers.THRIFT_NAMES_TO_IDS, ThriftOutputBuffers.FIELD_METADATA);
      ThriftOutputBuffers.Builder builder = new ThriftOutputBuffers.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _TYPE:
          if (__field.type == TType.I32) {
            com.facebook.presto.common.experimental.auto_gen.ThriftBufferType type = com.facebook.presto.common.experimental.auto_gen.ThriftBufferType.fromInteger(oprot.readI32());
            builder.setType(type);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _VERSION:
          if (__field.type == TType.I64) {
            long version = oprot.readI64();
            builder.setVersion(version);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _NOMOREBUFFERIDS:
          if (__field.type == TType.BOOL) {
            boolean noMoreBufferIds = oprot.readBool();
            builder.setNoMoreBufferIds(noMoreBufferIds);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _BUFFERS:
          if (__field.type == TType.MAP) {
            Map<Integer, Integer> buffers;
                {
                TMap _map = oprot.readMapBegin();
                buffers = new HashMap<Integer, Integer>(Math.max(0, _map.size));
                for (int _i = 0; (_map.size < 0) ? oprot.peekMap() : (_i < _map.size); _i++) {
                    
                    int _key1 = oprot.readI32();
                    int _value1 = oprot.readI32();
                    buffers.put(_key1, _value1);
                }
                }
                oprot.readMapEnd();
            builder.setBuffers(buffers);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(TYPE_FIELD_DESC);
      oprot.writeI32(this.type == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.type));
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(VERSION_FIELD_DESC);
      oprot.writeI64(this.version);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NO_MORE_BUFFER_IDS_FIELD_DESC);
      oprot.writeBool(this.noMoreBufferIds);
      oprot.writeFieldEnd();
      if (buffers != null) {
        oprot.writeFieldBegin(BUFFERS_FIELD_DESC);
        Map<Integer, Integer> _iter0 = buffers;
        oprot.writeMapBegin(new TMap(TType.I32, TType.I32, _iter0.size()));
            for (Map.Entry<Integer, Integer> _iter1 : _iter0.entrySet()) {
              oprot.writeI32(_iter1.getKey());
              oprot.writeI32(_iter1.getValue());
            }
            oprot.writeMapEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftOutputBuffersLazy {
        private static final ThriftOutputBuffers _DEFAULT = new ThriftOutputBuffers.Builder().build();
    }
    
    public static ThriftOutputBuffers defaultInstance() {
        return  _ThriftOutputBuffersLazy._DEFAULT;
    }
}
