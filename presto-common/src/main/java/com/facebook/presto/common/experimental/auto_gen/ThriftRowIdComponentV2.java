/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 * <p>
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 * @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.SwiftGenerated;
import com.facebook.swift.codec.ThriftConstructor;
import com.facebook.swift.codec.ThriftField;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftStruct;
import org.apache.fbthrift.TException;
import org.apache.fbthrift.protocol.TField;
import org.apache.fbthrift.protocol.TProtocol;
import org.apache.fbthrift.protocol.TProtocolUtil;
import org.apache.fbthrift.protocol.TStruct;
import org.apache.fbthrift.protocol.TType;

import javax.annotation.Nullable;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import static com.google.common.base.MoreObjects.ToStringHelper;
import static com.google.common.base.MoreObjects.toStringHelper;

@SwiftGenerated
@ThriftStruct(value = "ThriftRowIdComponentV2", builder = ThriftRowIdComponentV2.Builder.class)
public final class ThriftRowIdComponentV2
        implements com.facebook.thrift.payload.ThriftSerializable
{
    @ThriftConstructor
    public ThriftRowIdComponentV2(
            @ThriftField(value = 1, name = "metadataVersion", requiredness = Requiredness.NONE) final long metadataVersion,
            @ThriftField(value = 2, name = "partitionId", requiredness = Requiredness.NONE) final long partitionId,
            @ThriftField(value = 3, name = "tableGuid", requiredness = Requiredness.NONE) final String tableGuid
    )
    {
        this.metadataVersion = metadataVersion;
        this.partitionId = partitionId;
        this.tableGuid = tableGuid;
    }

    @ThriftConstructor
    protected ThriftRowIdComponentV2()
    {
        this.metadataVersion = 0L;
        this.partitionId = 0L;
        this.tableGuid = null;
    }

    public static Builder builder()
    {
        return new Builder();
    }

    public static Builder builder(ThriftRowIdComponentV2 other)
    {
        return new Builder(other);
    }

    public static class Builder
    {
        private long metadataVersion = 0L;
        private long partitionId = 0L;
        private String tableGuid = null;

        @ThriftField(value = 1, name = "metadataVersion", requiredness = Requiredness.NONE)
        public Builder setMetadataVersion(long metadataVersion)
        {
            this.metadataVersion = metadataVersion;
            return this;
        }

        public long getMetadataVersion() {return metadataVersion;}

        @ThriftField(value = 2, name = "partitionId", requiredness = Requiredness.NONE)
        public Builder setPartitionId(long partitionId)
        {
            this.partitionId = partitionId;
            return this;
        }

        public long getPartitionId() {return partitionId;}

        @ThriftField(value = 3, name = "tableGuid", requiredness = Requiredness.NONE)
        public Builder setTableGuid(String tableGuid)
        {
            this.tableGuid = tableGuid;
            return this;
        }

        public String getTableGuid() {return tableGuid;}

        public Builder() {}

        public Builder(ThriftRowIdComponentV2 other)
        {
            this.metadataVersion = other.metadataVersion;
            this.partitionId = other.partitionId;
            this.tableGuid = other.tableGuid;
        }

        @ThriftConstructor
        public ThriftRowIdComponentV2 build()
        {
            ThriftRowIdComponentV2 result = new ThriftRowIdComponentV2(
                    this.metadataVersion,
                    this.partitionId,
                    this.tableGuid
            );
            return result;
        }
    }

    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftRowIdComponentV2");
    private final long metadataVersion;
    public static final int _METADATAVERSION = 1;
    private static final TField METADATA_VERSION_FIELD_DESC = new TField("metadataVersion", TType.I64, (short) 1);
    private final long partitionId;
    public static final int _PARTITIONID = 2;
    private static final TField PARTITION_ID_FIELD_DESC = new TField("partitionId", TType.I64, (short) 2);
    private final String tableGuid;
    public static final int _TABLEGUID = 3;
    private static final TField TABLE_GUID_FIELD_DESC = new TField("tableGuid", TType.STRING, (short) 3);

    static {
        NAMES_TO_IDS.put("metadataVersion", 1);
        THRIFT_NAMES_TO_IDS.put("metadataVersion", 1);
        FIELD_METADATA.put(1, METADATA_VERSION_FIELD_DESC);
        NAMES_TO_IDS.put("partitionId", 2);
        THRIFT_NAMES_TO_IDS.put("partitionId", 2);
        FIELD_METADATA.put(2, PARTITION_ID_FIELD_DESC);
        NAMES_TO_IDS.put("tableGuid", 3);
        THRIFT_NAMES_TO_IDS.put("tableGuid", 3);
        FIELD_METADATA.put(3, TABLE_GUID_FIELD_DESC);
    }

    @ThriftField(value = 1, name = "metadataVersion", requiredness = Requiredness.NONE)
    public long getMetadataVersion() {return metadataVersion;}

    @ThriftField(value = 2, name = "partitionId", requiredness = Requiredness.NONE)
    public long getPartitionId() {return partitionId;}

    @Nullable
    @ThriftField(value = 3, name = "tableGuid", requiredness = Requiredness.NONE)
    public String getTableGuid() {return tableGuid;}

    @Override
    public String toString()
    {
        ToStringHelper helper = toStringHelper(this);
        helper.add("metadataVersion", metadataVersion);
        helper.add("partitionId", partitionId);
        helper.add("tableGuid", tableGuid);
        return helper.toString();
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        ThriftRowIdComponentV2 other = (ThriftRowIdComponentV2) o;

        return
                Objects.equals(metadataVersion, other.metadataVersion) &&
                        Objects.equals(partitionId, other.partitionId) &&
                        Objects.equals(tableGuid, other.tableGuid) &&
                        true;
    }

    @Override
    public int hashCode()
    {
        return Arrays.deepHashCode(new Object[] {
                metadataVersion,
                partitionId,
                tableGuid
        });
    }

    public static com.facebook.thrift.payload.Reader<ThriftRowIdComponentV2> asReader()
    {
        return ThriftRowIdComponentV2::read0;
    }

    public static ThriftRowIdComponentV2 read0(TProtocol oprot)
            throws TException
    {
        TField __field;
        oprot.readStructBegin(ThriftRowIdComponentV2.NAMES_TO_IDS, ThriftRowIdComponentV2.THRIFT_NAMES_TO_IDS, ThriftRowIdComponentV2.FIELD_METADATA);
        Builder builder = new Builder();
        while (true) {
            __field = oprot.readFieldBegin();
            if (__field.type == TType.STOP) {
                break;
            }
            switch (__field.id) {
                case _METADATAVERSION:
                    if (__field.type == TType.I64) {
                        long metadataVersion = oprot.readI64();
                        builder.setMetadataVersion(metadataVersion);
                    }
                    else {
                        TProtocolUtil.skip(oprot, __field.type);
                    }
                    break;
                case _PARTITIONID:
                    if (__field.type == TType.I64) {
                        long partitionId = oprot.readI64();
                        builder.setPartitionId(partitionId);
                    }
                    else {
                        TProtocolUtil.skip(oprot, __field.type);
                    }
                    break;
                case _TABLEGUID:
                    if (__field.type == TType.STRING) {
                        String tableGuid = oprot.readString();
                        builder.setTableGuid(tableGuid);
                    }
                    else {
                        TProtocolUtil.skip(oprot, __field.type);
                    }
                    break;
                default:
                    TProtocolUtil.skip(oprot, __field.type);
                    break;
            }
            oprot.readFieldEnd();
        }
        oprot.readStructEnd();
        return builder.build();
    }

    public void write0(TProtocol oprot)
            throws TException
    {
        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(METADATA_VERSION_FIELD_DESC);
        oprot.writeI64(this.metadataVersion);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(PARTITION_ID_FIELD_DESC);
        oprot.writeI64(this.partitionId);
        oprot.writeFieldEnd();
        if (tableGuid != null) {
            oprot.writeFieldBegin(TABLE_GUID_FIELD_DESC);
            oprot.writeString(this.tableGuid);
            oprot.writeFieldEnd();
        }
        oprot.writeFieldStop();
        oprot.writeStructEnd();
    }

    private static class _ThriftRowIdComponentV2Lazy
    {
        private static final ThriftRowIdComponentV2 _DEFAULT = new Builder().build();
    }

    public static ThriftRowIdComponentV2 defaultInstance()
    {
        return _ThriftRowIdComponentV2Lazy._DEFAULT;
    }
}
