/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftHiveColumnHandle", builder=ThriftHiveColumnHandle.Builder.class)
public final class ThriftHiveColumnHandle implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftHiveColumnHandle(
        @com.facebook.swift.codec.ThriftField(value=1, name="baseHandle", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftBaseHiveColumnHandle baseHandle,
        @com.facebook.swift.codec.ThriftField(value=2, name="hiveType", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftHiveType hiveType,
        @com.facebook.swift.codec.ThriftField(value=3, name="typeName", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeName,
        @com.facebook.swift.codec.ThriftField(value=4, name="hiveColumnIndex", requiredness=Requiredness.NONE) final int hiveColumnIndex,
        @com.facebook.swift.codec.ThriftField(value=5, name="partialAggregation", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftAggregation partialAggregation
    ) {
        this.baseHandle = baseHandle;
        this.hiveType = hiveType;
        this.typeName = typeName;
        this.hiveColumnIndex = hiveColumnIndex;
        this.partialAggregation = partialAggregation;
    }
    
    @ThriftConstructor
    protected ThriftHiveColumnHandle() {
      this.baseHandle = null;
      this.hiveType = null;
      this.typeName = null;
      this.hiveColumnIndex = 0;
      this.partialAggregation = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftHiveColumnHandle other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftBaseHiveColumnHandle baseHandle = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftHiveType hiveType = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeName = null;
        private int hiveColumnIndex = 0;
        private com.facebook.presto.common.experimental.auto_gen.ThriftAggregation partialAggregation = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="baseHandle", requiredness=Requiredness.NONE)    public Builder setBaseHandle(com.facebook.presto.common.experimental.auto_gen.ThriftBaseHiveColumnHandle baseHandle) {
            this.baseHandle = baseHandle;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftBaseHiveColumnHandle getBaseHandle() { return baseHandle; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="hiveType", requiredness=Requiredness.NONE)    public Builder setHiveType(com.facebook.presto.common.experimental.auto_gen.ThriftHiveType hiveType) {
            this.hiveType = hiveType;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftHiveType getHiveType() { return hiveType; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="typeName", requiredness=Requiredness.NONE)    public Builder setTypeName(com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeName) {
            this.typeName = typeName;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature getTypeName() { return typeName; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="hiveColumnIndex", requiredness=Requiredness.NONE)    public Builder setHiveColumnIndex(int hiveColumnIndex) {
            this.hiveColumnIndex = hiveColumnIndex;
            return this;
        }
    
        public int getHiveColumnIndex() { return hiveColumnIndex; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="partialAggregation", requiredness=Requiredness.OPTIONAL)    public Builder setPartialAggregation(com.facebook.presto.common.experimental.auto_gen.ThriftAggregation partialAggregation) {
            this.partialAggregation = partialAggregation;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftAggregation getPartialAggregation() { return partialAggregation; }
    
        public Builder() { }
        public Builder(ThriftHiveColumnHandle other) {
            this.baseHandle = other.baseHandle;
            this.hiveType = other.hiveType;
            this.typeName = other.typeName;
            this.hiveColumnIndex = other.hiveColumnIndex;
            this.partialAggregation = other.partialAggregation;
        }
    
        @ThriftConstructor
        public ThriftHiveColumnHandle build() {
            ThriftHiveColumnHandle result = new ThriftHiveColumnHandle (
                this.baseHandle,
                this.hiveType,
                this.typeName,
                this.hiveColumnIndex,
                this.partialAggregation
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftHiveColumnHandle");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftBaseHiveColumnHandle baseHandle;
    public static final int _BASEHANDLE = 1;
    private static final TField BASE_HANDLE_FIELD_DESC = new TField("baseHandle", TType.STRUCT, (short)1);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftHiveType hiveType;
    public static final int _HIVETYPE = 2;
    private static final TField HIVE_TYPE_FIELD_DESC = new TField("hiveType", TType.STRUCT, (short)2);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeName;
    public static final int _TYPENAME = 3;
    private static final TField TYPE_NAME_FIELD_DESC = new TField("typeName", TType.STRUCT, (short)3);
        private final int hiveColumnIndex;
    public static final int _HIVECOLUMNINDEX = 4;
    private static final TField HIVE_COLUMN_INDEX_FIELD_DESC = new TField("hiveColumnIndex", TType.I32, (short)4);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftAggregation partialAggregation;
    public static final int _PARTIALAGGREGATION = 5;
    private static final TField PARTIAL_AGGREGATION_FIELD_DESC = new TField("partialAggregation", TType.STRUCT, (short)5);
    static {
      NAMES_TO_IDS.put("baseHandle", 1);
      THRIFT_NAMES_TO_IDS.put("baseHandle", 1);
      FIELD_METADATA.put(1, BASE_HANDLE_FIELD_DESC);
      NAMES_TO_IDS.put("hiveType", 2);
      THRIFT_NAMES_TO_IDS.put("hiveType", 2);
      FIELD_METADATA.put(2, HIVE_TYPE_FIELD_DESC);
      NAMES_TO_IDS.put("typeName", 3);
      THRIFT_NAMES_TO_IDS.put("typeName", 3);
      FIELD_METADATA.put(3, TYPE_NAME_FIELD_DESC);
      NAMES_TO_IDS.put("hiveColumnIndex", 4);
      THRIFT_NAMES_TO_IDS.put("hiveColumnIndex", 4);
      FIELD_METADATA.put(4, HIVE_COLUMN_INDEX_FIELD_DESC);
      NAMES_TO_IDS.put("partialAggregation", 5);
      THRIFT_NAMES_TO_IDS.put("partialAggregation", 5);
      FIELD_METADATA.put(5, PARTIAL_AGGREGATION_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="baseHandle", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftBaseHiveColumnHandle getBaseHandle() { return baseHandle; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="hiveType", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftHiveType getHiveType() { return hiveType; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="typeName", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature getTypeName() { return typeName; }

    
    
    @com.facebook.swift.codec.ThriftField(value=4, name="hiveColumnIndex", requiredness=Requiredness.NONE)
    public int getHiveColumnIndex() { return hiveColumnIndex; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=5, name="partialAggregation", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftAggregation getPartialAggregation() { return partialAggregation; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("baseHandle", baseHandle);
        helper.add("hiveType", hiveType);
        helper.add("typeName", typeName);
        helper.add("hiveColumnIndex", hiveColumnIndex);
        helper.add("partialAggregation", partialAggregation);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftHiveColumnHandle other = (ThriftHiveColumnHandle)o;
    
        return
            Objects.equals(baseHandle, other.baseHandle) &&
            Objects.equals(hiveType, other.hiveType) &&
            Objects.equals(typeName, other.typeName) &&
            Objects.equals(hiveColumnIndex, other.hiveColumnIndex) &&
            Objects.equals(partialAggregation, other.partialAggregation) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            baseHandle,
            hiveType,
            typeName,
            hiveColumnIndex,
            partialAggregation
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftHiveColumnHandle> asReader() {
      return ThriftHiveColumnHandle::read0;
    }
    
    public static ThriftHiveColumnHandle read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftHiveColumnHandle.NAMES_TO_IDS, ThriftHiveColumnHandle.THRIFT_NAMES_TO_IDS, ThriftHiveColumnHandle.FIELD_METADATA);
      ThriftHiveColumnHandle.Builder builder = new ThriftHiveColumnHandle.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _BASEHANDLE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftBaseHiveColumnHandle baseHandle = com.facebook.presto.common.experimental.auto_gen.ThriftBaseHiveColumnHandle.read0(oprot);
            builder.setBaseHandle(baseHandle);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _HIVETYPE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftHiveType hiveType = com.facebook.presto.common.experimental.auto_gen.ThriftHiveType.read0(oprot);
            builder.setHiveType(hiveType);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TYPENAME:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeName = com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature.read0(oprot);
            builder.setTypeName(typeName);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _HIVECOLUMNINDEX:
          if (__field.type == TType.I32) {
            int hiveColumnIndex = oprot.readI32();
            builder.setHiveColumnIndex(hiveColumnIndex);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PARTIALAGGREGATION:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftAggregation partialAggregation = com.facebook.presto.common.experimental.auto_gen.ThriftAggregation.read0(oprot);
            builder.setPartialAggregation(partialAggregation);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (baseHandle != null) {
        oprot.writeFieldBegin(BASE_HANDLE_FIELD_DESC);
        this.baseHandle.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (hiveType != null) {
        oprot.writeFieldBegin(HIVE_TYPE_FIELD_DESC);
        this.hiveType.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (typeName != null) {
        oprot.writeFieldBegin(TYPE_NAME_FIELD_DESC);
        this.typeName.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(HIVE_COLUMN_INDEX_FIELD_DESC);
      oprot.writeI32(this.hiveColumnIndex);
      oprot.writeFieldEnd();
      if (partialAggregation != null) {
        oprot.writeFieldBegin(PARTIAL_AGGREGATION_FIELD_DESC);
        this.partialAggregation.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftHiveColumnHandleLazy {
        private static final ThriftHiveColumnHandle _DEFAULT = new ThriftHiveColumnHandle.Builder().build();
    }
    
    public static ThriftHiveColumnHandle defaultInstance() {
        return  _ThriftHiveColumnHandleLazy._DEFAULT;
    }
}
