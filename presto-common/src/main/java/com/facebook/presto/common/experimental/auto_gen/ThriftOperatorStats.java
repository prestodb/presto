/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftOperatorStats", builder=ThriftOperatorStats.Builder.class)
public final class ThriftOperatorStats implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftOperatorStats(
        @com.facebook.swift.codec.ThriftField(value=1, name="stageId", requiredness=Requiredness.NONE) final int stageId,
        @com.facebook.swift.codec.ThriftField(value=2, name="stageExecutionId", requiredness=Requiredness.NONE) final int stageExecutionId,
        @com.facebook.swift.codec.ThriftField(value=3, name="pipelineId", requiredness=Requiredness.NONE) final int pipelineId,
        @com.facebook.swift.codec.ThriftField(value=4, name="operatorId", requiredness=Requiredness.NONE) final int operatorId,
        @com.facebook.swift.codec.ThriftField(value=5, name="planNodeId", requiredness=Requiredness.NONE) final String planNodeId,
        @com.facebook.swift.codec.ThriftField(value=6, name="operatorType", requiredness=Requiredness.NONE) final String operatorType,
        @com.facebook.swift.codec.ThriftField(value=7, name="totalDrivers", requiredness=Requiredness.NONE) final long totalDrivers,
        @com.facebook.swift.codec.ThriftField(value=8, name="isBlockedCalls", requiredness=Requiredness.NONE) final long isBlockedCalls,
        @com.facebook.swift.codec.ThriftField(value=9, name="isBlockedWallInNanos", requiredness=Requiredness.NONE) final long isBlockedWallInNanos,
        @com.facebook.swift.codec.ThriftField(value=10, name="isBlockedCpuInNanos", requiredness=Requiredness.NONE) final long isBlockedCpuInNanos,
        @com.facebook.swift.codec.ThriftField(value=11, name="isBlockedAllocationInBytes", requiredness=Requiredness.NONE) final long isBlockedAllocationInBytes,
        @com.facebook.swift.codec.ThriftField(value=12, name="addInputCalls", requiredness=Requiredness.NONE) final long addInputCalls,
        @com.facebook.swift.codec.ThriftField(value=13, name="addInputWallInNanos", requiredness=Requiredness.NONE) final long addInputWallInNanos,
        @com.facebook.swift.codec.ThriftField(value=14, name="addInputCpuInNanos", requiredness=Requiredness.NONE) final long addInputCpuInNanos,
        @com.facebook.swift.codec.ThriftField(value=15, name="addInputAllocationInBytes", requiredness=Requiredness.NONE) final long addInputAllocationInBytes,
        @com.facebook.swift.codec.ThriftField(value=16, name="rawInputDataSizeInBytes", requiredness=Requiredness.NONE) final long rawInputDataSizeInBytes,
        @com.facebook.swift.codec.ThriftField(value=17, name="rawInputPositions", requiredness=Requiredness.NONE) final long rawInputPositions,
        @com.facebook.swift.codec.ThriftField(value=18, name="inputDataSizeInBytes", requiredness=Requiredness.NONE) final long inputDataSizeInBytes,
        @com.facebook.swift.codec.ThriftField(value=19, name="inputPositions", requiredness=Requiredness.NONE) final long inputPositions,
        @com.facebook.swift.codec.ThriftField(value=20, name="sumSquaredInputPositions", requiredness=Requiredness.NONE) final double sumSquaredInputPositions,
        @com.facebook.swift.codec.ThriftField(value=21, name="getOutputCalls", requiredness=Requiredness.NONE) final long getOutputCalls,
        @com.facebook.swift.codec.ThriftField(value=22, name="getOutputWallInNanos", requiredness=Requiredness.NONE) final long getOutputWallInNanos,
        @com.facebook.swift.codec.ThriftField(value=23, name="getOutputCpuInNanos", requiredness=Requiredness.NONE) final long getOutputCpuInNanos,
        @com.facebook.swift.codec.ThriftField(value=24, name="getOutputAllocationInBytes", requiredness=Requiredness.NONE) final long getOutputAllocationInBytes,
        @com.facebook.swift.codec.ThriftField(value=25, name="outputDataSizeInBytes", requiredness=Requiredness.NONE) final long outputDataSizeInBytes,
        @com.facebook.swift.codec.ThriftField(value=26, name="outputPositions", requiredness=Requiredness.NONE) final long outputPositions,
        @com.facebook.swift.codec.ThriftField(value=27, name="physicalWrittenDataSizeInBytes", requiredness=Requiredness.NONE) final long physicalWrittenDataSizeInBytes,
        @com.facebook.swift.codec.ThriftField(value=28, name="additionalCpuInNanos", requiredness=Requiredness.NONE) final long additionalCpuInNanos,
        @com.facebook.swift.codec.ThriftField(value=29, name="blockedWallInNanos", requiredness=Requiredness.NONE) final long blockedWallInNanos,
        @com.facebook.swift.codec.ThriftField(value=30, name="finishCalls", requiredness=Requiredness.NONE) final long finishCalls,
        @com.facebook.swift.codec.ThriftField(value=31, name="finishWallInNanos", requiredness=Requiredness.NONE) final long finishWallInNanos,
        @com.facebook.swift.codec.ThriftField(value=32, name="finishCpuInNanos", requiredness=Requiredness.NONE) final long finishCpuInNanos,
        @com.facebook.swift.codec.ThriftField(value=33, name="finishAllocationInBytes", requiredness=Requiredness.NONE) final long finishAllocationInBytes,
        @com.facebook.swift.codec.ThriftField(value=34, name="userMemoryReservationInBytes", requiredness=Requiredness.NONE) final long userMemoryReservationInBytes,
        @com.facebook.swift.codec.ThriftField(value=35, name="revocableMemoryReservationInBytes", requiredness=Requiredness.NONE) final long revocableMemoryReservationInBytes,
        @com.facebook.swift.codec.ThriftField(value=36, name="systemMemoryReservationInBytes", requiredness=Requiredness.NONE) final long systemMemoryReservationInBytes,
        @com.facebook.swift.codec.ThriftField(value=37, name="peakUserMemoryReservationInBytes", requiredness=Requiredness.NONE) final long peakUserMemoryReservationInBytes,
        @com.facebook.swift.codec.ThriftField(value=38, name="peakSystemMemoryReservationInBytes", requiredness=Requiredness.NONE) final long peakSystemMemoryReservationInBytes,
        @com.facebook.swift.codec.ThriftField(value=39, name="peakTotalMemoryReservationInBytes", requiredness=Requiredness.NONE) final long peakTotalMemoryReservationInBytes,
        @com.facebook.swift.codec.ThriftField(value=40, name="spilledDataSizeInBytes", requiredness=Requiredness.NONE) final long spilledDataSizeInBytes,
        @com.facebook.swift.codec.ThriftField(value=41, name="blockedReason", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason blockedReason,
        @com.facebook.swift.codec.ThriftField(value=42, name="info", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftOperatorInfo info,
        @com.facebook.swift.codec.ThriftField(value=43, name="runtimeStats", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats runtimeStats,
        @com.facebook.swift.codec.ThriftField(value=44, name="dynamicFilterStats", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftDynamicFilterStats dynamicFilterStats,
        @com.facebook.swift.codec.ThriftField(value=45, name="nullJoinBuildKeyCount", requiredness=Requiredness.NONE) final long nullJoinBuildKeyCount,
        @com.facebook.swift.codec.ThriftField(value=46, name="joinBuildKeyCount", requiredness=Requiredness.NONE) final long joinBuildKeyCount,
        @com.facebook.swift.codec.ThriftField(value=47, name="nullJoinProbeKeyCount", requiredness=Requiredness.NONE) final long nullJoinProbeKeyCount,
        @com.facebook.swift.codec.ThriftField(value=48, name="joinProbeKeyCount", requiredness=Requiredness.NONE) final long joinProbeKeyCount
    ) {
        this.stageId = stageId;
        this.stageExecutionId = stageExecutionId;
        this.pipelineId = pipelineId;
        this.operatorId = operatorId;
        this.planNodeId = planNodeId;
        this.operatorType = operatorType;
        this.totalDrivers = totalDrivers;
        this.isBlockedCalls = isBlockedCalls;
        this.isBlockedWallInNanos = isBlockedWallInNanos;
        this.isBlockedCpuInNanos = isBlockedCpuInNanos;
        this.isBlockedAllocationInBytes = isBlockedAllocationInBytes;
        this.addInputCalls = addInputCalls;
        this.addInputWallInNanos = addInputWallInNanos;
        this.addInputCpuInNanos = addInputCpuInNanos;
        this.addInputAllocationInBytes = addInputAllocationInBytes;
        this.rawInputDataSizeInBytes = rawInputDataSizeInBytes;
        this.rawInputPositions = rawInputPositions;
        this.inputDataSizeInBytes = inputDataSizeInBytes;
        this.inputPositions = inputPositions;
        this.sumSquaredInputPositions = sumSquaredInputPositions;
        this.getOutputCalls = getOutputCalls;
        this.getOutputWallInNanos = getOutputWallInNanos;
        this.getOutputCpuInNanos = getOutputCpuInNanos;
        this.getOutputAllocationInBytes = getOutputAllocationInBytes;
        this.outputDataSizeInBytes = outputDataSizeInBytes;
        this.outputPositions = outputPositions;
        this.physicalWrittenDataSizeInBytes = physicalWrittenDataSizeInBytes;
        this.additionalCpuInNanos = additionalCpuInNanos;
        this.blockedWallInNanos = blockedWallInNanos;
        this.finishCalls = finishCalls;
        this.finishWallInNanos = finishWallInNanos;
        this.finishCpuInNanos = finishCpuInNanos;
        this.finishAllocationInBytes = finishAllocationInBytes;
        this.userMemoryReservationInBytes = userMemoryReservationInBytes;
        this.revocableMemoryReservationInBytes = revocableMemoryReservationInBytes;
        this.systemMemoryReservationInBytes = systemMemoryReservationInBytes;
        this.peakUserMemoryReservationInBytes = peakUserMemoryReservationInBytes;
        this.peakSystemMemoryReservationInBytes = peakSystemMemoryReservationInBytes;
        this.peakTotalMemoryReservationInBytes = peakTotalMemoryReservationInBytes;
        this.spilledDataSizeInBytes = spilledDataSizeInBytes;
        this.blockedReason = blockedReason;
        this.info = info;
        this.runtimeStats = runtimeStats;
        this.dynamicFilterStats = dynamicFilterStats;
        this.nullJoinBuildKeyCount = nullJoinBuildKeyCount;
        this.joinBuildKeyCount = joinBuildKeyCount;
        this.nullJoinProbeKeyCount = nullJoinProbeKeyCount;
        this.joinProbeKeyCount = joinProbeKeyCount;
    }
    
    @ThriftConstructor
    protected ThriftOperatorStats() {
      this.stageId = 0;
      this.stageExecutionId = 0;
      this.pipelineId = 0;
      this.operatorId = 0;
      this.planNodeId = null;
      this.operatorType = null;
      this.totalDrivers = 0L;
      this.isBlockedCalls = 0L;
      this.isBlockedWallInNanos = 0L;
      this.isBlockedCpuInNanos = 0L;
      this.isBlockedAllocationInBytes = 0L;
      this.addInputCalls = 0L;
      this.addInputWallInNanos = 0L;
      this.addInputCpuInNanos = 0L;
      this.addInputAllocationInBytes = 0L;
      this.rawInputDataSizeInBytes = 0L;
      this.rawInputPositions = 0L;
      this.inputDataSizeInBytes = 0L;
      this.inputPositions = 0L;
      this.sumSquaredInputPositions = 0.;
      this.getOutputCalls = 0L;
      this.getOutputWallInNanos = 0L;
      this.getOutputCpuInNanos = 0L;
      this.getOutputAllocationInBytes = 0L;
      this.outputDataSizeInBytes = 0L;
      this.outputPositions = 0L;
      this.physicalWrittenDataSizeInBytes = 0L;
      this.additionalCpuInNanos = 0L;
      this.blockedWallInNanos = 0L;
      this.finishCalls = 0L;
      this.finishWallInNanos = 0L;
      this.finishCpuInNanos = 0L;
      this.finishAllocationInBytes = 0L;
      this.userMemoryReservationInBytes = 0L;
      this.revocableMemoryReservationInBytes = 0L;
      this.systemMemoryReservationInBytes = 0L;
      this.peakUserMemoryReservationInBytes = 0L;
      this.peakSystemMemoryReservationInBytes = 0L;
      this.peakTotalMemoryReservationInBytes = 0L;
      this.spilledDataSizeInBytes = 0L;
      this.blockedReason = null;
      this.info = null;
      this.runtimeStats = null;
      this.dynamicFilterStats = null;
      this.nullJoinBuildKeyCount = 0L;
      this.joinBuildKeyCount = 0L;
      this.nullJoinProbeKeyCount = 0L;
      this.joinProbeKeyCount = 0L;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftOperatorStats other) {
      return new Builder(other);
    }

    public static class Builder {
        private int stageId = 0;
        private int stageExecutionId = 0;
        private int pipelineId = 0;
        private int operatorId = 0;
        private String planNodeId = null;
        private String operatorType = null;
        private long totalDrivers = 0L;
        private long isBlockedCalls = 0L;
        private long isBlockedWallInNanos = 0L;
        private long isBlockedCpuInNanos = 0L;
        private long isBlockedAllocationInBytes = 0L;
        private long addInputCalls = 0L;
        private long addInputWallInNanos = 0L;
        private long addInputCpuInNanos = 0L;
        private long addInputAllocationInBytes = 0L;
        private long rawInputDataSizeInBytes = 0L;
        private long rawInputPositions = 0L;
        private long inputDataSizeInBytes = 0L;
        private long inputPositions = 0L;
        private double sumSquaredInputPositions = 0.;
        private long getOutputCalls = 0L;
        private long getOutputWallInNanos = 0L;
        private long getOutputCpuInNanos = 0L;
        private long getOutputAllocationInBytes = 0L;
        private long outputDataSizeInBytes = 0L;
        private long outputPositions = 0L;
        private long physicalWrittenDataSizeInBytes = 0L;
        private long additionalCpuInNanos = 0L;
        private long blockedWallInNanos = 0L;
        private long finishCalls = 0L;
        private long finishWallInNanos = 0L;
        private long finishCpuInNanos = 0L;
        private long finishAllocationInBytes = 0L;
        private long userMemoryReservationInBytes = 0L;
        private long revocableMemoryReservationInBytes = 0L;
        private long systemMemoryReservationInBytes = 0L;
        private long peakUserMemoryReservationInBytes = 0L;
        private long peakSystemMemoryReservationInBytes = 0L;
        private long peakTotalMemoryReservationInBytes = 0L;
        private long spilledDataSizeInBytes = 0L;
        private com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason blockedReason = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftOperatorInfo info = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats runtimeStats = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftDynamicFilterStats dynamicFilterStats = null;
        private long nullJoinBuildKeyCount = 0L;
        private long joinBuildKeyCount = 0L;
        private long nullJoinProbeKeyCount = 0L;
        private long joinProbeKeyCount = 0L;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="stageId", requiredness=Requiredness.NONE)    public Builder setStageId(int stageId) {
            this.stageId = stageId;
            return this;
        }
    
        public int getStageId() { return stageId; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="stageExecutionId", requiredness=Requiredness.NONE)    public Builder setStageExecutionId(int stageExecutionId) {
            this.stageExecutionId = stageExecutionId;
            return this;
        }
    
        public int getStageExecutionId() { return stageExecutionId; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="pipelineId", requiredness=Requiredness.NONE)    public Builder setPipelineId(int pipelineId) {
            this.pipelineId = pipelineId;
            return this;
        }
    
        public int getPipelineId() { return pipelineId; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="operatorId", requiredness=Requiredness.NONE)    public Builder setOperatorId(int operatorId) {
            this.operatorId = operatorId;
            return this;
        }
    
        public int getOperatorId() { return operatorId; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="planNodeId", requiredness=Requiredness.NONE)    public Builder setPlanNodeId(String planNodeId) {
            this.planNodeId = planNodeId;
            return this;
        }
    
        public String getPlanNodeId() { return planNodeId; }
    
            @com.facebook.swift.codec.ThriftField(value=6, name="operatorType", requiredness=Requiredness.NONE)    public Builder setOperatorType(String operatorType) {
            this.operatorType = operatorType;
            return this;
        }
    
        public String getOperatorType() { return operatorType; }
    
            @com.facebook.swift.codec.ThriftField(value=7, name="totalDrivers", requiredness=Requiredness.NONE)    public Builder setTotalDrivers(long totalDrivers) {
            this.totalDrivers = totalDrivers;
            return this;
        }
    
        public long getTotalDrivers() { return totalDrivers; }
    
            @com.facebook.swift.codec.ThriftField(value=8, name="isBlockedCalls", requiredness=Requiredness.NONE)    public Builder setIsBlockedCalls(long isBlockedCalls) {
            this.isBlockedCalls = isBlockedCalls;
            return this;
        }
    
        public long getIsBlockedCalls() { return isBlockedCalls; }
    
            @com.facebook.swift.codec.ThriftField(value=9, name="isBlockedWallInNanos", requiredness=Requiredness.NONE)    public Builder setIsBlockedWallInNanos(long isBlockedWallInNanos) {
            this.isBlockedWallInNanos = isBlockedWallInNanos;
            return this;
        }
    
        public long getIsBlockedWallInNanos() { return isBlockedWallInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=10, name="isBlockedCpuInNanos", requiredness=Requiredness.NONE)    public Builder setIsBlockedCpuInNanos(long isBlockedCpuInNanos) {
            this.isBlockedCpuInNanos = isBlockedCpuInNanos;
            return this;
        }
    
        public long getIsBlockedCpuInNanos() { return isBlockedCpuInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=11, name="isBlockedAllocationInBytes", requiredness=Requiredness.NONE)    public Builder setIsBlockedAllocationInBytes(long isBlockedAllocationInBytes) {
            this.isBlockedAllocationInBytes = isBlockedAllocationInBytes;
            return this;
        }
    
        public long getIsBlockedAllocationInBytes() { return isBlockedAllocationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=12, name="addInputCalls", requiredness=Requiredness.NONE)    public Builder setAddInputCalls(long addInputCalls) {
            this.addInputCalls = addInputCalls;
            return this;
        }
    
        public long getAddInputCalls() { return addInputCalls; }
    
            @com.facebook.swift.codec.ThriftField(value=13, name="addInputWallInNanos", requiredness=Requiredness.NONE)    public Builder setAddInputWallInNanos(long addInputWallInNanos) {
            this.addInputWallInNanos = addInputWallInNanos;
            return this;
        }
    
        public long getAddInputWallInNanos() { return addInputWallInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=14, name="addInputCpuInNanos", requiredness=Requiredness.NONE)    public Builder setAddInputCpuInNanos(long addInputCpuInNanos) {
            this.addInputCpuInNanos = addInputCpuInNanos;
            return this;
        }
    
        public long getAddInputCpuInNanos() { return addInputCpuInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=15, name="addInputAllocationInBytes", requiredness=Requiredness.NONE)    public Builder setAddInputAllocationInBytes(long addInputAllocationInBytes) {
            this.addInputAllocationInBytes = addInputAllocationInBytes;
            return this;
        }
    
        public long getAddInputAllocationInBytes() { return addInputAllocationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=16, name="rawInputDataSizeInBytes", requiredness=Requiredness.NONE)    public Builder setRawInputDataSizeInBytes(long rawInputDataSizeInBytes) {
            this.rawInputDataSizeInBytes = rawInputDataSizeInBytes;
            return this;
        }
    
        public long getRawInputDataSizeInBytes() { return rawInputDataSizeInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=17, name="rawInputPositions", requiredness=Requiredness.NONE)    public Builder setRawInputPositions(long rawInputPositions) {
            this.rawInputPositions = rawInputPositions;
            return this;
        }
    
        public long getRawInputPositions() { return rawInputPositions; }
    
            @com.facebook.swift.codec.ThriftField(value=18, name="inputDataSizeInBytes", requiredness=Requiredness.NONE)    public Builder setInputDataSizeInBytes(long inputDataSizeInBytes) {
            this.inputDataSizeInBytes = inputDataSizeInBytes;
            return this;
        }
    
        public long getInputDataSizeInBytes() { return inputDataSizeInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=19, name="inputPositions", requiredness=Requiredness.NONE)    public Builder setInputPositions(long inputPositions) {
            this.inputPositions = inputPositions;
            return this;
        }
    
        public long getInputPositions() { return inputPositions; }
    
            @com.facebook.swift.codec.ThriftField(value=20, name="sumSquaredInputPositions", requiredness=Requiredness.NONE)    public Builder setSumSquaredInputPositions(double sumSquaredInputPositions) {
            this.sumSquaredInputPositions = sumSquaredInputPositions;
            return this;
        }
    
        public double getSumSquaredInputPositions() { return sumSquaredInputPositions; }
    
            @com.facebook.swift.codec.ThriftField(value=21, name="getOutputCalls", requiredness=Requiredness.NONE)    public Builder setGetOutputCalls(long getOutputCalls) {
            this.getOutputCalls = getOutputCalls;
            return this;
        }
    
        public long getGetOutputCalls() { return getOutputCalls; }
    
            @com.facebook.swift.codec.ThriftField(value=22, name="getOutputWallInNanos", requiredness=Requiredness.NONE)    public Builder setGetOutputWallInNanos(long getOutputWallInNanos) {
            this.getOutputWallInNanos = getOutputWallInNanos;
            return this;
        }
    
        public long getGetOutputWallInNanos() { return getOutputWallInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=23, name="getOutputCpuInNanos", requiredness=Requiredness.NONE)    public Builder setGetOutputCpuInNanos(long getOutputCpuInNanos) {
            this.getOutputCpuInNanos = getOutputCpuInNanos;
            return this;
        }
    
        public long getGetOutputCpuInNanos() { return getOutputCpuInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=24, name="getOutputAllocationInBytes", requiredness=Requiredness.NONE)    public Builder setGetOutputAllocationInBytes(long getOutputAllocationInBytes) {
            this.getOutputAllocationInBytes = getOutputAllocationInBytes;
            return this;
        }
    
        public long getGetOutputAllocationInBytes() { return getOutputAllocationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=25, name="outputDataSizeInBytes", requiredness=Requiredness.NONE)    public Builder setOutputDataSizeInBytes(long outputDataSizeInBytes) {
            this.outputDataSizeInBytes = outputDataSizeInBytes;
            return this;
        }
    
        public long getOutputDataSizeInBytes() { return outputDataSizeInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=26, name="outputPositions", requiredness=Requiredness.NONE)    public Builder setOutputPositions(long outputPositions) {
            this.outputPositions = outputPositions;
            return this;
        }
    
        public long getOutputPositions() { return outputPositions; }
    
            @com.facebook.swift.codec.ThriftField(value=27, name="physicalWrittenDataSizeInBytes", requiredness=Requiredness.NONE)    public Builder setPhysicalWrittenDataSizeInBytes(long physicalWrittenDataSizeInBytes) {
            this.physicalWrittenDataSizeInBytes = physicalWrittenDataSizeInBytes;
            return this;
        }
    
        public long getPhysicalWrittenDataSizeInBytes() { return physicalWrittenDataSizeInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=28, name="additionalCpuInNanos", requiredness=Requiredness.NONE)    public Builder setAdditionalCpuInNanos(long additionalCpuInNanos) {
            this.additionalCpuInNanos = additionalCpuInNanos;
            return this;
        }
    
        public long getAdditionalCpuInNanos() { return additionalCpuInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=29, name="blockedWallInNanos", requiredness=Requiredness.NONE)    public Builder setBlockedWallInNanos(long blockedWallInNanos) {
            this.blockedWallInNanos = blockedWallInNanos;
            return this;
        }
    
        public long getBlockedWallInNanos() { return blockedWallInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=30, name="finishCalls", requiredness=Requiredness.NONE)    public Builder setFinishCalls(long finishCalls) {
            this.finishCalls = finishCalls;
            return this;
        }
    
        public long getFinishCalls() { return finishCalls; }
    
            @com.facebook.swift.codec.ThriftField(value=31, name="finishWallInNanos", requiredness=Requiredness.NONE)    public Builder setFinishWallInNanos(long finishWallInNanos) {
            this.finishWallInNanos = finishWallInNanos;
            return this;
        }
    
        public long getFinishWallInNanos() { return finishWallInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=32, name="finishCpuInNanos", requiredness=Requiredness.NONE)    public Builder setFinishCpuInNanos(long finishCpuInNanos) {
            this.finishCpuInNanos = finishCpuInNanos;
            return this;
        }
    
        public long getFinishCpuInNanos() { return finishCpuInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=33, name="finishAllocationInBytes", requiredness=Requiredness.NONE)    public Builder setFinishAllocationInBytes(long finishAllocationInBytes) {
            this.finishAllocationInBytes = finishAllocationInBytes;
            return this;
        }
    
        public long getFinishAllocationInBytes() { return finishAllocationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=34, name="userMemoryReservationInBytes", requiredness=Requiredness.NONE)    public Builder setUserMemoryReservationInBytes(long userMemoryReservationInBytes) {
            this.userMemoryReservationInBytes = userMemoryReservationInBytes;
            return this;
        }
    
        public long getUserMemoryReservationInBytes() { return userMemoryReservationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=35, name="revocableMemoryReservationInBytes", requiredness=Requiredness.NONE)    public Builder setRevocableMemoryReservationInBytes(long revocableMemoryReservationInBytes) {
            this.revocableMemoryReservationInBytes = revocableMemoryReservationInBytes;
            return this;
        }
    
        public long getRevocableMemoryReservationInBytes() { return revocableMemoryReservationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=36, name="systemMemoryReservationInBytes", requiredness=Requiredness.NONE)    public Builder setSystemMemoryReservationInBytes(long systemMemoryReservationInBytes) {
            this.systemMemoryReservationInBytes = systemMemoryReservationInBytes;
            return this;
        }
    
        public long getSystemMemoryReservationInBytes() { return systemMemoryReservationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=37, name="peakUserMemoryReservationInBytes", requiredness=Requiredness.NONE)    public Builder setPeakUserMemoryReservationInBytes(long peakUserMemoryReservationInBytes) {
            this.peakUserMemoryReservationInBytes = peakUserMemoryReservationInBytes;
            return this;
        }
    
        public long getPeakUserMemoryReservationInBytes() { return peakUserMemoryReservationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=38, name="peakSystemMemoryReservationInBytes", requiredness=Requiredness.NONE)    public Builder setPeakSystemMemoryReservationInBytes(long peakSystemMemoryReservationInBytes) {
            this.peakSystemMemoryReservationInBytes = peakSystemMemoryReservationInBytes;
            return this;
        }
    
        public long getPeakSystemMemoryReservationInBytes() { return peakSystemMemoryReservationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=39, name="peakTotalMemoryReservationInBytes", requiredness=Requiredness.NONE)    public Builder setPeakTotalMemoryReservationInBytes(long peakTotalMemoryReservationInBytes) {
            this.peakTotalMemoryReservationInBytes = peakTotalMemoryReservationInBytes;
            return this;
        }
    
        public long getPeakTotalMemoryReservationInBytes() { return peakTotalMemoryReservationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=40, name="spilledDataSizeInBytes", requiredness=Requiredness.NONE)    public Builder setSpilledDataSizeInBytes(long spilledDataSizeInBytes) {
            this.spilledDataSizeInBytes = spilledDataSizeInBytes;
            return this;
        }
    
        public long getSpilledDataSizeInBytes() { return spilledDataSizeInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=41, name="blockedReason", requiredness=Requiredness.OPTIONAL)    public Builder setBlockedReason(com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason blockedReason) {
            this.blockedReason = blockedReason;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason getBlockedReason() { return blockedReason; }
    
            @com.facebook.swift.codec.ThriftField(value=42, name="info", requiredness=Requiredness.OPTIONAL)    public Builder setInfo(com.facebook.presto.common.experimental.auto_gen.ThriftOperatorInfo info) {
            this.info = info;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftOperatorInfo getInfo() { return info; }
    
            @com.facebook.swift.codec.ThriftField(value=43, name="runtimeStats", requiredness=Requiredness.NONE)    public Builder setRuntimeStats(com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats runtimeStats) {
            this.runtimeStats = runtimeStats;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats getRuntimeStats() { return runtimeStats; }
    
            @com.facebook.swift.codec.ThriftField(value=44, name="dynamicFilterStats", requiredness=Requiredness.NONE)    public Builder setDynamicFilterStats(com.facebook.presto.common.experimental.auto_gen.ThriftDynamicFilterStats dynamicFilterStats) {
            this.dynamicFilterStats = dynamicFilterStats;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftDynamicFilterStats getDynamicFilterStats() { return dynamicFilterStats; }
    
            @com.facebook.swift.codec.ThriftField(value=45, name="nullJoinBuildKeyCount", requiredness=Requiredness.NONE)    public Builder setNullJoinBuildKeyCount(long nullJoinBuildKeyCount) {
            this.nullJoinBuildKeyCount = nullJoinBuildKeyCount;
            return this;
        }
    
        public long getNullJoinBuildKeyCount() { return nullJoinBuildKeyCount; }
    
            @com.facebook.swift.codec.ThriftField(value=46, name="joinBuildKeyCount", requiredness=Requiredness.NONE)    public Builder setJoinBuildKeyCount(long joinBuildKeyCount) {
            this.joinBuildKeyCount = joinBuildKeyCount;
            return this;
        }
    
        public long getJoinBuildKeyCount() { return joinBuildKeyCount; }
    
            @com.facebook.swift.codec.ThriftField(value=47, name="nullJoinProbeKeyCount", requiredness=Requiredness.NONE)    public Builder setNullJoinProbeKeyCount(long nullJoinProbeKeyCount) {
            this.nullJoinProbeKeyCount = nullJoinProbeKeyCount;
            return this;
        }
    
        public long getNullJoinProbeKeyCount() { return nullJoinProbeKeyCount; }
    
            @com.facebook.swift.codec.ThriftField(value=48, name="joinProbeKeyCount", requiredness=Requiredness.NONE)    public Builder setJoinProbeKeyCount(long joinProbeKeyCount) {
            this.joinProbeKeyCount = joinProbeKeyCount;
            return this;
        }
    
        public long getJoinProbeKeyCount() { return joinProbeKeyCount; }
    
        public Builder() { }
        public Builder(ThriftOperatorStats other) {
            this.stageId = other.stageId;
            this.stageExecutionId = other.stageExecutionId;
            this.pipelineId = other.pipelineId;
            this.operatorId = other.operatorId;
            this.planNodeId = other.planNodeId;
            this.operatorType = other.operatorType;
            this.totalDrivers = other.totalDrivers;
            this.isBlockedCalls = other.isBlockedCalls;
            this.isBlockedWallInNanos = other.isBlockedWallInNanos;
            this.isBlockedCpuInNanos = other.isBlockedCpuInNanos;
            this.isBlockedAllocationInBytes = other.isBlockedAllocationInBytes;
            this.addInputCalls = other.addInputCalls;
            this.addInputWallInNanos = other.addInputWallInNanos;
            this.addInputCpuInNanos = other.addInputCpuInNanos;
            this.addInputAllocationInBytes = other.addInputAllocationInBytes;
            this.rawInputDataSizeInBytes = other.rawInputDataSizeInBytes;
            this.rawInputPositions = other.rawInputPositions;
            this.inputDataSizeInBytes = other.inputDataSizeInBytes;
            this.inputPositions = other.inputPositions;
            this.sumSquaredInputPositions = other.sumSquaredInputPositions;
            this.getOutputCalls = other.getOutputCalls;
            this.getOutputWallInNanos = other.getOutputWallInNanos;
            this.getOutputCpuInNanos = other.getOutputCpuInNanos;
            this.getOutputAllocationInBytes = other.getOutputAllocationInBytes;
            this.outputDataSizeInBytes = other.outputDataSizeInBytes;
            this.outputPositions = other.outputPositions;
            this.physicalWrittenDataSizeInBytes = other.physicalWrittenDataSizeInBytes;
            this.additionalCpuInNanos = other.additionalCpuInNanos;
            this.blockedWallInNanos = other.blockedWallInNanos;
            this.finishCalls = other.finishCalls;
            this.finishWallInNanos = other.finishWallInNanos;
            this.finishCpuInNanos = other.finishCpuInNanos;
            this.finishAllocationInBytes = other.finishAllocationInBytes;
            this.userMemoryReservationInBytes = other.userMemoryReservationInBytes;
            this.revocableMemoryReservationInBytes = other.revocableMemoryReservationInBytes;
            this.systemMemoryReservationInBytes = other.systemMemoryReservationInBytes;
            this.peakUserMemoryReservationInBytes = other.peakUserMemoryReservationInBytes;
            this.peakSystemMemoryReservationInBytes = other.peakSystemMemoryReservationInBytes;
            this.peakTotalMemoryReservationInBytes = other.peakTotalMemoryReservationInBytes;
            this.spilledDataSizeInBytes = other.spilledDataSizeInBytes;
            this.blockedReason = other.blockedReason;
            this.info = other.info;
            this.runtimeStats = other.runtimeStats;
            this.dynamicFilterStats = other.dynamicFilterStats;
            this.nullJoinBuildKeyCount = other.nullJoinBuildKeyCount;
            this.joinBuildKeyCount = other.joinBuildKeyCount;
            this.nullJoinProbeKeyCount = other.nullJoinProbeKeyCount;
            this.joinProbeKeyCount = other.joinProbeKeyCount;
        }
    
        @ThriftConstructor
        public ThriftOperatorStats build() {
            ThriftOperatorStats result = new ThriftOperatorStats (
                this.stageId,
                this.stageExecutionId,
                this.pipelineId,
                this.operatorId,
                this.planNodeId,
                this.operatorType,
                this.totalDrivers,
                this.isBlockedCalls,
                this.isBlockedWallInNanos,
                this.isBlockedCpuInNanos,
                this.isBlockedAllocationInBytes,
                this.addInputCalls,
                this.addInputWallInNanos,
                this.addInputCpuInNanos,
                this.addInputAllocationInBytes,
                this.rawInputDataSizeInBytes,
                this.rawInputPositions,
                this.inputDataSizeInBytes,
                this.inputPositions,
                this.sumSquaredInputPositions,
                this.getOutputCalls,
                this.getOutputWallInNanos,
                this.getOutputCpuInNanos,
                this.getOutputAllocationInBytes,
                this.outputDataSizeInBytes,
                this.outputPositions,
                this.physicalWrittenDataSizeInBytes,
                this.additionalCpuInNanos,
                this.blockedWallInNanos,
                this.finishCalls,
                this.finishWallInNanos,
                this.finishCpuInNanos,
                this.finishAllocationInBytes,
                this.userMemoryReservationInBytes,
                this.revocableMemoryReservationInBytes,
                this.systemMemoryReservationInBytes,
                this.peakUserMemoryReservationInBytes,
                this.peakSystemMemoryReservationInBytes,
                this.peakTotalMemoryReservationInBytes,
                this.spilledDataSizeInBytes,
                this.blockedReason,
                this.info,
                this.runtimeStats,
                this.dynamicFilterStats,
                this.nullJoinBuildKeyCount,
                this.joinBuildKeyCount,
                this.nullJoinProbeKeyCount,
                this.joinProbeKeyCount
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftOperatorStats");
    private final int stageId;
    public static final int _STAGEID = 1;
    private static final TField STAGE_ID_FIELD_DESC = new TField("stageId", TType.I32, (short)1);
        private final int stageExecutionId;
    public static final int _STAGEEXECUTIONID = 2;
    private static final TField STAGE_EXECUTION_ID_FIELD_DESC = new TField("stageExecutionId", TType.I32, (short)2);
        private final int pipelineId;
    public static final int _PIPELINEID = 3;
    private static final TField PIPELINE_ID_FIELD_DESC = new TField("pipelineId", TType.I32, (short)3);
        private final int operatorId;
    public static final int _OPERATORID = 4;
    private static final TField OPERATOR_ID_FIELD_DESC = new TField("operatorId", TType.I32, (short)4);
        private final String planNodeId;
    public static final int _PLANNODEID = 5;
    private static final TField PLAN_NODE_ID_FIELD_DESC = new TField("planNodeId", TType.STRING, (short)5);
        private final String operatorType;
    public static final int _OPERATORTYPE = 6;
    private static final TField OPERATOR_TYPE_FIELD_DESC = new TField("operatorType", TType.STRING, (short)6);
        private final long totalDrivers;
    public static final int _TOTALDRIVERS = 7;
    private static final TField TOTAL_DRIVERS_FIELD_DESC = new TField("totalDrivers", TType.I64, (short)7);
        private final long isBlockedCalls;
    public static final int _ISBLOCKEDCALLS = 8;
    private static final TField IS_BLOCKED_CALLS_FIELD_DESC = new TField("isBlockedCalls", TType.I64, (short)8);
        private final long isBlockedWallInNanos;
    public static final int _ISBLOCKEDWALLINNANOS = 9;
    private static final TField IS_BLOCKED_WALL_IN_NANOS_FIELD_DESC = new TField("isBlockedWallInNanos", TType.I64, (short)9);
        private final long isBlockedCpuInNanos;
    public static final int _ISBLOCKEDCPUINNANOS = 10;
    private static final TField IS_BLOCKED_CPU_IN_NANOS_FIELD_DESC = new TField("isBlockedCpuInNanos", TType.I64, (short)10);
        private final long isBlockedAllocationInBytes;
    public static final int _ISBLOCKEDALLOCATIONINBYTES = 11;
    private static final TField IS_BLOCKED_ALLOCATION_IN_BYTES_FIELD_DESC = new TField("isBlockedAllocationInBytes", TType.I64, (short)11);
        private final long addInputCalls;
    public static final int _ADDINPUTCALLS = 12;
    private static final TField ADD_INPUT_CALLS_FIELD_DESC = new TField("addInputCalls", TType.I64, (short)12);
        private final long addInputWallInNanos;
    public static final int _ADDINPUTWALLINNANOS = 13;
    private static final TField ADD_INPUT_WALL_IN_NANOS_FIELD_DESC = new TField("addInputWallInNanos", TType.I64, (short)13);
        private final long addInputCpuInNanos;
    public static final int _ADDINPUTCPUINNANOS = 14;
    private static final TField ADD_INPUT_CPU_IN_NANOS_FIELD_DESC = new TField("addInputCpuInNanos", TType.I64, (short)14);
        private final long addInputAllocationInBytes;
    public static final int _ADDINPUTALLOCATIONINBYTES = 15;
    private static final TField ADD_INPUT_ALLOCATION_IN_BYTES_FIELD_DESC = new TField("addInputAllocationInBytes", TType.I64, (short)15);
        private final long rawInputDataSizeInBytes;
    public static final int _RAWINPUTDATASIZEINBYTES = 16;
    private static final TField RAW_INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC = new TField("rawInputDataSizeInBytes", TType.I64, (short)16);
        private final long rawInputPositions;
    public static final int _RAWINPUTPOSITIONS = 17;
    private static final TField RAW_INPUT_POSITIONS_FIELD_DESC = new TField("rawInputPositions", TType.I64, (short)17);
        private final long inputDataSizeInBytes;
    public static final int _INPUTDATASIZEINBYTES = 18;
    private static final TField INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC = new TField("inputDataSizeInBytes", TType.I64, (short)18);
        private final long inputPositions;
    public static final int _INPUTPOSITIONS = 19;
    private static final TField INPUT_POSITIONS_FIELD_DESC = new TField("inputPositions", TType.I64, (short)19);
        private final double sumSquaredInputPositions;
    public static final int _SUMSQUAREDINPUTPOSITIONS = 20;
    private static final TField SUM_SQUARED_INPUT_POSITIONS_FIELD_DESC = new TField("sumSquaredInputPositions", TType.DOUBLE, (short)20);
        private final long getOutputCalls;
    public static final int _GETOUTPUTCALLS = 21;
    private static final TField GET_OUTPUT_CALLS_FIELD_DESC = new TField("getOutputCalls", TType.I64, (short)21);
        private final long getOutputWallInNanos;
    public static final int _GETOUTPUTWALLINNANOS = 22;
    private static final TField GET_OUTPUT_WALL_IN_NANOS_FIELD_DESC = new TField("getOutputWallInNanos", TType.I64, (short)22);
        private final long getOutputCpuInNanos;
    public static final int _GETOUTPUTCPUINNANOS = 23;
    private static final TField GET_OUTPUT_CPU_IN_NANOS_FIELD_DESC = new TField("getOutputCpuInNanos", TType.I64, (short)23);
        private final long getOutputAllocationInBytes;
    public static final int _GETOUTPUTALLOCATIONINBYTES = 24;
    private static final TField GET_OUTPUT_ALLOCATION_IN_BYTES_FIELD_DESC = new TField("getOutputAllocationInBytes", TType.I64, (short)24);
        private final long outputDataSizeInBytes;
    public static final int _OUTPUTDATASIZEINBYTES = 25;
    private static final TField OUTPUT_DATA_SIZE_IN_BYTES_FIELD_DESC = new TField("outputDataSizeInBytes", TType.I64, (short)25);
        private final long outputPositions;
    public static final int _OUTPUTPOSITIONS = 26;
    private static final TField OUTPUT_POSITIONS_FIELD_DESC = new TField("outputPositions", TType.I64, (short)26);
        private final long physicalWrittenDataSizeInBytes;
    public static final int _PHYSICALWRITTENDATASIZEINBYTES = 27;
    private static final TField PHYSICAL_WRITTEN_DATA_SIZE_IN_BYTES_FIELD_DESC = new TField("physicalWrittenDataSizeInBytes", TType.I64, (short)27);
        private final long additionalCpuInNanos;
    public static final int _ADDITIONALCPUINNANOS = 28;
    private static final TField ADDITIONAL_CPU_IN_NANOS_FIELD_DESC = new TField("additionalCpuInNanos", TType.I64, (short)28);
        private final long blockedWallInNanos;
    public static final int _BLOCKEDWALLINNANOS = 29;
    private static final TField BLOCKED_WALL_IN_NANOS_FIELD_DESC = new TField("blockedWallInNanos", TType.I64, (short)29);
        private final long finishCalls;
    public static final int _FINISHCALLS = 30;
    private static final TField FINISH_CALLS_FIELD_DESC = new TField("finishCalls", TType.I64, (short)30);
        private final long finishWallInNanos;
    public static final int _FINISHWALLINNANOS = 31;
    private static final TField FINISH_WALL_IN_NANOS_FIELD_DESC = new TField("finishWallInNanos", TType.I64, (short)31);
        private final long finishCpuInNanos;
    public static final int _FINISHCPUINNANOS = 32;
    private static final TField FINISH_CPU_IN_NANOS_FIELD_DESC = new TField("finishCpuInNanos", TType.I64, (short)32);
        private final long finishAllocationInBytes;
    public static final int _FINISHALLOCATIONINBYTES = 33;
    private static final TField FINISH_ALLOCATION_IN_BYTES_FIELD_DESC = new TField("finishAllocationInBytes", TType.I64, (short)33);
        private final long userMemoryReservationInBytes;
    public static final int _USERMEMORYRESERVATIONINBYTES = 34;
    private static final TField USER_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC = new TField("userMemoryReservationInBytes", TType.I64, (short)34);
        private final long revocableMemoryReservationInBytes;
    public static final int _REVOCABLEMEMORYRESERVATIONINBYTES = 35;
    private static final TField REVOCABLE_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC = new TField("revocableMemoryReservationInBytes", TType.I64, (short)35);
        private final long systemMemoryReservationInBytes;
    public static final int _SYSTEMMEMORYRESERVATIONINBYTES = 36;
    private static final TField SYSTEM_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC = new TField("systemMemoryReservationInBytes", TType.I64, (short)36);
        private final long peakUserMemoryReservationInBytes;
    public static final int _PEAKUSERMEMORYRESERVATIONINBYTES = 37;
    private static final TField PEAK_USER_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC = new TField("peakUserMemoryReservationInBytes", TType.I64, (short)37);
        private final long peakSystemMemoryReservationInBytes;
    public static final int _PEAKSYSTEMMEMORYRESERVATIONINBYTES = 38;
    private static final TField PEAK_SYSTEM_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC = new TField("peakSystemMemoryReservationInBytes", TType.I64, (short)38);
        private final long peakTotalMemoryReservationInBytes;
    public static final int _PEAKTOTALMEMORYRESERVATIONINBYTES = 39;
    private static final TField PEAK_TOTAL_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC = new TField("peakTotalMemoryReservationInBytes", TType.I64, (short)39);
        private final long spilledDataSizeInBytes;
    public static final int _SPILLEDDATASIZEINBYTES = 40;
    private static final TField SPILLED_DATA_SIZE_IN_BYTES_FIELD_DESC = new TField("spilledDataSizeInBytes", TType.I64, (short)40);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason blockedReason;
    public static final int _BLOCKEDREASON = 41;
    private static final TField BLOCKED_REASON_FIELD_DESC = new TField("blockedReason", TType.I32, (short)41);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftOperatorInfo info;
    public static final int _INFO = 42;
    private static final TField INFO_FIELD_DESC = new TField("info", TType.STRUCT, (short)42);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats runtimeStats;
    public static final int _RUNTIMESTATS = 43;
    private static final TField RUNTIME_STATS_FIELD_DESC = new TField("runtimeStats", TType.STRUCT, (short)43);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftDynamicFilterStats dynamicFilterStats;
    public static final int _DYNAMICFILTERSTATS = 44;
    private static final TField DYNAMIC_FILTER_STATS_FIELD_DESC = new TField("dynamicFilterStats", TType.STRUCT, (short)44);
        private final long nullJoinBuildKeyCount;
    public static final int _NULLJOINBUILDKEYCOUNT = 45;
    private static final TField NULL_JOIN_BUILD_KEY_COUNT_FIELD_DESC = new TField("nullJoinBuildKeyCount", TType.I64, (short)45);
        private final long joinBuildKeyCount;
    public static final int _JOINBUILDKEYCOUNT = 46;
    private static final TField JOIN_BUILD_KEY_COUNT_FIELD_DESC = new TField("joinBuildKeyCount", TType.I64, (short)46);
        private final long nullJoinProbeKeyCount;
    public static final int _NULLJOINPROBEKEYCOUNT = 47;
    private static final TField NULL_JOIN_PROBE_KEY_COUNT_FIELD_DESC = new TField("nullJoinProbeKeyCount", TType.I64, (short)47);
        private final long joinProbeKeyCount;
    public static final int _JOINPROBEKEYCOUNT = 48;
    private static final TField JOIN_PROBE_KEY_COUNT_FIELD_DESC = new TField("joinProbeKeyCount", TType.I64, (short)48);
    static {
      NAMES_TO_IDS.put("stageId", 1);
      THRIFT_NAMES_TO_IDS.put("stageId", 1);
      FIELD_METADATA.put(1, STAGE_ID_FIELD_DESC);
      NAMES_TO_IDS.put("stageExecutionId", 2);
      THRIFT_NAMES_TO_IDS.put("stageExecutionId", 2);
      FIELD_METADATA.put(2, STAGE_EXECUTION_ID_FIELD_DESC);
      NAMES_TO_IDS.put("pipelineId", 3);
      THRIFT_NAMES_TO_IDS.put("pipelineId", 3);
      FIELD_METADATA.put(3, PIPELINE_ID_FIELD_DESC);
      NAMES_TO_IDS.put("operatorId", 4);
      THRIFT_NAMES_TO_IDS.put("operatorId", 4);
      FIELD_METADATA.put(4, OPERATOR_ID_FIELD_DESC);
      NAMES_TO_IDS.put("planNodeId", 5);
      THRIFT_NAMES_TO_IDS.put("planNodeId", 5);
      FIELD_METADATA.put(5, PLAN_NODE_ID_FIELD_DESC);
      NAMES_TO_IDS.put("operatorType", 6);
      THRIFT_NAMES_TO_IDS.put("operatorType", 6);
      FIELD_METADATA.put(6, OPERATOR_TYPE_FIELD_DESC);
      NAMES_TO_IDS.put("totalDrivers", 7);
      THRIFT_NAMES_TO_IDS.put("totalDrivers", 7);
      FIELD_METADATA.put(7, TOTAL_DRIVERS_FIELD_DESC);
      NAMES_TO_IDS.put("isBlockedCalls", 8);
      THRIFT_NAMES_TO_IDS.put("isBlockedCalls", 8);
      FIELD_METADATA.put(8, IS_BLOCKED_CALLS_FIELD_DESC);
      NAMES_TO_IDS.put("isBlockedWallInNanos", 9);
      THRIFT_NAMES_TO_IDS.put("isBlockedWallInNanos", 9);
      FIELD_METADATA.put(9, IS_BLOCKED_WALL_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("isBlockedCpuInNanos", 10);
      THRIFT_NAMES_TO_IDS.put("isBlockedCpuInNanos", 10);
      FIELD_METADATA.put(10, IS_BLOCKED_CPU_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("isBlockedAllocationInBytes", 11);
      THRIFT_NAMES_TO_IDS.put("isBlockedAllocationInBytes", 11);
      FIELD_METADATA.put(11, IS_BLOCKED_ALLOCATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("addInputCalls", 12);
      THRIFT_NAMES_TO_IDS.put("addInputCalls", 12);
      FIELD_METADATA.put(12, ADD_INPUT_CALLS_FIELD_DESC);
      NAMES_TO_IDS.put("addInputWallInNanos", 13);
      THRIFT_NAMES_TO_IDS.put("addInputWallInNanos", 13);
      FIELD_METADATA.put(13, ADD_INPUT_WALL_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("addInputCpuInNanos", 14);
      THRIFT_NAMES_TO_IDS.put("addInputCpuInNanos", 14);
      FIELD_METADATA.put(14, ADD_INPUT_CPU_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("addInputAllocationInBytes", 15);
      THRIFT_NAMES_TO_IDS.put("addInputAllocationInBytes", 15);
      FIELD_METADATA.put(15, ADD_INPUT_ALLOCATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("rawInputDataSizeInBytes", 16);
      THRIFT_NAMES_TO_IDS.put("rawInputDataSizeInBytes", 16);
      FIELD_METADATA.put(16, RAW_INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("rawInputPositions", 17);
      THRIFT_NAMES_TO_IDS.put("rawInputPositions", 17);
      FIELD_METADATA.put(17, RAW_INPUT_POSITIONS_FIELD_DESC);
      NAMES_TO_IDS.put("inputDataSizeInBytes", 18);
      THRIFT_NAMES_TO_IDS.put("inputDataSizeInBytes", 18);
      FIELD_METADATA.put(18, INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("inputPositions", 19);
      THRIFT_NAMES_TO_IDS.put("inputPositions", 19);
      FIELD_METADATA.put(19, INPUT_POSITIONS_FIELD_DESC);
      NAMES_TO_IDS.put("sumSquaredInputPositions", 20);
      THRIFT_NAMES_TO_IDS.put("sumSquaredInputPositions", 20);
      FIELD_METADATA.put(20, SUM_SQUARED_INPUT_POSITIONS_FIELD_DESC);
      NAMES_TO_IDS.put("getOutputCalls", 21);
      THRIFT_NAMES_TO_IDS.put("getOutputCalls", 21);
      FIELD_METADATA.put(21, GET_OUTPUT_CALLS_FIELD_DESC);
      NAMES_TO_IDS.put("getOutputWallInNanos", 22);
      THRIFT_NAMES_TO_IDS.put("getOutputWallInNanos", 22);
      FIELD_METADATA.put(22, GET_OUTPUT_WALL_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("getOutputCpuInNanos", 23);
      THRIFT_NAMES_TO_IDS.put("getOutputCpuInNanos", 23);
      FIELD_METADATA.put(23, GET_OUTPUT_CPU_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("getOutputAllocationInBytes", 24);
      THRIFT_NAMES_TO_IDS.put("getOutputAllocationInBytes", 24);
      FIELD_METADATA.put(24, GET_OUTPUT_ALLOCATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("outputDataSizeInBytes", 25);
      THRIFT_NAMES_TO_IDS.put("outputDataSizeInBytes", 25);
      FIELD_METADATA.put(25, OUTPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("outputPositions", 26);
      THRIFT_NAMES_TO_IDS.put("outputPositions", 26);
      FIELD_METADATA.put(26, OUTPUT_POSITIONS_FIELD_DESC);
      NAMES_TO_IDS.put("physicalWrittenDataSizeInBytes", 27);
      THRIFT_NAMES_TO_IDS.put("physicalWrittenDataSizeInBytes", 27);
      FIELD_METADATA.put(27, PHYSICAL_WRITTEN_DATA_SIZE_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("additionalCpuInNanos", 28);
      THRIFT_NAMES_TO_IDS.put("additionalCpuInNanos", 28);
      FIELD_METADATA.put(28, ADDITIONAL_CPU_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("blockedWallInNanos", 29);
      THRIFT_NAMES_TO_IDS.put("blockedWallInNanos", 29);
      FIELD_METADATA.put(29, BLOCKED_WALL_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("finishCalls", 30);
      THRIFT_NAMES_TO_IDS.put("finishCalls", 30);
      FIELD_METADATA.put(30, FINISH_CALLS_FIELD_DESC);
      NAMES_TO_IDS.put("finishWallInNanos", 31);
      THRIFT_NAMES_TO_IDS.put("finishWallInNanos", 31);
      FIELD_METADATA.put(31, FINISH_WALL_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("finishCpuInNanos", 32);
      THRIFT_NAMES_TO_IDS.put("finishCpuInNanos", 32);
      FIELD_METADATA.put(32, FINISH_CPU_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("finishAllocationInBytes", 33);
      THRIFT_NAMES_TO_IDS.put("finishAllocationInBytes", 33);
      FIELD_METADATA.put(33, FINISH_ALLOCATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("userMemoryReservationInBytes", 34);
      THRIFT_NAMES_TO_IDS.put("userMemoryReservationInBytes", 34);
      FIELD_METADATA.put(34, USER_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("revocableMemoryReservationInBytes", 35);
      THRIFT_NAMES_TO_IDS.put("revocableMemoryReservationInBytes", 35);
      FIELD_METADATA.put(35, REVOCABLE_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("systemMemoryReservationInBytes", 36);
      THRIFT_NAMES_TO_IDS.put("systemMemoryReservationInBytes", 36);
      FIELD_METADATA.put(36, SYSTEM_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("peakUserMemoryReservationInBytes", 37);
      THRIFT_NAMES_TO_IDS.put("peakUserMemoryReservationInBytes", 37);
      FIELD_METADATA.put(37, PEAK_USER_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("peakSystemMemoryReservationInBytes", 38);
      THRIFT_NAMES_TO_IDS.put("peakSystemMemoryReservationInBytes", 38);
      FIELD_METADATA.put(38, PEAK_SYSTEM_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("peakTotalMemoryReservationInBytes", 39);
      THRIFT_NAMES_TO_IDS.put("peakTotalMemoryReservationInBytes", 39);
      FIELD_METADATA.put(39, PEAK_TOTAL_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("spilledDataSizeInBytes", 40);
      THRIFT_NAMES_TO_IDS.put("spilledDataSizeInBytes", 40);
      FIELD_METADATA.put(40, SPILLED_DATA_SIZE_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("blockedReason", 41);
      THRIFT_NAMES_TO_IDS.put("blockedReason", 41);
      FIELD_METADATA.put(41, BLOCKED_REASON_FIELD_DESC);
      NAMES_TO_IDS.put("info", 42);
      THRIFT_NAMES_TO_IDS.put("info", 42);
      FIELD_METADATA.put(42, INFO_FIELD_DESC);
      NAMES_TO_IDS.put("runtimeStats", 43);
      THRIFT_NAMES_TO_IDS.put("runtimeStats", 43);
      FIELD_METADATA.put(43, RUNTIME_STATS_FIELD_DESC);
      NAMES_TO_IDS.put("dynamicFilterStats", 44);
      THRIFT_NAMES_TO_IDS.put("dynamicFilterStats", 44);
      FIELD_METADATA.put(44, DYNAMIC_FILTER_STATS_FIELD_DESC);
      NAMES_TO_IDS.put("nullJoinBuildKeyCount", 45);
      THRIFT_NAMES_TO_IDS.put("nullJoinBuildKeyCount", 45);
      FIELD_METADATA.put(45, NULL_JOIN_BUILD_KEY_COUNT_FIELD_DESC);
      NAMES_TO_IDS.put("joinBuildKeyCount", 46);
      THRIFT_NAMES_TO_IDS.put("joinBuildKeyCount", 46);
      FIELD_METADATA.put(46, JOIN_BUILD_KEY_COUNT_FIELD_DESC);
      NAMES_TO_IDS.put("nullJoinProbeKeyCount", 47);
      THRIFT_NAMES_TO_IDS.put("nullJoinProbeKeyCount", 47);
      FIELD_METADATA.put(47, NULL_JOIN_PROBE_KEY_COUNT_FIELD_DESC);
      NAMES_TO_IDS.put("joinProbeKeyCount", 48);
      THRIFT_NAMES_TO_IDS.put("joinProbeKeyCount", 48);
      FIELD_METADATA.put(48, JOIN_PROBE_KEY_COUNT_FIELD_DESC);
    }
    
    
    @com.facebook.swift.codec.ThriftField(value=1, name="stageId", requiredness=Requiredness.NONE)
    public int getStageId() { return stageId; }

    
    
    @com.facebook.swift.codec.ThriftField(value=2, name="stageExecutionId", requiredness=Requiredness.NONE)
    public int getStageExecutionId() { return stageExecutionId; }

    
    
    @com.facebook.swift.codec.ThriftField(value=3, name="pipelineId", requiredness=Requiredness.NONE)
    public int getPipelineId() { return pipelineId; }

    
    
    @com.facebook.swift.codec.ThriftField(value=4, name="operatorId", requiredness=Requiredness.NONE)
    public int getOperatorId() { return operatorId; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=5, name="planNodeId", requiredness=Requiredness.NONE)
    public String getPlanNodeId() { return planNodeId; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=6, name="operatorType", requiredness=Requiredness.NONE)
    public String getOperatorType() { return operatorType; }

    
    
    @com.facebook.swift.codec.ThriftField(value=7, name="totalDrivers", requiredness=Requiredness.NONE)
    public long getTotalDrivers() { return totalDrivers; }

    
    
    @com.facebook.swift.codec.ThriftField(value=8, name="isBlockedCalls", requiredness=Requiredness.NONE)
    public long getIsBlockedCalls() { return isBlockedCalls; }

    
    
    @com.facebook.swift.codec.ThriftField(value=9, name="isBlockedWallInNanos", requiredness=Requiredness.NONE)
    public long getIsBlockedWallInNanos() { return isBlockedWallInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=10, name="isBlockedCpuInNanos", requiredness=Requiredness.NONE)
    public long getIsBlockedCpuInNanos() { return isBlockedCpuInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=11, name="isBlockedAllocationInBytes", requiredness=Requiredness.NONE)
    public long getIsBlockedAllocationInBytes() { return isBlockedAllocationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=12, name="addInputCalls", requiredness=Requiredness.NONE)
    public long getAddInputCalls() { return addInputCalls; }

    
    
    @com.facebook.swift.codec.ThriftField(value=13, name="addInputWallInNanos", requiredness=Requiredness.NONE)
    public long getAddInputWallInNanos() { return addInputWallInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=14, name="addInputCpuInNanos", requiredness=Requiredness.NONE)
    public long getAddInputCpuInNanos() { return addInputCpuInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=15, name="addInputAllocationInBytes", requiredness=Requiredness.NONE)
    public long getAddInputAllocationInBytes() { return addInputAllocationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=16, name="rawInputDataSizeInBytes", requiredness=Requiredness.NONE)
    public long getRawInputDataSizeInBytes() { return rawInputDataSizeInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=17, name="rawInputPositions", requiredness=Requiredness.NONE)
    public long getRawInputPositions() { return rawInputPositions; }

    
    
    @com.facebook.swift.codec.ThriftField(value=18, name="inputDataSizeInBytes", requiredness=Requiredness.NONE)
    public long getInputDataSizeInBytes() { return inputDataSizeInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=19, name="inputPositions", requiredness=Requiredness.NONE)
    public long getInputPositions() { return inputPositions; }

    
    
    @com.facebook.swift.codec.ThriftField(value=20, name="sumSquaredInputPositions", requiredness=Requiredness.NONE)
    public double getSumSquaredInputPositions() { return sumSquaredInputPositions; }

    
    
    @com.facebook.swift.codec.ThriftField(value=21, name="getOutputCalls", requiredness=Requiredness.NONE)
    public long getGetOutputCalls() { return getOutputCalls; }

    
    
    @com.facebook.swift.codec.ThriftField(value=22, name="getOutputWallInNanos", requiredness=Requiredness.NONE)
    public long getGetOutputWallInNanos() { return getOutputWallInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=23, name="getOutputCpuInNanos", requiredness=Requiredness.NONE)
    public long getGetOutputCpuInNanos() { return getOutputCpuInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=24, name="getOutputAllocationInBytes", requiredness=Requiredness.NONE)
    public long getGetOutputAllocationInBytes() { return getOutputAllocationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=25, name="outputDataSizeInBytes", requiredness=Requiredness.NONE)
    public long getOutputDataSizeInBytes() { return outputDataSizeInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=26, name="outputPositions", requiredness=Requiredness.NONE)
    public long getOutputPositions() { return outputPositions; }

    
    
    @com.facebook.swift.codec.ThriftField(value=27, name="physicalWrittenDataSizeInBytes", requiredness=Requiredness.NONE)
    public long getPhysicalWrittenDataSizeInBytes() { return physicalWrittenDataSizeInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=28, name="additionalCpuInNanos", requiredness=Requiredness.NONE)
    public long getAdditionalCpuInNanos() { return additionalCpuInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=29, name="blockedWallInNanos", requiredness=Requiredness.NONE)
    public long getBlockedWallInNanos() { return blockedWallInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=30, name="finishCalls", requiredness=Requiredness.NONE)
    public long getFinishCalls() { return finishCalls; }

    
    
    @com.facebook.swift.codec.ThriftField(value=31, name="finishWallInNanos", requiredness=Requiredness.NONE)
    public long getFinishWallInNanos() { return finishWallInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=32, name="finishCpuInNanos", requiredness=Requiredness.NONE)
    public long getFinishCpuInNanos() { return finishCpuInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=33, name="finishAllocationInBytes", requiredness=Requiredness.NONE)
    public long getFinishAllocationInBytes() { return finishAllocationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=34, name="userMemoryReservationInBytes", requiredness=Requiredness.NONE)
    public long getUserMemoryReservationInBytes() { return userMemoryReservationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=35, name="revocableMemoryReservationInBytes", requiredness=Requiredness.NONE)
    public long getRevocableMemoryReservationInBytes() { return revocableMemoryReservationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=36, name="systemMemoryReservationInBytes", requiredness=Requiredness.NONE)
    public long getSystemMemoryReservationInBytes() { return systemMemoryReservationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=37, name="peakUserMemoryReservationInBytes", requiredness=Requiredness.NONE)
    public long getPeakUserMemoryReservationInBytes() { return peakUserMemoryReservationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=38, name="peakSystemMemoryReservationInBytes", requiredness=Requiredness.NONE)
    public long getPeakSystemMemoryReservationInBytes() { return peakSystemMemoryReservationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=39, name="peakTotalMemoryReservationInBytes", requiredness=Requiredness.NONE)
    public long getPeakTotalMemoryReservationInBytes() { return peakTotalMemoryReservationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=40, name="spilledDataSizeInBytes", requiredness=Requiredness.NONE)
    public long getSpilledDataSizeInBytes() { return spilledDataSizeInBytes; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=41, name="blockedReason", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason getBlockedReason() { return blockedReason; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=42, name="info", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftOperatorInfo getInfo() { return info; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=43, name="runtimeStats", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats getRuntimeStats() { return runtimeStats; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=44, name="dynamicFilterStats", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftDynamicFilterStats getDynamicFilterStats() { return dynamicFilterStats; }

    
    
    @com.facebook.swift.codec.ThriftField(value=45, name="nullJoinBuildKeyCount", requiredness=Requiredness.NONE)
    public long getNullJoinBuildKeyCount() { return nullJoinBuildKeyCount; }

    
    
    @com.facebook.swift.codec.ThriftField(value=46, name="joinBuildKeyCount", requiredness=Requiredness.NONE)
    public long getJoinBuildKeyCount() { return joinBuildKeyCount; }

    
    
    @com.facebook.swift.codec.ThriftField(value=47, name="nullJoinProbeKeyCount", requiredness=Requiredness.NONE)
    public long getNullJoinProbeKeyCount() { return nullJoinProbeKeyCount; }

    
    
    @com.facebook.swift.codec.ThriftField(value=48, name="joinProbeKeyCount", requiredness=Requiredness.NONE)
    public long getJoinProbeKeyCount() { return joinProbeKeyCount; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("stageId", stageId);
        helper.add("stageExecutionId", stageExecutionId);
        helper.add("pipelineId", pipelineId);
        helper.add("operatorId", operatorId);
        helper.add("planNodeId", planNodeId);
        helper.add("operatorType", operatorType);
        helper.add("totalDrivers", totalDrivers);
        helper.add("isBlockedCalls", isBlockedCalls);
        helper.add("isBlockedWallInNanos", isBlockedWallInNanos);
        helper.add("isBlockedCpuInNanos", isBlockedCpuInNanos);
        helper.add("isBlockedAllocationInBytes", isBlockedAllocationInBytes);
        helper.add("addInputCalls", addInputCalls);
        helper.add("addInputWallInNanos", addInputWallInNanos);
        helper.add("addInputCpuInNanos", addInputCpuInNanos);
        helper.add("addInputAllocationInBytes", addInputAllocationInBytes);
        helper.add("rawInputDataSizeInBytes", rawInputDataSizeInBytes);
        helper.add("rawInputPositions", rawInputPositions);
        helper.add("inputDataSizeInBytes", inputDataSizeInBytes);
        helper.add("inputPositions", inputPositions);
        helper.add("sumSquaredInputPositions", sumSquaredInputPositions);
        helper.add("getOutputCalls", getOutputCalls);
        helper.add("getOutputWallInNanos", getOutputWallInNanos);
        helper.add("getOutputCpuInNanos", getOutputCpuInNanos);
        helper.add("getOutputAllocationInBytes", getOutputAllocationInBytes);
        helper.add("outputDataSizeInBytes", outputDataSizeInBytes);
        helper.add("outputPositions", outputPositions);
        helper.add("physicalWrittenDataSizeInBytes", physicalWrittenDataSizeInBytes);
        helper.add("additionalCpuInNanos", additionalCpuInNanos);
        helper.add("blockedWallInNanos", blockedWallInNanos);
        helper.add("finishCalls", finishCalls);
        helper.add("finishWallInNanos", finishWallInNanos);
        helper.add("finishCpuInNanos", finishCpuInNanos);
        helper.add("finishAllocationInBytes", finishAllocationInBytes);
        helper.add("userMemoryReservationInBytes", userMemoryReservationInBytes);
        helper.add("revocableMemoryReservationInBytes", revocableMemoryReservationInBytes);
        helper.add("systemMemoryReservationInBytes", systemMemoryReservationInBytes);
        helper.add("peakUserMemoryReservationInBytes", peakUserMemoryReservationInBytes);
        helper.add("peakSystemMemoryReservationInBytes", peakSystemMemoryReservationInBytes);
        helper.add("peakTotalMemoryReservationInBytes", peakTotalMemoryReservationInBytes);
        helper.add("spilledDataSizeInBytes", spilledDataSizeInBytes);
        helper.add("blockedReason", blockedReason);
        helper.add("info", info);
        helper.add("runtimeStats", runtimeStats);
        helper.add("dynamicFilterStats", dynamicFilterStats);
        helper.add("nullJoinBuildKeyCount", nullJoinBuildKeyCount);
        helper.add("joinBuildKeyCount", joinBuildKeyCount);
        helper.add("nullJoinProbeKeyCount", nullJoinProbeKeyCount);
        helper.add("joinProbeKeyCount", joinProbeKeyCount);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftOperatorStats other = (ThriftOperatorStats)o;
    
        return
            Objects.equals(stageId, other.stageId) &&
            Objects.equals(stageExecutionId, other.stageExecutionId) &&
            Objects.equals(pipelineId, other.pipelineId) &&
            Objects.equals(operatorId, other.operatorId) &&
            Objects.equals(planNodeId, other.planNodeId) &&
            Objects.equals(operatorType, other.operatorType) &&
            Objects.equals(totalDrivers, other.totalDrivers) &&
            Objects.equals(isBlockedCalls, other.isBlockedCalls) &&
            Objects.equals(isBlockedWallInNanos, other.isBlockedWallInNanos) &&
            Objects.equals(isBlockedCpuInNanos, other.isBlockedCpuInNanos) &&
            Objects.equals(isBlockedAllocationInBytes, other.isBlockedAllocationInBytes) &&
            Objects.equals(addInputCalls, other.addInputCalls) &&
            Objects.equals(addInputWallInNanos, other.addInputWallInNanos) &&
            Objects.equals(addInputCpuInNanos, other.addInputCpuInNanos) &&
            Objects.equals(addInputAllocationInBytes, other.addInputAllocationInBytes) &&
            Objects.equals(rawInputDataSizeInBytes, other.rawInputDataSizeInBytes) &&
            Objects.equals(rawInputPositions, other.rawInputPositions) &&
            Objects.equals(inputDataSizeInBytes, other.inputDataSizeInBytes) &&
            Objects.equals(inputPositions, other.inputPositions) &&
            Objects.equals(sumSquaredInputPositions, other.sumSquaredInputPositions) &&
            Objects.equals(getOutputCalls, other.getOutputCalls) &&
            Objects.equals(getOutputWallInNanos, other.getOutputWallInNanos) &&
            Objects.equals(getOutputCpuInNanos, other.getOutputCpuInNanos) &&
            Objects.equals(getOutputAllocationInBytes, other.getOutputAllocationInBytes) &&
            Objects.equals(outputDataSizeInBytes, other.outputDataSizeInBytes) &&
            Objects.equals(outputPositions, other.outputPositions) &&
            Objects.equals(physicalWrittenDataSizeInBytes, other.physicalWrittenDataSizeInBytes) &&
            Objects.equals(additionalCpuInNanos, other.additionalCpuInNanos) &&
            Objects.equals(blockedWallInNanos, other.blockedWallInNanos) &&
            Objects.equals(finishCalls, other.finishCalls) &&
            Objects.equals(finishWallInNanos, other.finishWallInNanos) &&
            Objects.equals(finishCpuInNanos, other.finishCpuInNanos) &&
            Objects.equals(finishAllocationInBytes, other.finishAllocationInBytes) &&
            Objects.equals(userMemoryReservationInBytes, other.userMemoryReservationInBytes) &&
            Objects.equals(revocableMemoryReservationInBytes, other.revocableMemoryReservationInBytes) &&
            Objects.equals(systemMemoryReservationInBytes, other.systemMemoryReservationInBytes) &&
            Objects.equals(peakUserMemoryReservationInBytes, other.peakUserMemoryReservationInBytes) &&
            Objects.equals(peakSystemMemoryReservationInBytes, other.peakSystemMemoryReservationInBytes) &&
            Objects.equals(peakTotalMemoryReservationInBytes, other.peakTotalMemoryReservationInBytes) &&
            Objects.equals(spilledDataSizeInBytes, other.spilledDataSizeInBytes) &&
            Objects.equals(blockedReason, other.blockedReason) &&
            Objects.equals(info, other.info) &&
            Objects.equals(runtimeStats, other.runtimeStats) &&
            Objects.equals(dynamicFilterStats, other.dynamicFilterStats) &&
            Objects.equals(nullJoinBuildKeyCount, other.nullJoinBuildKeyCount) &&
            Objects.equals(joinBuildKeyCount, other.joinBuildKeyCount) &&
            Objects.equals(nullJoinProbeKeyCount, other.nullJoinProbeKeyCount) &&
            Objects.equals(joinProbeKeyCount, other.joinProbeKeyCount) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            stageId,
            stageExecutionId,
            pipelineId,
            operatorId,
            planNodeId,
            operatorType,
            totalDrivers,
            isBlockedCalls,
            isBlockedWallInNanos,
            isBlockedCpuInNanos,
            isBlockedAllocationInBytes,
            addInputCalls,
            addInputWallInNanos,
            addInputCpuInNanos,
            addInputAllocationInBytes,
            rawInputDataSizeInBytes,
            rawInputPositions,
            inputDataSizeInBytes,
            inputPositions,
            sumSquaredInputPositions,
            getOutputCalls,
            getOutputWallInNanos,
            getOutputCpuInNanos,
            getOutputAllocationInBytes,
            outputDataSizeInBytes,
            outputPositions,
            physicalWrittenDataSizeInBytes,
            additionalCpuInNanos,
            blockedWallInNanos,
            finishCalls,
            finishWallInNanos,
            finishCpuInNanos,
            finishAllocationInBytes,
            userMemoryReservationInBytes,
            revocableMemoryReservationInBytes,
            systemMemoryReservationInBytes,
            peakUserMemoryReservationInBytes,
            peakSystemMemoryReservationInBytes,
            peakTotalMemoryReservationInBytes,
            spilledDataSizeInBytes,
            blockedReason,
            info,
            runtimeStats,
            dynamicFilterStats,
            nullJoinBuildKeyCount,
            joinBuildKeyCount,
            nullJoinProbeKeyCount,
            joinProbeKeyCount
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftOperatorStats> asReader() {
      return ThriftOperatorStats::read0;
    }
    
    public static ThriftOperatorStats read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftOperatorStats.NAMES_TO_IDS, ThriftOperatorStats.THRIFT_NAMES_TO_IDS, ThriftOperatorStats.FIELD_METADATA);
      ThriftOperatorStats.Builder builder = new ThriftOperatorStats.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _STAGEID:
          if (__field.type == TType.I32) {
            int stageId = oprot.readI32();
            builder.setStageId(stageId);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _STAGEEXECUTIONID:
          if (__field.type == TType.I32) {
            int stageExecutionId = oprot.readI32();
            builder.setStageExecutionId(stageExecutionId);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PIPELINEID:
          if (__field.type == TType.I32) {
            int pipelineId = oprot.readI32();
            builder.setPipelineId(pipelineId);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _OPERATORID:
          if (__field.type == TType.I32) {
            int operatorId = oprot.readI32();
            builder.setOperatorId(operatorId);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PLANNODEID:
          if (__field.type == TType.STRING) {
            String planNodeId = oprot.readString();
            builder.setPlanNodeId(planNodeId);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _OPERATORTYPE:
          if (__field.type == TType.STRING) {
            String operatorType = oprot.readString();
            builder.setOperatorType(operatorType);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TOTALDRIVERS:
          if (__field.type == TType.I64) {
            long totalDrivers = oprot.readI64();
            builder.setTotalDrivers(totalDrivers);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ISBLOCKEDCALLS:
          if (__field.type == TType.I64) {
            long isBlockedCalls = oprot.readI64();
            builder.setIsBlockedCalls(isBlockedCalls);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ISBLOCKEDWALLINNANOS:
          if (__field.type == TType.I64) {
            long isBlockedWallInNanos = oprot.readI64();
            builder.setIsBlockedWallInNanos(isBlockedWallInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ISBLOCKEDCPUINNANOS:
          if (__field.type == TType.I64) {
            long isBlockedCpuInNanos = oprot.readI64();
            builder.setIsBlockedCpuInNanos(isBlockedCpuInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ISBLOCKEDALLOCATIONINBYTES:
          if (__field.type == TType.I64) {
            long isBlockedAllocationInBytes = oprot.readI64();
            builder.setIsBlockedAllocationInBytes(isBlockedAllocationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ADDINPUTCALLS:
          if (__field.type == TType.I64) {
            long addInputCalls = oprot.readI64();
            builder.setAddInputCalls(addInputCalls);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ADDINPUTWALLINNANOS:
          if (__field.type == TType.I64) {
            long addInputWallInNanos = oprot.readI64();
            builder.setAddInputWallInNanos(addInputWallInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ADDINPUTCPUINNANOS:
          if (__field.type == TType.I64) {
            long addInputCpuInNanos = oprot.readI64();
            builder.setAddInputCpuInNanos(addInputCpuInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ADDINPUTALLOCATIONINBYTES:
          if (__field.type == TType.I64) {
            long addInputAllocationInBytes = oprot.readI64();
            builder.setAddInputAllocationInBytes(addInputAllocationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _RAWINPUTDATASIZEINBYTES:
          if (__field.type == TType.I64) {
            long rawInputDataSizeInBytes = oprot.readI64();
            builder.setRawInputDataSizeInBytes(rawInputDataSizeInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _RAWINPUTPOSITIONS:
          if (__field.type == TType.I64) {
            long rawInputPositions = oprot.readI64();
            builder.setRawInputPositions(rawInputPositions);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _INPUTDATASIZEINBYTES:
          if (__field.type == TType.I64) {
            long inputDataSizeInBytes = oprot.readI64();
            builder.setInputDataSizeInBytes(inputDataSizeInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _INPUTPOSITIONS:
          if (__field.type == TType.I64) {
            long inputPositions = oprot.readI64();
            builder.setInputPositions(inputPositions);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _SUMSQUAREDINPUTPOSITIONS:
          if (__field.type == TType.DOUBLE) {
            double sumSquaredInputPositions = oprot.readDouble();
            builder.setSumSquaredInputPositions(sumSquaredInputPositions);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _GETOUTPUTCALLS:
          if (__field.type == TType.I64) {
            long getOutputCalls = oprot.readI64();
            builder.setGetOutputCalls(getOutputCalls);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _GETOUTPUTWALLINNANOS:
          if (__field.type == TType.I64) {
            long getOutputWallInNanos = oprot.readI64();
            builder.setGetOutputWallInNanos(getOutputWallInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _GETOUTPUTCPUINNANOS:
          if (__field.type == TType.I64) {
            long getOutputCpuInNanos = oprot.readI64();
            builder.setGetOutputCpuInNanos(getOutputCpuInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _GETOUTPUTALLOCATIONINBYTES:
          if (__field.type == TType.I64) {
            long getOutputAllocationInBytes = oprot.readI64();
            builder.setGetOutputAllocationInBytes(getOutputAllocationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _OUTPUTDATASIZEINBYTES:
          if (__field.type == TType.I64) {
            long outputDataSizeInBytes = oprot.readI64();
            builder.setOutputDataSizeInBytes(outputDataSizeInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _OUTPUTPOSITIONS:
          if (__field.type == TType.I64) {
            long outputPositions = oprot.readI64();
            builder.setOutputPositions(outputPositions);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PHYSICALWRITTENDATASIZEINBYTES:
          if (__field.type == TType.I64) {
            long physicalWrittenDataSizeInBytes = oprot.readI64();
            builder.setPhysicalWrittenDataSizeInBytes(physicalWrittenDataSizeInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ADDITIONALCPUINNANOS:
          if (__field.type == TType.I64) {
            long additionalCpuInNanos = oprot.readI64();
            builder.setAdditionalCpuInNanos(additionalCpuInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _BLOCKEDWALLINNANOS:
          if (__field.type == TType.I64) {
            long blockedWallInNanos = oprot.readI64();
            builder.setBlockedWallInNanos(blockedWallInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _FINISHCALLS:
          if (__field.type == TType.I64) {
            long finishCalls = oprot.readI64();
            builder.setFinishCalls(finishCalls);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _FINISHWALLINNANOS:
          if (__field.type == TType.I64) {
            long finishWallInNanos = oprot.readI64();
            builder.setFinishWallInNanos(finishWallInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _FINISHCPUINNANOS:
          if (__field.type == TType.I64) {
            long finishCpuInNanos = oprot.readI64();
            builder.setFinishCpuInNanos(finishCpuInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _FINISHALLOCATIONINBYTES:
          if (__field.type == TType.I64) {
            long finishAllocationInBytes = oprot.readI64();
            builder.setFinishAllocationInBytes(finishAllocationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _USERMEMORYRESERVATIONINBYTES:
          if (__field.type == TType.I64) {
            long userMemoryReservationInBytes = oprot.readI64();
            builder.setUserMemoryReservationInBytes(userMemoryReservationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _REVOCABLEMEMORYRESERVATIONINBYTES:
          if (__field.type == TType.I64) {
            long revocableMemoryReservationInBytes = oprot.readI64();
            builder.setRevocableMemoryReservationInBytes(revocableMemoryReservationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _SYSTEMMEMORYRESERVATIONINBYTES:
          if (__field.type == TType.I64) {
            long systemMemoryReservationInBytes = oprot.readI64();
            builder.setSystemMemoryReservationInBytes(systemMemoryReservationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PEAKUSERMEMORYRESERVATIONINBYTES:
          if (__field.type == TType.I64) {
            long peakUserMemoryReservationInBytes = oprot.readI64();
            builder.setPeakUserMemoryReservationInBytes(peakUserMemoryReservationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PEAKSYSTEMMEMORYRESERVATIONINBYTES:
          if (__field.type == TType.I64) {
            long peakSystemMemoryReservationInBytes = oprot.readI64();
            builder.setPeakSystemMemoryReservationInBytes(peakSystemMemoryReservationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PEAKTOTALMEMORYRESERVATIONINBYTES:
          if (__field.type == TType.I64) {
            long peakTotalMemoryReservationInBytes = oprot.readI64();
            builder.setPeakTotalMemoryReservationInBytes(peakTotalMemoryReservationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _SPILLEDDATASIZEINBYTES:
          if (__field.type == TType.I64) {
            long spilledDataSizeInBytes = oprot.readI64();
            builder.setSpilledDataSizeInBytes(spilledDataSizeInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _BLOCKEDREASON:
          if (__field.type == TType.I32) {
            com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason  blockedReason = com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason .fromInteger(oprot.readI32());
            builder.setBlockedReason(blockedReason);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _INFO:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftOperatorInfo info = com.facebook.presto.common.experimental.auto_gen.ThriftOperatorInfo.read0(oprot);
            builder.setInfo(info);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _RUNTIMESTATS:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats runtimeStats = com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats.read0(oprot);
            builder.setRuntimeStats(runtimeStats);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _DYNAMICFILTERSTATS:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftDynamicFilterStats dynamicFilterStats = com.facebook.presto.common.experimental.auto_gen.ThriftDynamicFilterStats.read0(oprot);
            builder.setDynamicFilterStats(dynamicFilterStats);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _NULLJOINBUILDKEYCOUNT:
          if (__field.type == TType.I64) {
            long nullJoinBuildKeyCount = oprot.readI64();
            builder.setNullJoinBuildKeyCount(nullJoinBuildKeyCount);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _JOINBUILDKEYCOUNT:
          if (__field.type == TType.I64) {
            long joinBuildKeyCount = oprot.readI64();
            builder.setJoinBuildKeyCount(joinBuildKeyCount);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _NULLJOINPROBEKEYCOUNT:
          if (__field.type == TType.I64) {
            long nullJoinProbeKeyCount = oprot.readI64();
            builder.setNullJoinProbeKeyCount(nullJoinProbeKeyCount);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _JOINPROBEKEYCOUNT:
          if (__field.type == TType.I64) {
            long joinProbeKeyCount = oprot.readI64();
            builder.setJoinProbeKeyCount(joinProbeKeyCount);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(STAGE_ID_FIELD_DESC);
      oprot.writeI32(this.stageId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(STAGE_EXECUTION_ID_FIELD_DESC);
      oprot.writeI32(this.stageExecutionId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PIPELINE_ID_FIELD_DESC);
      oprot.writeI32(this.pipelineId);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OPERATOR_ID_FIELD_DESC);
      oprot.writeI32(this.operatorId);
      oprot.writeFieldEnd();
      if (planNodeId != null) {
        oprot.writeFieldBegin(PLAN_NODE_ID_FIELD_DESC);
        oprot.writeString(this.planNodeId);
        oprot.writeFieldEnd();
      }
      if (operatorType != null) {
        oprot.writeFieldBegin(OPERATOR_TYPE_FIELD_DESC);
        oprot.writeString(this.operatorType);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_DRIVERS_FIELD_DESC);
      oprot.writeI64(this.totalDrivers);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_BLOCKED_CALLS_FIELD_DESC);
      oprot.writeI64(this.isBlockedCalls);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_BLOCKED_WALL_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.isBlockedWallInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_BLOCKED_CPU_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.isBlockedCpuInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(IS_BLOCKED_ALLOCATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.isBlockedAllocationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ADD_INPUT_CALLS_FIELD_DESC);
      oprot.writeI64(this.addInputCalls);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ADD_INPUT_WALL_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.addInputWallInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ADD_INPUT_CPU_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.addInputCpuInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ADD_INPUT_ALLOCATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.addInputAllocationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RAW_INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.rawInputDataSizeInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RAW_INPUT_POSITIONS_FIELD_DESC);
      oprot.writeI64(this.rawInputPositions);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.inputDataSizeInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(INPUT_POSITIONS_FIELD_DESC);
      oprot.writeI64(this.inputPositions);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SUM_SQUARED_INPUT_POSITIONS_FIELD_DESC);
      oprot.writeDouble(this.sumSquaredInputPositions);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GET_OUTPUT_CALLS_FIELD_DESC);
      oprot.writeI64(this.getOutputCalls);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GET_OUTPUT_WALL_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.getOutputWallInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GET_OUTPUT_CPU_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.getOutputCpuInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(GET_OUTPUT_ALLOCATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.getOutputAllocationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OUTPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.outputDataSizeInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OUTPUT_POSITIONS_FIELD_DESC);
      oprot.writeI64(this.outputPositions);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PHYSICAL_WRITTEN_DATA_SIZE_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.physicalWrittenDataSizeInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ADDITIONAL_CPU_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.additionalCpuInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BLOCKED_WALL_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.blockedWallInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FINISH_CALLS_FIELD_DESC);
      oprot.writeI64(this.finishCalls);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FINISH_WALL_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.finishWallInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FINISH_CPU_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.finishCpuInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FINISH_ALLOCATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.finishAllocationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.userMemoryReservationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REVOCABLE_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.revocableMemoryReservationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SYSTEM_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.systemMemoryReservationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PEAK_USER_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.peakUserMemoryReservationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PEAK_SYSTEM_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.peakSystemMemoryReservationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PEAK_TOTAL_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.peakTotalMemoryReservationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SPILLED_DATA_SIZE_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.spilledDataSizeInBytes);
      oprot.writeFieldEnd();
      if (blockedReason != null) {
        oprot.writeFieldBegin(BLOCKED_REASON_FIELD_DESC);
        oprot.writeI32(this.blockedReason == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.blockedReason));
        oprot.writeFieldEnd();
      }
      if (info != null) {
        oprot.writeFieldBegin(INFO_FIELD_DESC);
        this.info.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (runtimeStats != null) {
        oprot.writeFieldBegin(RUNTIME_STATS_FIELD_DESC);
        this.runtimeStats.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (dynamicFilterStats != null) {
        oprot.writeFieldBegin(DYNAMIC_FILTER_STATS_FIELD_DESC);
        this.dynamicFilterStats.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NULL_JOIN_BUILD_KEY_COUNT_FIELD_DESC);
      oprot.writeI64(this.nullJoinBuildKeyCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JOIN_BUILD_KEY_COUNT_FIELD_DESC);
      oprot.writeI64(this.joinBuildKeyCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(NULL_JOIN_PROBE_KEY_COUNT_FIELD_DESC);
      oprot.writeI64(this.nullJoinProbeKeyCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(JOIN_PROBE_KEY_COUNT_FIELD_DESC);
      oprot.writeI64(this.joinProbeKeyCount);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftOperatorStatsLazy {
        private static final ThriftOperatorStats _DEFAULT = new ThriftOperatorStats.Builder().build();
    }
    
    public static ThriftOperatorStats defaultInstance() {
        return  _ThriftOperatorStatsLazy._DEFAULT;
    }
}
