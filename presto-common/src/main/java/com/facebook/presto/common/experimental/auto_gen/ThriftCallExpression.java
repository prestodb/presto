/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftCallExpression", builder=ThriftCallExpression.Builder.class)
public final class ThriftCallExpression implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftCallExpression(
        @com.facebook.swift.codec.ThriftField(value=1, name="sourceLocation", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftSourceLocation sourceLocation,
        @com.facebook.swift.codec.ThriftField(value=2, name="displayName", requiredness=Requiredness.NONE) final String displayName,
        @com.facebook.swift.codec.ThriftField(value=3, name="functionHandle", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftFunctionHandle functionHandle,
        @com.facebook.swift.codec.ThriftField(value=4, name="returnType", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftType returnType,
        @com.facebook.swift.codec.ThriftField(value=5, name="arguments", requiredness=Requiredness.NONE) final List<com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression> arguments
    ) {
        this.sourceLocation = sourceLocation;
        this.displayName = displayName;
        this.functionHandle = functionHandle;
        this.returnType = returnType;
        this.arguments = arguments;
    }
    
    @ThriftConstructor
    protected ThriftCallExpression() {
      this.sourceLocation = null;
      this.displayName = null;
      this.functionHandle = null;
      this.returnType = null;
      this.arguments = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftCallExpression other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftSourceLocation sourceLocation = null;
        private String displayName = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftFunctionHandle functionHandle = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftType returnType = null;
        private List<com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression> arguments = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="sourceLocation", requiredness=Requiredness.OPTIONAL)    public Builder setSourceLocation(com.facebook.presto.common.experimental.auto_gen.ThriftSourceLocation sourceLocation) {
            this.sourceLocation = sourceLocation;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftSourceLocation getSourceLocation() { return sourceLocation; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="displayName", requiredness=Requiredness.NONE)    public Builder setDisplayName(String displayName) {
            this.displayName = displayName;
            return this;
        }
    
        public String getDisplayName() { return displayName; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="functionHandle", requiredness=Requiredness.NONE)    public Builder setFunctionHandle(com.facebook.presto.common.experimental.auto_gen.ThriftFunctionHandle functionHandle) {
            this.functionHandle = functionHandle;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftFunctionHandle getFunctionHandle() { return functionHandle; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="returnType", requiredness=Requiredness.NONE)    public Builder setReturnType(com.facebook.presto.common.experimental.auto_gen.ThriftType returnType) {
            this.returnType = returnType;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftType getReturnType() { return returnType; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="arguments", requiredness=Requiredness.NONE)    public Builder setArguments(List<com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression> arguments) {
            this.arguments = arguments;
            return this;
        }
    
        public List<com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression> getArguments() { return arguments; }
    
        public Builder() { }
        public Builder(ThriftCallExpression other) {
            this.sourceLocation = other.sourceLocation;
            this.displayName = other.displayName;
            this.functionHandle = other.functionHandle;
            this.returnType = other.returnType;
            this.arguments = other.arguments;
        }
    
        @ThriftConstructor
        public ThriftCallExpression build() {
            ThriftCallExpression result = new ThriftCallExpression (
                this.sourceLocation,
                this.displayName,
                this.functionHandle,
                this.returnType,
                this.arguments
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftCallExpression");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftSourceLocation sourceLocation;
    public static final int _SOURCELOCATION = 1;
    private static final TField SOURCE_LOCATION_FIELD_DESC = new TField("sourceLocation", TType.STRUCT, (short)1);
        private final String displayName;
    public static final int _DISPLAYNAME = 2;
    private static final TField DISPLAY_NAME_FIELD_DESC = new TField("displayName", TType.STRING, (short)2);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftFunctionHandle functionHandle;
    public static final int _FUNCTIONHANDLE = 3;
    private static final TField FUNCTION_HANDLE_FIELD_DESC = new TField("functionHandle", TType.STRUCT, (short)3);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftType returnType;
    public static final int _RETURNTYPE = 4;
    private static final TField RETURN_TYPE_FIELD_DESC = new TField("returnType", TType.STRUCT, (short)4);
        private final List<com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression> arguments;
    public static final int _ARGUMENTS = 5;
    private static final TField ARGUMENTS_FIELD_DESC = new TField("arguments", TType.LIST, (short)5);
    static {
      NAMES_TO_IDS.put("sourceLocation", 1);
      THRIFT_NAMES_TO_IDS.put("sourceLocation", 1);
      FIELD_METADATA.put(1, SOURCE_LOCATION_FIELD_DESC);
      NAMES_TO_IDS.put("displayName", 2);
      THRIFT_NAMES_TO_IDS.put("displayName", 2);
      FIELD_METADATA.put(2, DISPLAY_NAME_FIELD_DESC);
      NAMES_TO_IDS.put("functionHandle", 3);
      THRIFT_NAMES_TO_IDS.put("functionHandle", 3);
      FIELD_METADATA.put(3, FUNCTION_HANDLE_FIELD_DESC);
      NAMES_TO_IDS.put("returnType", 4);
      THRIFT_NAMES_TO_IDS.put("returnType", 4);
      FIELD_METADATA.put(4, RETURN_TYPE_FIELD_DESC);
      NAMES_TO_IDS.put("arguments", 5);
      THRIFT_NAMES_TO_IDS.put("arguments", 5);
      FIELD_METADATA.put(5, ARGUMENTS_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="sourceLocation", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftSourceLocation getSourceLocation() { return sourceLocation; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="displayName", requiredness=Requiredness.NONE)
    public String getDisplayName() { return displayName; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="functionHandle", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftFunctionHandle getFunctionHandle() { return functionHandle; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="returnType", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftType getReturnType() { return returnType; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=5, name="arguments", requiredness=Requiredness.NONE)
    public List<com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression> getArguments() { return arguments; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("sourceLocation", sourceLocation);
        helper.add("displayName", displayName);
        helper.add("functionHandle", functionHandle);
        helper.add("returnType", returnType);
        helper.add("arguments", arguments);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftCallExpression other = (ThriftCallExpression)o;
    
        return
            Objects.equals(sourceLocation, other.sourceLocation) &&
            Objects.equals(displayName, other.displayName) &&
            Objects.equals(functionHandle, other.functionHandle) &&
            Objects.equals(returnType, other.returnType) &&
            Objects.equals(arguments, other.arguments) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            sourceLocation,
            displayName,
            functionHandle,
            returnType,
            arguments
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftCallExpression> asReader() {
      return ThriftCallExpression::read0;
    }
    
    public static ThriftCallExpression read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftCallExpression.NAMES_TO_IDS, ThriftCallExpression.THRIFT_NAMES_TO_IDS, ThriftCallExpression.FIELD_METADATA);
      ThriftCallExpression.Builder builder = new ThriftCallExpression.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _SOURCELOCATION:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftSourceLocation sourceLocation = com.facebook.presto.common.experimental.auto_gen.ThriftSourceLocation.read0(oprot);
            builder.setSourceLocation(sourceLocation);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _DISPLAYNAME:
          if (__field.type == TType.STRING) {
            String displayName = oprot.readString();
            builder.setDisplayName(displayName);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _FUNCTIONHANDLE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftFunctionHandle functionHandle = com.facebook.presto.common.experimental.auto_gen.ThriftFunctionHandle.read0(oprot);
            builder.setFunctionHandle(functionHandle);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _RETURNTYPE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftType returnType = com.facebook.presto.common.experimental.auto_gen.ThriftType.read0(oprot);
            builder.setReturnType(returnType);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ARGUMENTS:
          if (__field.type == TType.LIST) {
            List<com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression> arguments;
                {
                TList _list = oprot.readListBegin();
                arguments = new ArrayList<com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression.read0(oprot);
                    arguments.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setArguments(arguments);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (sourceLocation != null) {
        oprot.writeFieldBegin(SOURCE_LOCATION_FIELD_DESC);
        this.sourceLocation.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (displayName != null) {
        oprot.writeFieldBegin(DISPLAY_NAME_FIELD_DESC);
        oprot.writeString(this.displayName);
        oprot.writeFieldEnd();
      }
      if (functionHandle != null) {
        oprot.writeFieldBegin(FUNCTION_HANDLE_FIELD_DESC);
        this.functionHandle.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (returnType != null) {
        oprot.writeFieldBegin(RETURN_TYPE_FIELD_DESC);
        this.returnType.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (arguments != null) {
        oprot.writeFieldBegin(ARGUMENTS_FIELD_DESC);
        List<com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression> _iter0 = arguments;
        oprot.writeListBegin(new TList(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftCallExpressionLazy {
        private static final ThriftCallExpression _DEFAULT = new ThriftCallExpression.Builder().build();
    }
    
    public static ThriftCallExpression defaultInstance() {
        return  _ThriftCallExpressionLazy._DEFAULT;
    }
}
