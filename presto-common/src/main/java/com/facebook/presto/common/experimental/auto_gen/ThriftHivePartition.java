/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftHivePartition", builder=ThriftHivePartition.Builder.class)
public final class ThriftHivePartition implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftHivePartition(
        @com.facebook.swift.codec.ThriftField(value=1, name="tableName", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftSchemaTableName tableName,
        @com.facebook.swift.codec.ThriftField(value=2, name="partitionId", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftPartitionNameWithVersion partitionId,
        @com.facebook.swift.codec.ThriftField(value=3, name="keys", requiredness=Requiredness.NONE) final Map<com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle, com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue> keys
    ) {
        this.tableName = tableName;
        this.partitionId = partitionId;
        this.keys = keys;
    }
    
    @ThriftConstructor
    protected ThriftHivePartition() {
      this.tableName = null;
      this.partitionId = null;
      this.keys = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftHivePartition other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftSchemaTableName tableName = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftPartitionNameWithVersion partitionId = null;
        private Map<com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle, com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue> keys = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="tableName", requiredness=Requiredness.NONE)    public Builder setTableName(com.facebook.presto.common.experimental.auto_gen.ThriftSchemaTableName tableName) {
            this.tableName = tableName;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftSchemaTableName getTableName() { return tableName; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="partitionId", requiredness=Requiredness.NONE)    public Builder setPartitionId(com.facebook.presto.common.experimental.auto_gen.ThriftPartitionNameWithVersion partitionId) {
            this.partitionId = partitionId;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftPartitionNameWithVersion getPartitionId() { return partitionId; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="keys", requiredness=Requiredness.NONE)    public Builder setKeys(Map<com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle, com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue> keys) {
            this.keys = keys;
            return this;
        }
    
        public Map<com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle, com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue> getKeys() { return keys; }
    
        public Builder() { }
        public Builder(ThriftHivePartition other) {
            this.tableName = other.tableName;
            this.partitionId = other.partitionId;
            this.keys = other.keys;
        }
    
        @ThriftConstructor
        public ThriftHivePartition build() {
            ThriftHivePartition result = new ThriftHivePartition (
                this.tableName,
                this.partitionId,
                this.keys
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftHivePartition");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftSchemaTableName tableName;
    public static final int _TABLENAME = 1;
    private static final TField TABLE_NAME_FIELD_DESC = new TField("tableName", TType.STRUCT, (short)1);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftPartitionNameWithVersion partitionId;
    public static final int _PARTITIONID = 2;
    private static final TField PARTITION_ID_FIELD_DESC = new TField("partitionId", TType.STRUCT, (short)2);
        private final Map<com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle, com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue> keys;
    public static final int _KEYS = 3;
    private static final TField KEYS_FIELD_DESC = new TField("keys", TType.MAP, (short)3);
    static {
      NAMES_TO_IDS.put("tableName", 1);
      THRIFT_NAMES_TO_IDS.put("tableName", 1);
      FIELD_METADATA.put(1, TABLE_NAME_FIELD_DESC);
      NAMES_TO_IDS.put("partitionId", 2);
      THRIFT_NAMES_TO_IDS.put("partitionId", 2);
      FIELD_METADATA.put(2, PARTITION_ID_FIELD_DESC);
      NAMES_TO_IDS.put("keys", 3);
      THRIFT_NAMES_TO_IDS.put("keys", 3);
      FIELD_METADATA.put(3, KEYS_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="tableName", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftSchemaTableName getTableName() { return tableName; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="partitionId", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftPartitionNameWithVersion getPartitionId() { return partitionId; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="keys", requiredness=Requiredness.NONE)
    public Map<com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle, com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue> getKeys() { return keys; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("tableName", tableName);
        helper.add("partitionId", partitionId);
        helper.add("keys", keys);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftHivePartition other = (ThriftHivePartition)o;
    
        return
            Objects.equals(tableName, other.tableName) &&
            Objects.equals(partitionId, other.partitionId) &&
            Objects.equals(keys, other.keys) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            tableName,
            partitionId,
            keys
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftHivePartition> asReader() {
      return ThriftHivePartition::read0;
    }
    
    public static ThriftHivePartition read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftHivePartition.NAMES_TO_IDS, ThriftHivePartition.THRIFT_NAMES_TO_IDS, ThriftHivePartition.FIELD_METADATA);
      ThriftHivePartition.Builder builder = new ThriftHivePartition.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _TABLENAME:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftSchemaTableName tableName = com.facebook.presto.common.experimental.auto_gen.ThriftSchemaTableName.read0(oprot);
            builder.setTableName(tableName);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PARTITIONID:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftPartitionNameWithVersion partitionId = com.facebook.presto.common.experimental.auto_gen.ThriftPartitionNameWithVersion.read0(oprot);
            builder.setPartitionId(partitionId);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _KEYS:
          if (__field.type == TType.MAP) {
            Map<com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle, com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue> keys;
                {
                TMap _map = oprot.readMapBegin();
                keys = new HashMap<com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle, com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue>(Math.max(0, _map.size));
                for (int _i = 0; (_map.size < 0) ? oprot.peekMap() : (_i < _map.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle _key1 = com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle.read0(oprot);
                    com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue.read0(oprot);
                    keys.put(_key1, _value1);
                }
                }
                oprot.readMapEnd();
            builder.setKeys(keys);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (tableName != null) {
        oprot.writeFieldBegin(TABLE_NAME_FIELD_DESC);
        this.tableName.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (partitionId != null) {
        oprot.writeFieldBegin(PARTITION_ID_FIELD_DESC);
        this.partitionId.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (keys != null) {
        oprot.writeFieldBegin(KEYS_FIELD_DESC);
        Map<com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle, com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue> _iter0 = keys;
        oprot.writeMapBegin(new TMap(TType.STRUCT, TType.STRUCT, _iter0.size()));
            for (Map.Entry<com.facebook.presto.common.experimental.auto_gen.ThriftColumnHandle, com.facebook.presto.common.experimental.auto_gen.ThriftNullableValue> _iter1 : _iter0.entrySet()) {
              _iter1.getKey().write0(oprot);
              _iter1.getValue().write0(oprot);
            }
            oprot.writeMapEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftHivePartitionLazy {
        private static final ThriftHivePartition _DEFAULT = new ThriftHivePartition.Builder().build();
    }
    
    public static ThriftHivePartition defaultInstance() {
        return  _ThriftHivePartitionLazy._DEFAULT;
    }
}
