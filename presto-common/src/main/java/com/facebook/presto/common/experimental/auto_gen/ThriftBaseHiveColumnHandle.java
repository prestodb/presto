/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftBaseHiveColumnHandle", builder=ThriftBaseHiveColumnHandle.Builder.class)
public final class ThriftBaseHiveColumnHandle implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftBaseHiveColumnHandle(
        @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE) final String name,
        @com.facebook.swift.codec.ThriftField(value=2, name="comment", requiredness=Requiredness.OPTIONAL) final String comment,
        @com.facebook.swift.codec.ThriftField(value=3, name="columnType", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftColumnType columnType,
        @com.facebook.swift.codec.ThriftField(value=4, name="requiredSubfields", requiredness=Requiredness.NONE) final List<com.facebook.presto.common.experimental.auto_gen.ThriftSubfield> requiredSubfields
    ) {
        this.name = name;
        this.comment = comment;
        this.columnType = columnType;
        this.requiredSubfields = requiredSubfields;
    }
    
    @ThriftConstructor
    protected ThriftBaseHiveColumnHandle() {
      this.name = null;
      this.comment = null;
      this.columnType = com.facebook.presto.common.experimental.auto_gen.ThriftColumnType.fromInteger(0);
      this.requiredSubfields = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftBaseHiveColumnHandle other) {
      return new Builder(other);
    }

    public static class Builder {
        private String name = null;
        private String comment = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftColumnType columnType = com.facebook.presto.common.experimental.auto_gen.ThriftColumnType.fromInteger(0);
        private List<com.facebook.presto.common.experimental.auto_gen.ThriftSubfield> requiredSubfields = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE)    public Builder setName(String name) {
            this.name = name;
            return this;
        }
    
        public String getName() { return name; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="comment", requiredness=Requiredness.OPTIONAL)    public Builder setComment(String comment) {
            this.comment = comment;
            return this;
        }
    
        public String getComment() { return comment; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="columnType", requiredness=Requiredness.NONE)    public Builder setColumnType(com.facebook.presto.common.experimental.auto_gen.ThriftColumnType columnType) {
            this.columnType = columnType;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftColumnType getColumnType() { return columnType; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="requiredSubfields", requiredness=Requiredness.NONE)    public Builder setRequiredSubfields(List<com.facebook.presto.common.experimental.auto_gen.ThriftSubfield> requiredSubfields) {
            this.requiredSubfields = requiredSubfields;
            return this;
        }
    
        public List<com.facebook.presto.common.experimental.auto_gen.ThriftSubfield> getRequiredSubfields() { return requiredSubfields; }
    
        public Builder() { }
        public Builder(ThriftBaseHiveColumnHandle other) {
            this.name = other.name;
            this.comment = other.comment;
            this.columnType = other.columnType;
            this.requiredSubfields = other.requiredSubfields;
        }
    
        @ThriftConstructor
        public ThriftBaseHiveColumnHandle build() {
            ThriftBaseHiveColumnHandle result = new ThriftBaseHiveColumnHandle (
                this.name,
                this.comment,
                this.columnType,
                this.requiredSubfields
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftBaseHiveColumnHandle");
    private final String name;
    public static final int _NAME = 1;
    private static final TField NAME_FIELD_DESC = new TField("name", TType.STRING, (short)1);
        private final String comment;
    public static final int _COMMENT = 2;
    private static final TField COMMENT_FIELD_DESC = new TField("comment", TType.STRING, (short)2);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftColumnType columnType;
    public static final int _COLUMNTYPE = 3;
    private static final TField COLUMN_TYPE_FIELD_DESC = new TField("columnType", TType.I32, (short)3);
        private final List<com.facebook.presto.common.experimental.auto_gen.ThriftSubfield> requiredSubfields;
    public static final int _REQUIREDSUBFIELDS = 4;
    private static final TField REQUIRED_SUBFIELDS_FIELD_DESC = new TField("requiredSubfields", TType.LIST, (short)4);
    static {
      NAMES_TO_IDS.put("name", 1);
      THRIFT_NAMES_TO_IDS.put("name", 1);
      FIELD_METADATA.put(1, NAME_FIELD_DESC);
      NAMES_TO_IDS.put("comment", 2);
      THRIFT_NAMES_TO_IDS.put("comment", 2);
      FIELD_METADATA.put(2, COMMENT_FIELD_DESC);
      NAMES_TO_IDS.put("columnType", 3);
      THRIFT_NAMES_TO_IDS.put("columnType", 3);
      FIELD_METADATA.put(3, COLUMN_TYPE_FIELD_DESC);
      NAMES_TO_IDS.put("requiredSubfields", 4);
      THRIFT_NAMES_TO_IDS.put("requiredSubfields", 4);
      FIELD_METADATA.put(4, REQUIRED_SUBFIELDS_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE)
    public String getName() { return name; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="comment", requiredness=Requiredness.OPTIONAL)
    public String getComment() { return comment; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="columnType", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftColumnType getColumnType() { return columnType; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="requiredSubfields", requiredness=Requiredness.NONE)
    public List<com.facebook.presto.common.experimental.auto_gen.ThriftSubfield> getRequiredSubfields() { return requiredSubfields; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("name", name);
        helper.add("comment", comment);
        helper.add("columnType", columnType);
        helper.add("requiredSubfields", requiredSubfields);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftBaseHiveColumnHandle other = (ThriftBaseHiveColumnHandle)o;
    
        return
            Objects.equals(name, other.name) &&
            Objects.equals(comment, other.comment) &&
            Objects.equals(columnType, other.columnType) &&
            Objects.equals(requiredSubfields, other.requiredSubfields) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            name,
            comment,
            columnType,
            requiredSubfields
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftBaseHiveColumnHandle> asReader() {
      return ThriftBaseHiveColumnHandle::read0;
    }
    
    public static ThriftBaseHiveColumnHandle read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftBaseHiveColumnHandle.NAMES_TO_IDS, ThriftBaseHiveColumnHandle.THRIFT_NAMES_TO_IDS, ThriftBaseHiveColumnHandle.FIELD_METADATA);
      ThriftBaseHiveColumnHandle.Builder builder = new ThriftBaseHiveColumnHandle.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _NAME:
          if (__field.type == TType.STRING) {
            String name = oprot.readString();
            builder.setName(name);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _COMMENT:
          if (__field.type == TType.STRING) {
            String  comment = oprot.readString();
            builder.setComment(comment);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _COLUMNTYPE:
          if (__field.type == TType.I32) {
            com.facebook.presto.common.experimental.auto_gen.ThriftColumnType columnType = com.facebook.presto.common.experimental.auto_gen.ThriftColumnType.fromInteger(oprot.readI32());
            builder.setColumnType(columnType);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _REQUIREDSUBFIELDS:
          if (__field.type == TType.LIST) {
            List<com.facebook.presto.common.experimental.auto_gen.ThriftSubfield> requiredSubfields;
                {
                TList _list = oprot.readListBegin();
                requiredSubfields = new ArrayList<com.facebook.presto.common.experimental.auto_gen.ThriftSubfield>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftSubfield _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftSubfield.read0(oprot);
                    requiredSubfields.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setRequiredSubfields(requiredSubfields);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(this.name);
        oprot.writeFieldEnd();
      }
      if (comment != null) {
        oprot.writeFieldBegin(COMMENT_FIELD_DESC);
        oprot.writeString(this.comment);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COLUMN_TYPE_FIELD_DESC);
      oprot.writeI32(this.columnType == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.columnType));
      oprot.writeFieldEnd();
      if (requiredSubfields != null) {
        oprot.writeFieldBegin(REQUIRED_SUBFIELDS_FIELD_DESC);
        List<com.facebook.presto.common.experimental.auto_gen.ThriftSubfield> _iter0 = requiredSubfields;
        oprot.writeListBegin(new TList(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftSubfield _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftBaseHiveColumnHandleLazy {
        private static final ThriftBaseHiveColumnHandle _DEFAULT = new ThriftBaseHiveColumnHandle.Builder().build();
    }
    
    public static ThriftBaseHiveColumnHandle defaultInstance() {
        return  _ThriftBaseHiveColumnHandleLazy._DEFAULT;
    }
}
