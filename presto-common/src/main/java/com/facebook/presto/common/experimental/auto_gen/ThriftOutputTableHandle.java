/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftOutputTableHandle", builder=ThriftOutputTableHandle.Builder.class)
public final class ThriftOutputTableHandle implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftOutputTableHandle(
        @com.facebook.swift.codec.ThriftField(value=1, name="connectorId", requiredness=Requiredness.NONE) final String connectorId,
        @com.facebook.swift.codec.ThriftField(value=2, name="transactionHandle", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftConnectorTransactionHandle transactionHandle,
        @com.facebook.swift.codec.ThriftField(value=3, name="connectorHandle", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftConnectorOutputTableHandle connectorHandle
    ) {
        this.connectorId = connectorId;
        this.transactionHandle = transactionHandle;
        this.connectorHandle = connectorHandle;
    }
    
    @ThriftConstructor
    protected ThriftOutputTableHandle() {
      this.connectorId = null;
      this.transactionHandle = null;
      this.connectorHandle = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftOutputTableHandle other) {
      return new Builder(other);
    }

    public static class Builder {
        private String connectorId = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftConnectorTransactionHandle transactionHandle = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftConnectorOutputTableHandle connectorHandle = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="connectorId", requiredness=Requiredness.NONE)    public Builder setConnectorId(String connectorId) {
            this.connectorId = connectorId;
            return this;
        }
    
        public String getConnectorId() { return connectorId; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="transactionHandle", requiredness=Requiredness.NONE)    public Builder setTransactionHandle(com.facebook.presto.common.experimental.auto_gen.ThriftConnectorTransactionHandle transactionHandle) {
            this.transactionHandle = transactionHandle;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftConnectorTransactionHandle getTransactionHandle() { return transactionHandle; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="connectorHandle", requiredness=Requiredness.NONE)    public Builder setConnectorHandle(com.facebook.presto.common.experimental.auto_gen.ThriftConnectorOutputTableHandle connectorHandle) {
            this.connectorHandle = connectorHandle;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftConnectorOutputTableHandle getConnectorHandle() { return connectorHandle; }
    
        public Builder() { }
        public Builder(ThriftOutputTableHandle other) {
            this.connectorId = other.connectorId;
            this.transactionHandle = other.transactionHandle;
            this.connectorHandle = other.connectorHandle;
        }
    
        @ThriftConstructor
        public ThriftOutputTableHandle build() {
            ThriftOutputTableHandle result = new ThriftOutputTableHandle (
                this.connectorId,
                this.transactionHandle,
                this.connectorHandle
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftOutputTableHandle");
    private final String connectorId;
    public static final int _CONNECTORID = 1;
    private static final TField CONNECTOR_ID_FIELD_DESC = new TField("connectorId", TType.STRING, (short)1);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftConnectorTransactionHandle transactionHandle;
    public static final int _TRANSACTIONHANDLE = 2;
    private static final TField TRANSACTION_HANDLE_FIELD_DESC = new TField("transactionHandle", TType.STRUCT, (short)2);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftConnectorOutputTableHandle connectorHandle;
    public static final int _CONNECTORHANDLE = 3;
    private static final TField CONNECTOR_HANDLE_FIELD_DESC = new TField("connectorHandle", TType.STRUCT, (short)3);
    static {
      NAMES_TO_IDS.put("connectorId", 1);
      THRIFT_NAMES_TO_IDS.put("connectorId", 1);
      FIELD_METADATA.put(1, CONNECTOR_ID_FIELD_DESC);
      NAMES_TO_IDS.put("transactionHandle", 2);
      THRIFT_NAMES_TO_IDS.put("transactionHandle", 2);
      FIELD_METADATA.put(2, TRANSACTION_HANDLE_FIELD_DESC);
      NAMES_TO_IDS.put("connectorHandle", 3);
      THRIFT_NAMES_TO_IDS.put("connectorHandle", 3);
      FIELD_METADATA.put(3, CONNECTOR_HANDLE_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="connectorId", requiredness=Requiredness.NONE)
    public String getConnectorId() { return connectorId; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="transactionHandle", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftConnectorTransactionHandle getTransactionHandle() { return transactionHandle; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="connectorHandle", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftConnectorOutputTableHandle getConnectorHandle() { return connectorHandle; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("connectorId", connectorId);
        helper.add("transactionHandle", transactionHandle);
        helper.add("connectorHandle", connectorHandle);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftOutputTableHandle other = (ThriftOutputTableHandle)o;
    
        return
            Objects.equals(connectorId, other.connectorId) &&
            Objects.equals(transactionHandle, other.transactionHandle) &&
            Objects.equals(connectorHandle, other.connectorHandle) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            connectorId,
            transactionHandle,
            connectorHandle
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftOutputTableHandle> asReader() {
      return ThriftOutputTableHandle::read0;
    }
    
    public static ThriftOutputTableHandle read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftOutputTableHandle.NAMES_TO_IDS, ThriftOutputTableHandle.THRIFT_NAMES_TO_IDS, ThriftOutputTableHandle.FIELD_METADATA);
      ThriftOutputTableHandle.Builder builder = new ThriftOutputTableHandle.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _CONNECTORID:
          if (__field.type == TType.STRING) {
            String connectorId = oprot.readString();
            builder.setConnectorId(connectorId);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TRANSACTIONHANDLE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftConnectorTransactionHandle transactionHandle = com.facebook.presto.common.experimental.auto_gen.ThriftConnectorTransactionHandle.read0(oprot);
            builder.setTransactionHandle(transactionHandle);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _CONNECTORHANDLE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftConnectorOutputTableHandle connectorHandle = com.facebook.presto.common.experimental.auto_gen.ThriftConnectorOutputTableHandle.read0(oprot);
            builder.setConnectorHandle(connectorHandle);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (connectorId != null) {
        oprot.writeFieldBegin(CONNECTOR_ID_FIELD_DESC);
        oprot.writeString(this.connectorId);
        oprot.writeFieldEnd();
      }
      if (transactionHandle != null) {
        oprot.writeFieldBegin(TRANSACTION_HANDLE_FIELD_DESC);
        this.transactionHandle.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (connectorHandle != null) {
        oprot.writeFieldBegin(CONNECTOR_HANDLE_FIELD_DESC);
        this.connectorHandle.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftOutputTableHandleLazy {
        private static final ThriftOutputTableHandle _DEFAULT = new ThriftOutputTableHandle.Builder().build();
    }
    
    public static ThriftOutputTableHandle defaultInstance() {
        return  _ThriftOutputTableHandleLazy._DEFAULT;
    }
}
