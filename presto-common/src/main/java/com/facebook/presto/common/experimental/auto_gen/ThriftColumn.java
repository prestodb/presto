/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftColumn", builder=ThriftColumn.Builder.class)
public final class ThriftColumn implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftColumn(
        @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE) final String name,
        @com.facebook.swift.codec.ThriftField(value=2, name="type", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftHiveType type,
        @com.facebook.swift.codec.ThriftField(value=3, name="comment", requiredness=Requiredness.OPTIONAL) final String comment,
        @com.facebook.swift.codec.ThriftField(value=4, name="typeMetadata", requiredness=Requiredness.OPTIONAL) final String typeMetadata
    ) {
        this.name = name;
        this.type = type;
        this.comment = comment;
        this.typeMetadata = typeMetadata;
    }
    
    @ThriftConstructor
    protected ThriftColumn() {
      this.name = null;
      this.type = null;
      this.comment = null;
      this.typeMetadata = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftColumn other) {
      return new Builder(other);
    }

    public static class Builder {
        private String name = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftHiveType type = null;
        private String comment = null;
        private String typeMetadata = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE)    public Builder setName(String name) {
            this.name = name;
            return this;
        }
    
        public String getName() { return name; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="type", requiredness=Requiredness.NONE)    public Builder setType(com.facebook.presto.common.experimental.auto_gen.ThriftHiveType type) {
            this.type = type;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftHiveType getType() { return type; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="comment", requiredness=Requiredness.OPTIONAL)    public Builder setComment(String comment) {
            this.comment = comment;
            return this;
        }
    
        public String getComment() { return comment; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="typeMetadata", requiredness=Requiredness.OPTIONAL)    public Builder setTypeMetadata(String typeMetadata) {
            this.typeMetadata = typeMetadata;
            return this;
        }
    
        public String getTypeMetadata() { return typeMetadata; }
    
        public Builder() { }
        public Builder(ThriftColumn other) {
            this.name = other.name;
            this.type = other.type;
            this.comment = other.comment;
            this.typeMetadata = other.typeMetadata;
        }
    
        @ThriftConstructor
        public ThriftColumn build() {
            ThriftColumn result = new ThriftColumn (
                this.name,
                this.type,
                this.comment,
                this.typeMetadata
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftColumn");
    private final String name;
    public static final int _NAME = 1;
    private static final TField NAME_FIELD_DESC = new TField("name", TType.STRING, (short)1);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftHiveType type;
    public static final int _TYPE = 2;
    private static final TField TYPE_FIELD_DESC = new TField("type", TType.STRUCT, (short)2);
        private final String comment;
    public static final int _COMMENT = 3;
    private static final TField COMMENT_FIELD_DESC = new TField("comment", TType.STRING, (short)3);
        private final String typeMetadata;
    public static final int _TYPEMETADATA = 4;
    private static final TField TYPE_METADATA_FIELD_DESC = new TField("typeMetadata", TType.STRING, (short)4);
    static {
      NAMES_TO_IDS.put("name", 1);
      THRIFT_NAMES_TO_IDS.put("name", 1);
      FIELD_METADATA.put(1, NAME_FIELD_DESC);
      NAMES_TO_IDS.put("type", 2);
      THRIFT_NAMES_TO_IDS.put("type", 2);
      FIELD_METADATA.put(2, TYPE_FIELD_DESC);
      NAMES_TO_IDS.put("comment", 3);
      THRIFT_NAMES_TO_IDS.put("comment", 3);
      FIELD_METADATA.put(3, COMMENT_FIELD_DESC);
      NAMES_TO_IDS.put("typeMetadata", 4);
      THRIFT_NAMES_TO_IDS.put("typeMetadata", 4);
      FIELD_METADATA.put(4, TYPE_METADATA_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE)
    public String getName() { return name; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="type", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftHiveType getType() { return type; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="comment", requiredness=Requiredness.OPTIONAL)
    public String getComment() { return comment; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="typeMetadata", requiredness=Requiredness.OPTIONAL)
    public String getTypeMetadata() { return typeMetadata; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("name", name);
        helper.add("type", type);
        helper.add("comment", comment);
        helper.add("typeMetadata", typeMetadata);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftColumn other = (ThriftColumn)o;
    
        return
            Objects.equals(name, other.name) &&
            Objects.equals(type, other.type) &&
            Objects.equals(comment, other.comment) &&
            Objects.equals(typeMetadata, other.typeMetadata) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            name,
            type,
            comment,
            typeMetadata
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftColumn> asReader() {
      return ThriftColumn::read0;
    }
    
    public static ThriftColumn read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftColumn.NAMES_TO_IDS, ThriftColumn.THRIFT_NAMES_TO_IDS, ThriftColumn.FIELD_METADATA);
      ThriftColumn.Builder builder = new ThriftColumn.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _NAME:
          if (__field.type == TType.STRING) {
            String name = oprot.readString();
            builder.setName(name);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TYPE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftHiveType type = com.facebook.presto.common.experimental.auto_gen.ThriftHiveType.read0(oprot);
            builder.setType(type);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _COMMENT:
          if (__field.type == TType.STRING) {
            String  comment = oprot.readString();
            builder.setComment(comment);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TYPEMETADATA:
          if (__field.type == TType.STRING) {
            String  typeMetadata = oprot.readString();
            builder.setTypeMetadata(typeMetadata);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(this.name);
        oprot.writeFieldEnd();
      }
      if (type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        this.type.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (comment != null) {
        oprot.writeFieldBegin(COMMENT_FIELD_DESC);
        oprot.writeString(this.comment);
        oprot.writeFieldEnd();
      }
      if (typeMetadata != null) {
        oprot.writeFieldBegin(TYPE_METADATA_FIELD_DESC);
        oprot.writeString(this.typeMetadata);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftColumnLazy {
        private static final ThriftColumn _DEFAULT = new ThriftColumn.Builder().build();
    }
    
    public static ThriftColumn defaultInstance() {
        return  _ThriftColumnLazy._DEFAULT;
    }
}
