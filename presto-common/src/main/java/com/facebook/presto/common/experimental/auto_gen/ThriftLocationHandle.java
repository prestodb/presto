/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftLocationHandle", builder=ThriftLocationHandle.Builder.class)
public final class ThriftLocationHandle implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftLocationHandle(
        @com.facebook.swift.codec.ThriftField(value=1, name="targetPath", requiredness=Requiredness.NONE) final String targetPath,
        @com.facebook.swift.codec.ThriftField(value=2, name="writePath", requiredness=Requiredness.NONE) final String writePath,
        @com.facebook.swift.codec.ThriftField(value=3, name="tempPath", requiredness=Requiredness.OPTIONAL) final String tempPath,
        @com.facebook.swift.codec.ThriftField(value=4, name="tableType", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftTableType tableType,
        @com.facebook.swift.codec.ThriftField(value=5, name="writeMode", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftWriteMode writeMode
    ) {
        this.targetPath = targetPath;
        this.writePath = writePath;
        this.tempPath = tempPath;
        this.tableType = tableType;
        this.writeMode = writeMode;
    }
    
    @ThriftConstructor
    protected ThriftLocationHandle() {
      this.targetPath = null;
      this.writePath = null;
      this.tempPath = null;
      this.tableType = com.facebook.presto.common.experimental.auto_gen.ThriftTableType.fromInteger(0);
      this.writeMode = com.facebook.presto.common.experimental.auto_gen.ThriftWriteMode.fromInteger(0);
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftLocationHandle other) {
      return new Builder(other);
    }

    public static class Builder {
        private String targetPath = null;
        private String writePath = null;
        private String tempPath = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftTableType tableType = com.facebook.presto.common.experimental.auto_gen.ThriftTableType.fromInteger(0);
        private com.facebook.presto.common.experimental.auto_gen.ThriftWriteMode writeMode = com.facebook.presto.common.experimental.auto_gen.ThriftWriteMode.fromInteger(0);
    
        @com.facebook.swift.codec.ThriftField(value=1, name="targetPath", requiredness=Requiredness.NONE)    public Builder setTargetPath(String targetPath) {
            this.targetPath = targetPath;
            return this;
        }
    
        public String getTargetPath() { return targetPath; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="writePath", requiredness=Requiredness.NONE)    public Builder setWritePath(String writePath) {
            this.writePath = writePath;
            return this;
        }
    
        public String getWritePath() { return writePath; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="tempPath", requiredness=Requiredness.OPTIONAL)    public Builder setTempPath(String tempPath) {
            this.tempPath = tempPath;
            return this;
        }
    
        public String getTempPath() { return tempPath; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="tableType", requiredness=Requiredness.NONE)    public Builder setTableType(com.facebook.presto.common.experimental.auto_gen.ThriftTableType tableType) {
            this.tableType = tableType;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftTableType getTableType() { return tableType; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="writeMode", requiredness=Requiredness.NONE)    public Builder setWriteMode(com.facebook.presto.common.experimental.auto_gen.ThriftWriteMode writeMode) {
            this.writeMode = writeMode;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftWriteMode getWriteMode() { return writeMode; }
    
        public Builder() { }
        public Builder(ThriftLocationHandle other) {
            this.targetPath = other.targetPath;
            this.writePath = other.writePath;
            this.tempPath = other.tempPath;
            this.tableType = other.tableType;
            this.writeMode = other.writeMode;
        }
    
        @ThriftConstructor
        public ThriftLocationHandle build() {
            ThriftLocationHandle result = new ThriftLocationHandle (
                this.targetPath,
                this.writePath,
                this.tempPath,
                this.tableType,
                this.writeMode
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftLocationHandle");
    private final String targetPath;
    public static final int _TARGETPATH = 1;
    private static final TField TARGET_PATH_FIELD_DESC = new TField("targetPath", TType.STRING, (short)1);
        private final String writePath;
    public static final int _WRITEPATH = 2;
    private static final TField WRITE_PATH_FIELD_DESC = new TField("writePath", TType.STRING, (short)2);
        private final String tempPath;
    public static final int _TEMPPATH = 3;
    private static final TField TEMP_PATH_FIELD_DESC = new TField("tempPath", TType.STRING, (short)3);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftTableType tableType;
    public static final int _TABLETYPE = 4;
    private static final TField TABLE_TYPE_FIELD_DESC = new TField("tableType", TType.I32, (short)4);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftWriteMode writeMode;
    public static final int _WRITEMODE = 5;
    private static final TField WRITE_MODE_FIELD_DESC = new TField("writeMode", TType.I32, (short)5);
    static {
      NAMES_TO_IDS.put("targetPath", 1);
      THRIFT_NAMES_TO_IDS.put("targetPath", 1);
      FIELD_METADATA.put(1, TARGET_PATH_FIELD_DESC);
      NAMES_TO_IDS.put("writePath", 2);
      THRIFT_NAMES_TO_IDS.put("writePath", 2);
      FIELD_METADATA.put(2, WRITE_PATH_FIELD_DESC);
      NAMES_TO_IDS.put("tempPath", 3);
      THRIFT_NAMES_TO_IDS.put("tempPath", 3);
      FIELD_METADATA.put(3, TEMP_PATH_FIELD_DESC);
      NAMES_TO_IDS.put("tableType", 4);
      THRIFT_NAMES_TO_IDS.put("tableType", 4);
      FIELD_METADATA.put(4, TABLE_TYPE_FIELD_DESC);
      NAMES_TO_IDS.put("writeMode", 5);
      THRIFT_NAMES_TO_IDS.put("writeMode", 5);
      FIELD_METADATA.put(5, WRITE_MODE_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="targetPath", requiredness=Requiredness.NONE)
    public String getTargetPath() { return targetPath; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="writePath", requiredness=Requiredness.NONE)
    public String getWritePath() { return writePath; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="tempPath", requiredness=Requiredness.OPTIONAL)
    public String getTempPath() { return tempPath; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="tableType", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftTableType getTableType() { return tableType; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=5, name="writeMode", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftWriteMode getWriteMode() { return writeMode; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("targetPath", targetPath);
        helper.add("writePath", writePath);
        helper.add("tempPath", tempPath);
        helper.add("tableType", tableType);
        helper.add("writeMode", writeMode);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftLocationHandle other = (ThriftLocationHandle)o;
    
        return
            Objects.equals(targetPath, other.targetPath) &&
            Objects.equals(writePath, other.writePath) &&
            Objects.equals(tempPath, other.tempPath) &&
            Objects.equals(tableType, other.tableType) &&
            Objects.equals(writeMode, other.writeMode) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            targetPath,
            writePath,
            tempPath,
            tableType,
            writeMode
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftLocationHandle> asReader() {
      return ThriftLocationHandle::read0;
    }
    
    public static ThriftLocationHandle read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftLocationHandle.NAMES_TO_IDS, ThriftLocationHandle.THRIFT_NAMES_TO_IDS, ThriftLocationHandle.FIELD_METADATA);
      ThriftLocationHandle.Builder builder = new ThriftLocationHandle.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _TARGETPATH:
          if (__field.type == TType.STRING) {
            String targetPath = oprot.readString();
            builder.setTargetPath(targetPath);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _WRITEPATH:
          if (__field.type == TType.STRING) {
            String writePath = oprot.readString();
            builder.setWritePath(writePath);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TEMPPATH:
          if (__field.type == TType.STRING) {
            String  tempPath = oprot.readString();
            builder.setTempPath(tempPath);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TABLETYPE:
          if (__field.type == TType.I32) {
            com.facebook.presto.common.experimental.auto_gen.ThriftTableType tableType = com.facebook.presto.common.experimental.auto_gen.ThriftTableType.fromInteger(oprot.readI32());
            builder.setTableType(tableType);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _WRITEMODE:
          if (__field.type == TType.I32) {
            com.facebook.presto.common.experimental.auto_gen.ThriftWriteMode writeMode = com.facebook.presto.common.experimental.auto_gen.ThriftWriteMode.fromInteger(oprot.readI32());
            builder.setWriteMode(writeMode);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (targetPath != null) {
        oprot.writeFieldBegin(TARGET_PATH_FIELD_DESC);
        oprot.writeString(this.targetPath);
        oprot.writeFieldEnd();
      }
      if (writePath != null) {
        oprot.writeFieldBegin(WRITE_PATH_FIELD_DESC);
        oprot.writeString(this.writePath);
        oprot.writeFieldEnd();
      }
      if (tempPath != null) {
        oprot.writeFieldBegin(TEMP_PATH_FIELD_DESC);
        oprot.writeString(this.tempPath);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TABLE_TYPE_FIELD_DESC);
      oprot.writeI32(this.tableType == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.tableType));
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(WRITE_MODE_FIELD_DESC);
      oprot.writeI32(this.writeMode == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.writeMode));
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftLocationHandleLazy {
        private static final ThriftLocationHandle _DEFAULT = new ThriftLocationHandle.Builder().build();
    }
    
    public static ThriftLocationHandle defaultInstance() {
        return  _ThriftLocationHandleLazy._DEFAULT;
    }
}
