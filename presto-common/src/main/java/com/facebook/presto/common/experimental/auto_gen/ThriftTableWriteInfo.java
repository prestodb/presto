/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftTableWriteInfo", builder=ThriftTableWriteInfo.Builder.class)
public final class ThriftTableWriteInfo implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftTableWriteInfo(
        @com.facebook.swift.codec.ThriftField(value=1, name="writerTarget", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftExecutionWriterTarget writerTarget,
        @com.facebook.swift.codec.ThriftField(value=2, name="analyzeTableHandle", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftAnalyzeTableHandle analyzeTableHandle,
        @com.facebook.swift.codec.ThriftField(value=3, name="deleteScanInfo", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftDeleteScanInfo deleteScanInfo
    ) {
        this.writerTarget = writerTarget;
        this.analyzeTableHandle = analyzeTableHandle;
        this.deleteScanInfo = deleteScanInfo;
    }
    
    @ThriftConstructor
    protected ThriftTableWriteInfo() {
      this.writerTarget = null;
      this.analyzeTableHandle = null;
      this.deleteScanInfo = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftTableWriteInfo other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftExecutionWriterTarget writerTarget = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftAnalyzeTableHandle analyzeTableHandle = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftDeleteScanInfo deleteScanInfo = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="writerTarget", requiredness=Requiredness.OPTIONAL)    public Builder setWriterTarget(com.facebook.presto.common.experimental.auto_gen.ThriftExecutionWriterTarget writerTarget) {
            this.writerTarget = writerTarget;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftExecutionWriterTarget getWriterTarget() { return writerTarget; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="analyzeTableHandle", requiredness=Requiredness.OPTIONAL)    public Builder setAnalyzeTableHandle(com.facebook.presto.common.experimental.auto_gen.ThriftAnalyzeTableHandle analyzeTableHandle) {
            this.analyzeTableHandle = analyzeTableHandle;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftAnalyzeTableHandle getAnalyzeTableHandle() { return analyzeTableHandle; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="deleteScanInfo", requiredness=Requiredness.OPTIONAL)    public Builder setDeleteScanInfo(com.facebook.presto.common.experimental.auto_gen.ThriftDeleteScanInfo deleteScanInfo) {
            this.deleteScanInfo = deleteScanInfo;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftDeleteScanInfo getDeleteScanInfo() { return deleteScanInfo; }
    
        public Builder() { }
        public Builder(ThriftTableWriteInfo other) {
            this.writerTarget = other.writerTarget;
            this.analyzeTableHandle = other.analyzeTableHandle;
            this.deleteScanInfo = other.deleteScanInfo;
        }
    
        @ThriftConstructor
        public ThriftTableWriteInfo build() {
            ThriftTableWriteInfo result = new ThriftTableWriteInfo (
                this.writerTarget,
                this.analyzeTableHandle,
                this.deleteScanInfo
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftTableWriteInfo");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftExecutionWriterTarget writerTarget;
    public static final int _WRITERTARGET = 1;
    private static final TField WRITER_TARGET_FIELD_DESC = new TField("writerTarget", TType.STRUCT, (short)1);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftAnalyzeTableHandle analyzeTableHandle;
    public static final int _ANALYZETABLEHANDLE = 2;
    private static final TField ANALYZE_TABLE_HANDLE_FIELD_DESC = new TField("analyzeTableHandle", TType.STRUCT, (short)2);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftDeleteScanInfo deleteScanInfo;
    public static final int _DELETESCANINFO = 3;
    private static final TField DELETE_SCAN_INFO_FIELD_DESC = new TField("deleteScanInfo", TType.STRUCT, (short)3);
    static {
      NAMES_TO_IDS.put("writerTarget", 1);
      THRIFT_NAMES_TO_IDS.put("writerTarget", 1);
      FIELD_METADATA.put(1, WRITER_TARGET_FIELD_DESC);
      NAMES_TO_IDS.put("analyzeTableHandle", 2);
      THRIFT_NAMES_TO_IDS.put("analyzeTableHandle", 2);
      FIELD_METADATA.put(2, ANALYZE_TABLE_HANDLE_FIELD_DESC);
      NAMES_TO_IDS.put("deleteScanInfo", 3);
      THRIFT_NAMES_TO_IDS.put("deleteScanInfo", 3);
      FIELD_METADATA.put(3, DELETE_SCAN_INFO_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="writerTarget", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftExecutionWriterTarget getWriterTarget() { return writerTarget; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="analyzeTableHandle", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftAnalyzeTableHandle getAnalyzeTableHandle() { return analyzeTableHandle; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="deleteScanInfo", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftDeleteScanInfo getDeleteScanInfo() { return deleteScanInfo; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("writerTarget", writerTarget);
        helper.add("analyzeTableHandle", analyzeTableHandle);
        helper.add("deleteScanInfo", deleteScanInfo);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftTableWriteInfo other = (ThriftTableWriteInfo)o;
    
        return
            Objects.equals(writerTarget, other.writerTarget) &&
            Objects.equals(analyzeTableHandle, other.analyzeTableHandle) &&
            Objects.equals(deleteScanInfo, other.deleteScanInfo) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            writerTarget,
            analyzeTableHandle,
            deleteScanInfo
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftTableWriteInfo> asReader() {
      return ThriftTableWriteInfo::read0;
    }
    
    public static ThriftTableWriteInfo read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftTableWriteInfo.NAMES_TO_IDS, ThriftTableWriteInfo.THRIFT_NAMES_TO_IDS, ThriftTableWriteInfo.FIELD_METADATA);
      ThriftTableWriteInfo.Builder builder = new ThriftTableWriteInfo.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _WRITERTARGET:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftExecutionWriterTarget writerTarget = com.facebook.presto.common.experimental.auto_gen.ThriftExecutionWriterTarget.read0(oprot);
            builder.setWriterTarget(writerTarget);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ANALYZETABLEHANDLE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftAnalyzeTableHandle analyzeTableHandle = com.facebook.presto.common.experimental.auto_gen.ThriftAnalyzeTableHandle.read0(oprot);
            builder.setAnalyzeTableHandle(analyzeTableHandle);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _DELETESCANINFO:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftDeleteScanInfo deleteScanInfo = com.facebook.presto.common.experimental.auto_gen.ThriftDeleteScanInfo.read0(oprot);
            builder.setDeleteScanInfo(deleteScanInfo);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (writerTarget != null) {
        oprot.writeFieldBegin(WRITER_TARGET_FIELD_DESC);
        this.writerTarget.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (analyzeTableHandle != null) {
        oprot.writeFieldBegin(ANALYZE_TABLE_HANDLE_FIELD_DESC);
        this.analyzeTableHandle.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (deleteScanInfo != null) {
        oprot.writeFieldBegin(DELETE_SCAN_INFO_FIELD_DESC);
        this.deleteScanInfo.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftTableWriteInfoLazy {
        private static final ThriftTableWriteInfo _DEFAULT = new ThriftTableWriteInfo.Builder().build();
    }
    
    public static ThriftTableWriteInfo defaultInstance() {
        return  _ThriftTableWriteInfoLazy._DEFAULT;
    }
}
