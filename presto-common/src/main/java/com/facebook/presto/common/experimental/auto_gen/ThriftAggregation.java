/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftAggregation", builder=ThriftAggregation.Builder.class)
public final class ThriftAggregation implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftAggregation(
        @com.facebook.swift.codec.ThriftField(value=1, name="call", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftCallExpression call,
        @com.facebook.swift.codec.ThriftField(value=2, name="filter", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression filter,
        @com.facebook.swift.codec.ThriftField(value=3, name="orderingScheme", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftOrderingScheme orderingScheme,
        @com.facebook.swift.codec.ThriftField(value=4, name="isDistinct", requiredness=Requiredness.NONE) final boolean isDistinct,
        @com.facebook.swift.codec.ThriftField(value=5, name="mask", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftVariableReferenceExpression mask
    ) {
        this.call = call;
        this.filter = filter;
        this.orderingScheme = orderingScheme;
        this.isDistinct = isDistinct;
        this.mask = mask;
    }
    
    @ThriftConstructor
    protected ThriftAggregation() {
      this.call = null;
      this.filter = null;
      this.orderingScheme = null;
      this.isDistinct = false;
      this.mask = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftAggregation other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftCallExpression call = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression filter = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftOrderingScheme orderingScheme = null;
        private boolean isDistinct = false;
        private com.facebook.presto.common.experimental.auto_gen.ThriftVariableReferenceExpression mask = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="call", requiredness=Requiredness.NONE)    public Builder setCall(com.facebook.presto.common.experimental.auto_gen.ThriftCallExpression call) {
            this.call = call;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftCallExpression getCall() { return call; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="filter", requiredness=Requiredness.OPTIONAL)    public Builder setFilter(com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression filter) {
            this.filter = filter;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression getFilter() { return filter; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="orderingScheme", requiredness=Requiredness.OPTIONAL)    public Builder setOrderingScheme(com.facebook.presto.common.experimental.auto_gen.ThriftOrderingScheme orderingScheme) {
            this.orderingScheme = orderingScheme;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftOrderingScheme getOrderingScheme() { return orderingScheme; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="isDistinct", requiredness=Requiredness.NONE)    public Builder setIsDistinct(boolean isDistinct) {
            this.isDistinct = isDistinct;
            return this;
        }
    
        public boolean isIsDistinct() { return isDistinct; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="mask", requiredness=Requiredness.OPTIONAL)    public Builder setMask(com.facebook.presto.common.experimental.auto_gen.ThriftVariableReferenceExpression mask) {
            this.mask = mask;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftVariableReferenceExpression getMask() { return mask; }
    
        public Builder() { }
        public Builder(ThriftAggregation other) {
            this.call = other.call;
            this.filter = other.filter;
            this.orderingScheme = other.orderingScheme;
            this.isDistinct = other.isDistinct;
            this.mask = other.mask;
        }
    
        @ThriftConstructor
        public ThriftAggregation build() {
            ThriftAggregation result = new ThriftAggregation (
                this.call,
                this.filter,
                this.orderingScheme,
                this.isDistinct,
                this.mask
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftAggregation");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftCallExpression call;
    public static final int _CALL = 1;
    private static final TField CALL_FIELD_DESC = new TField("call", TType.STRUCT, (short)1);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression filter;
    public static final int _FILTER = 2;
    private static final TField FILTER_FIELD_DESC = new TField("filter", TType.STRUCT, (short)2);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftOrderingScheme orderingScheme;
    public static final int _ORDERINGSCHEME = 3;
    private static final TField ORDERING_SCHEME_FIELD_DESC = new TField("orderingScheme", TType.STRUCT, (short)3);
        private final boolean isDistinct;
    public static final int _ISDISTINCT = 4;
    private static final TField IS_DISTINCT_FIELD_DESC = new TField("isDistinct", TType.BOOL, (short)4);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftVariableReferenceExpression mask;
    public static final int _MASK = 5;
    private static final TField MASK_FIELD_DESC = new TField("mask", TType.STRUCT, (short)5);
    static {
      NAMES_TO_IDS.put("call", 1);
      THRIFT_NAMES_TO_IDS.put("call", 1);
      FIELD_METADATA.put(1, CALL_FIELD_DESC);
      NAMES_TO_IDS.put("filter", 2);
      THRIFT_NAMES_TO_IDS.put("filter", 2);
      FIELD_METADATA.put(2, FILTER_FIELD_DESC);
      NAMES_TO_IDS.put("orderingScheme", 3);
      THRIFT_NAMES_TO_IDS.put("orderingScheme", 3);
      FIELD_METADATA.put(3, ORDERING_SCHEME_FIELD_DESC);
      NAMES_TO_IDS.put("isDistinct", 4);
      THRIFT_NAMES_TO_IDS.put("isDistinct", 4);
      FIELD_METADATA.put(4, IS_DISTINCT_FIELD_DESC);
      NAMES_TO_IDS.put("mask", 5);
      THRIFT_NAMES_TO_IDS.put("mask", 5);
      FIELD_METADATA.put(5, MASK_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="call", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftCallExpression getCall() { return call; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="filter", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression getFilter() { return filter; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="orderingScheme", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftOrderingScheme getOrderingScheme() { return orderingScheme; }

    
    
    @com.facebook.swift.codec.ThriftField(value=4, name="isDistinct", requiredness=Requiredness.NONE)
    public boolean isIsDistinct() { return isDistinct; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=5, name="mask", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftVariableReferenceExpression getMask() { return mask; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("call", call);
        helper.add("filter", filter);
        helper.add("orderingScheme", orderingScheme);
        helper.add("isDistinct", isDistinct);
        helper.add("mask", mask);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftAggregation other = (ThriftAggregation)o;
    
        return
            Objects.equals(call, other.call) &&
            Objects.equals(filter, other.filter) &&
            Objects.equals(orderingScheme, other.orderingScheme) &&
            Objects.equals(isDistinct, other.isDistinct) &&
            Objects.equals(mask, other.mask) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            call,
            filter,
            orderingScheme,
            isDistinct,
            mask
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftAggregation> asReader() {
      return ThriftAggregation::read0;
    }
    
    public static ThriftAggregation read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftAggregation.NAMES_TO_IDS, ThriftAggregation.THRIFT_NAMES_TO_IDS, ThriftAggregation.FIELD_METADATA);
      ThriftAggregation.Builder builder = new ThriftAggregation.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _CALL:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftCallExpression call = com.facebook.presto.common.experimental.auto_gen.ThriftCallExpression.read0(oprot);
            builder.setCall(call);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _FILTER:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression filter = com.facebook.presto.common.experimental.auto_gen.ThriftRowExpression.read0(oprot);
            builder.setFilter(filter);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ORDERINGSCHEME:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftOrderingScheme orderingScheme = com.facebook.presto.common.experimental.auto_gen.ThriftOrderingScheme.read0(oprot);
            builder.setOrderingScheme(orderingScheme);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ISDISTINCT:
          if (__field.type == TType.BOOL) {
            boolean isDistinct = oprot.readBool();
            builder.setIsDistinct(isDistinct);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _MASK:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftVariableReferenceExpression mask = com.facebook.presto.common.experimental.auto_gen.ThriftVariableReferenceExpression.read0(oprot);
            builder.setMask(mask);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (call != null) {
        oprot.writeFieldBegin(CALL_FIELD_DESC);
        this.call.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (filter != null) {
        oprot.writeFieldBegin(FILTER_FIELD_DESC);
        this.filter.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (orderingScheme != null) {
        oprot.writeFieldBegin(ORDERING_SCHEME_FIELD_DESC);
        this.orderingScheme.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(IS_DISTINCT_FIELD_DESC);
      oprot.writeBool(this.isDistinct);
      oprot.writeFieldEnd();
      if (mask != null) {
        oprot.writeFieldBegin(MASK_FIELD_DESC);
        this.mask.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftAggregationLazy {
        private static final ThriftAggregation _DEFAULT = new ThriftAggregation.Builder().build();
    }
    
    public static ThriftAggregation defaultInstance() {
        return  _ThriftAggregationLazy._DEFAULT;
    }
}
