/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import java.util.*;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;

import static com.google.common.base.MoreObjects.toStringHelper;

@SwiftGenerated
@ThriftUnion("ThriftTypeSignatureParameterUnion")
public final class ThriftTypeSignatureParameterUnion implements com.facebook.thrift.payload.ThriftSerializable {
    
    private static final boolean allowNullFieldValues =
        System.getProperty("thrift.union.allow-null-field-values", "false").equalsIgnoreCase("true");

    private static final TStruct STRUCT_DESC = new TStruct("ThriftTypeSignatureParameterUnion");
    private static final Map<String, Integer> NAMES_TO_IDS = new HashMap();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap();
    private static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final ThriftTypeSignatureParameterUnion _DEFAULT = new ThriftTypeSignatureParameterUnion();

    public static final int _KIND = 1;
    private static final TField KIND_FIELD_DESC = new TField("kind", TType.I32, (short)1);
    public static final int _TYPESIGNATURE = 2;
    private static final TField TYPE_SIGNATURE_FIELD_DESC = new TField("typeSignature", TType.STRUCT, (short)2);
    public static final int _NAMEDTYPESIGNATURE = 3;
    private static final TField NAMED_TYPE_SIGNATURE_FIELD_DESC = new TField("namedTypeSignature", TType.STRUCT, (short)3);
    public static final int _LONGLITERAL = 4;
    private static final TField LONG_LITERAL_FIELD_DESC = new TField("longLiteral", TType.I64, (short)4);
    public static final int _VARIABLE = 5;
    private static final TField VARIABLE_FIELD_DESC = new TField("variable", TType.STRING, (short)5);
    public static final int _LONGENUMMAP = 6;
    private static final TField LONG_ENUM_MAP_FIELD_DESC = new TField("longEnumMap", TType.STRUCT, (short)6);
    public static final int _VARCHARENUMMAP = 7;
    private static final TField VARCHAR_ENUM_MAP_FIELD_DESC = new TField("varcharEnumMap", TType.STRUCT, (short)7);
    public static final int _DISTINCTTYPEINFO = 8;
    private static final TField DISTINCT_TYPE_INFO_FIELD_DESC = new TField("distinctTypeInfo", TType.STRUCT, (short)8);

    static {
      NAMES_TO_IDS.put("kind", 1);
      THRIFT_NAMES_TO_IDS.put("kind", 1);
      FIELD_METADATA.put(1, KIND_FIELD_DESC);
      NAMES_TO_IDS.put("typeSignature", 2);
      THRIFT_NAMES_TO_IDS.put("typeSignature", 2);
      FIELD_METADATA.put(2, TYPE_SIGNATURE_FIELD_DESC);
      NAMES_TO_IDS.put("namedTypeSignature", 3);
      THRIFT_NAMES_TO_IDS.put("namedTypeSignature", 3);
      FIELD_METADATA.put(3, NAMED_TYPE_SIGNATURE_FIELD_DESC);
      NAMES_TO_IDS.put("longLiteral", 4);
      THRIFT_NAMES_TO_IDS.put("longLiteral", 4);
      FIELD_METADATA.put(4, LONG_LITERAL_FIELD_DESC);
      NAMES_TO_IDS.put("variable", 5);
      THRIFT_NAMES_TO_IDS.put("variable", 5);
      FIELD_METADATA.put(5, VARIABLE_FIELD_DESC);
      NAMES_TO_IDS.put("longEnumMap", 6);
      THRIFT_NAMES_TO_IDS.put("longEnumMap", 6);
      FIELD_METADATA.put(6, LONG_ENUM_MAP_FIELD_DESC);
      NAMES_TO_IDS.put("varcharEnumMap", 7);
      THRIFT_NAMES_TO_IDS.put("varcharEnumMap", 7);
      FIELD_METADATA.put(7, VARCHAR_ENUM_MAP_FIELD_DESC);
      NAMES_TO_IDS.put("distinctTypeInfo", 8);
      THRIFT_NAMES_TO_IDS.put("distinctTypeInfo", 8);
      FIELD_METADATA.put(8, DISTINCT_TYPE_INFO_FIELD_DESC);
    }

    private java.lang.Object value;
    private short id;

    public enum TypeEnum {
      __FBTHRIFT_EMPTY_UNION__,
      KIND,
      TYPE_SIGNATURE,
      NAMED_TYPE_SIGNATURE,
      LONG_LITERAL,
      VARIABLE,
      LONG_ENUM_MAP,
      VARCHAR_ENUM_MAP,
      DISTINCT_TYPE_INFO,
    }

    public static ThriftTypeSignatureParameterUnion from(int _id, java.lang.Object _field) {
        return from((short) _id, _field);
    }

    public static ThriftTypeSignatureParameterUnion from(short _id, java.lang.Object _field) {
        java.util.Objects.requireNonNull(_field);
        if (!FIELD_METADATA.containsKey(Integer.valueOf(_id))) {
            throw new java.lang.IllegalArgumentException("unknown field " + _id);
        }

        ThriftTypeSignatureParameterUnion _u = new  ThriftTypeSignatureParameterUnion();

        try {
            switch(_id) {
                case 1:
                    _u.id = _id;
                    _u.value = (com.facebook.presto.common.experimental.auto_gen.ThriftParameterKind) _field;
                    return _u;
                case 2:
                    _u.id = _id;
                    _u.value = (com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature) _field;
                    return _u;
                case 3:
                    _u.id = _id;
                    _u.value = (com.facebook.presto.common.experimental.auto_gen.ThriftNamedTypeSignature) _field;
                    return _u;
                case 4:
                    _u.id = _id;
                    _u.value = (long) _field;
                    return _u;
                case 5:
                    _u.id = _id;
                    _u.value = (String) _field;
                    return _u;
                case 6:
                    _u.id = _id;
                    _u.value = (com.facebook.presto.common.experimental.auto_gen.ThriftLongEnumMap) _field;
                    return _u;
                case 7:
                    _u.id = _id;
                    _u.value = (com.facebook.presto.common.experimental.auto_gen.ThriftVarcharEnumMap) _field;
                    return _u;
                case 8:
                    _u.id = _id;
                    _u.value = (com.facebook.presto.common.experimental.auto_gen.ThriftDistinctTypeInfo) _field;
                    return _u;
                default:
                throw new IllegalArgumentException("invalid type " + _field.getClass().getName() + " for field " + _id);
            }
        } catch (java.lang.Exception t) {
            throw new IllegalArgumentException("invalid type " + _field.getClass().getName() + " for field " + _id);
        }
    }

    @ThriftConstructor
    public ThriftTypeSignatureParameterUnion() {
    }
    
    @ThriftConstructor
    @Deprecated
    public ThriftTypeSignatureParameterUnion(final com.facebook.presto.common.experimental.auto_gen.ThriftParameterKind kind) {
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && kind == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.kind' with null value!");
        }
        this.value = kind;
        this.id = 1;
    }
    
    @ThriftConstructor
    @Deprecated
    public ThriftTypeSignatureParameterUnion(final com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeSignature) {
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && typeSignature == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.typeSignature' with null value!");
        }
        this.value = typeSignature;
        this.id = 2;
    }
    
    @ThriftConstructor
    @Deprecated
    public ThriftTypeSignatureParameterUnion(final com.facebook.presto.common.experimental.auto_gen.ThriftNamedTypeSignature namedTypeSignature) {
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && namedTypeSignature == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.namedTypeSignature' with null value!");
        }
        this.value = namedTypeSignature;
        this.id = 3;
    }
    
    @ThriftConstructor
    @Deprecated
    public ThriftTypeSignatureParameterUnion(final long longLiteral) {
        this.value = longLiteral;
        this.id = 4;
    }
    
    @ThriftConstructor
    @Deprecated
    public ThriftTypeSignatureParameterUnion(final String variable) {
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && variable == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.variable' with null value!");
        }
        this.value = variable;
        this.id = 5;
    }
    
    @ThriftConstructor
    @Deprecated
    public ThriftTypeSignatureParameterUnion(final com.facebook.presto.common.experimental.auto_gen.ThriftLongEnumMap longEnumMap) {
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && longEnumMap == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.longEnumMap' with null value!");
        }
        this.value = longEnumMap;
        this.id = 6;
    }
    
    @ThriftConstructor
    @Deprecated
    public ThriftTypeSignatureParameterUnion(final com.facebook.presto.common.experimental.auto_gen.ThriftVarcharEnumMap varcharEnumMap) {
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && varcharEnumMap == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.varcharEnumMap' with null value!");
        }
        this.value = varcharEnumMap;
        this.id = 7;
    }
    
    @ThriftConstructor
    @Deprecated
    public ThriftTypeSignatureParameterUnion(final com.facebook.presto.common.experimental.auto_gen.ThriftDistinctTypeInfo distinctTypeInfo) {
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && distinctTypeInfo == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.distinctTypeInfo' with null value!");
        }
        this.value = distinctTypeInfo;
        this.id = 8;
    }
    
    public static ThriftTypeSignatureParameterUnion fromKind(final com.facebook.presto.common.experimental.auto_gen.ThriftParameterKind kind) {
        ThriftTypeSignatureParameterUnion res = new ThriftTypeSignatureParameterUnion();
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && kind == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.kind' with null value!");
        }
        res.value = kind;
        res.id = 1;
        return res;
    }
    
    public static ThriftTypeSignatureParameterUnion fromTypeSignature(final com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeSignature) {
        ThriftTypeSignatureParameterUnion res = new ThriftTypeSignatureParameterUnion();
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && typeSignature == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.typeSignature' with null value!");
        }
        res.value = typeSignature;
        res.id = 2;
        return res;
    }
    
    public static ThriftTypeSignatureParameterUnion fromNamedTypeSignature(final com.facebook.presto.common.experimental.auto_gen.ThriftNamedTypeSignature namedTypeSignature) {
        ThriftTypeSignatureParameterUnion res = new ThriftTypeSignatureParameterUnion();
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && namedTypeSignature == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.namedTypeSignature' with null value!");
        }
        res.value = namedTypeSignature;
        res.id = 3;
        return res;
    }
    
    public static ThriftTypeSignatureParameterUnion fromLongLiteral(final long longLiteral) {
        ThriftTypeSignatureParameterUnion res = new ThriftTypeSignatureParameterUnion();
        res.value = longLiteral;
        res.id = 4;
        return res;
    }
    
    public static ThriftTypeSignatureParameterUnion fromVariable(final String variable) {
        ThriftTypeSignatureParameterUnion res = new ThriftTypeSignatureParameterUnion();
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && variable == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.variable' with null value!");
        }
        res.value = variable;
        res.id = 5;
        return res;
    }
    
    public static ThriftTypeSignatureParameterUnion fromLongEnumMap(final com.facebook.presto.common.experimental.auto_gen.ThriftLongEnumMap longEnumMap) {
        ThriftTypeSignatureParameterUnion res = new ThriftTypeSignatureParameterUnion();
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && longEnumMap == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.longEnumMap' with null value!");
        }
        res.value = longEnumMap;
        res.id = 6;
        return res;
    }
    
    public static ThriftTypeSignatureParameterUnion fromVarcharEnumMap(final com.facebook.presto.common.experimental.auto_gen.ThriftVarcharEnumMap varcharEnumMap) {
        ThriftTypeSignatureParameterUnion res = new ThriftTypeSignatureParameterUnion();
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && varcharEnumMap == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.varcharEnumMap' with null value!");
        }
        res.value = varcharEnumMap;
        res.id = 7;
        return res;
    }
    
    public static ThriftTypeSignatureParameterUnion fromDistinctTypeInfo(final com.facebook.presto.common.experimental.auto_gen.ThriftDistinctTypeInfo distinctTypeInfo) {
        ThriftTypeSignatureParameterUnion res = new ThriftTypeSignatureParameterUnion();
        if (!ThriftTypeSignatureParameterUnion.allowNullFieldValues && distinctTypeInfo == null) {
            throw new TProtocolException("Cannot initialize Union field 'ThriftTypeSignatureParameterUnion.distinctTypeInfo' with null value!");
        }
        res.value = distinctTypeInfo;
        res.id = 8;
        return res;
    }

    

    @com.facebook.swift.codec.ThriftField(value=1, name="kind", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftParameterKind getKind() {
        if (this.id != 1) {
            throw new IllegalStateException("Not a kind element!");
        }
        return (com.facebook.presto.common.experimental.auto_gen.ThriftParameterKind) value;
    }

    public boolean isSetKind() {
        return this.id == 1;
    }

    @com.facebook.swift.codec.ThriftField(value=2, name="typeSignature", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature getTypeSignature() {
        if (this.id != 2) {
            throw new IllegalStateException("Not a typeSignature element!");
        }
        return (com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature) value;
    }

    public boolean isSetTypeSignature() {
        return this.id == 2;
    }

    @com.facebook.swift.codec.ThriftField(value=3, name="namedTypeSignature", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftNamedTypeSignature getNamedTypeSignature() {
        if (this.id != 3) {
            throw new IllegalStateException("Not a namedTypeSignature element!");
        }
        return (com.facebook.presto.common.experimental.auto_gen.ThriftNamedTypeSignature) value;
    }

    public boolean isSetNamedTypeSignature() {
        return this.id == 3;
    }

    @com.facebook.swift.codec.ThriftField(value=4, name="longLiteral", requiredness=Requiredness.NONE)
    public long getLongLiteral() {
        if (this.id != 4) {
            throw new IllegalStateException("Not a longLiteral element!");
        }
        return (long) value;
    }

    public boolean isSetLongLiteral() {
        return this.id == 4;
    }

    @com.facebook.swift.codec.ThriftField(value=5, name="variable", requiredness=Requiredness.NONE)
    public String getVariable() {
        if (this.id != 5) {
            throw new IllegalStateException("Not a variable element!");
        }
        return (String) value;
    }

    public boolean isSetVariable() {
        return this.id == 5;
    }

    @com.facebook.swift.codec.ThriftField(value=6, name="longEnumMap", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftLongEnumMap getLongEnumMap() {
        if (this.id != 6) {
            throw new IllegalStateException("Not a longEnumMap element!");
        }
        return (com.facebook.presto.common.experimental.auto_gen.ThriftLongEnumMap) value;
    }

    public boolean isSetLongEnumMap() {
        return this.id == 6;
    }

    @com.facebook.swift.codec.ThriftField(value=7, name="varcharEnumMap", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftVarcharEnumMap getVarcharEnumMap() {
        if (this.id != 7) {
            throw new IllegalStateException("Not a varcharEnumMap element!");
        }
        return (com.facebook.presto.common.experimental.auto_gen.ThriftVarcharEnumMap) value;
    }

    public boolean isSetVarcharEnumMap() {
        return this.id == 7;
    }

    @com.facebook.swift.codec.ThriftField(value=8, name="distinctTypeInfo", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftDistinctTypeInfo getDistinctTypeInfo() {
        if (this.id != 8) {
            throw new IllegalStateException("Not a distinctTypeInfo element!");
        }
        return (com.facebook.presto.common.experimental.auto_gen.ThriftDistinctTypeInfo) value;
    }

    public boolean isSetDistinctTypeInfo() {
        return this.id == 8;
    }

    @ThriftUnionId
    public short getThriftId() {
        return this.id;
    }

    public TypeEnum getThriftUnionType() {
      switch(this.id) {
        case 0:
          return TypeEnum.__FBTHRIFT_EMPTY_UNION__;
        case 1:
          return TypeEnum.KIND;
        case 2:
          return TypeEnum.TYPE_SIGNATURE;
        case 3:
          return TypeEnum.NAMED_TYPE_SIGNATURE;
        case 4:
          return TypeEnum.LONG_LITERAL;
        case 5:
          return TypeEnum.VARIABLE;
        case 6:
          return TypeEnum.LONG_ENUM_MAP;
        case 7:
          return TypeEnum.VARCHAR_ENUM_MAP;
        case 8:
          return TypeEnum.DISTINCT_TYPE_INFO;
        default:
          throw new IllegalStateException("unreachable");
      }
    }

    public String getThriftName() {
        TField tField = (TField) FIELD_METADATA.get((int) this.id);
        if (tField == null) {
            return "null";
        } else {
            return tField.name;
        }
    }

    public <T> T accept(Visitor<T> visitor) {
        if (isSetKind()) {
            return visitor.visitKind(getKind());
        }
        if (isSetTypeSignature()) {
            return visitor.visitTypeSignature(getTypeSignature());
        }
        if (isSetNamedTypeSignature()) {
            return visitor.visitNamedTypeSignature(getNamedTypeSignature());
        }
        if (isSetLongLiteral()) {
            return visitor.visitLongLiteral(getLongLiteral());
        }
        if (isSetVariable()) {
            return visitor.visitVariable(getVariable());
        }
        if (isSetLongEnumMap()) {
            return visitor.visitLongEnumMap(getLongEnumMap());
        }
        if (isSetVarcharEnumMap()) {
            return visitor.visitVarcharEnumMap(getVarcharEnumMap());
        }
        if (isSetDistinctTypeInfo()) {
            return visitor.visitDistinctTypeInfo(getDistinctTypeInfo());
        }

        throw new IllegalStateException("Visitor missing for type " + this.getThriftUnionType());
    }

    @java.lang.Override
    public String toString() {
        return toStringHelper(this)
            .add("value", value)
            .add("id", id)
            .add("name", getThriftName())
            .add("type", value == null ? "<null>" : value.getClass().getSimpleName())
            .toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        ThriftTypeSignatureParameterUnion other = (ThriftTypeSignatureParameterUnion)o;

        return Objects.equals(this.id, other.id)
                && Objects.deepEquals(this.value, other.value);
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            id,
            value,
        });
    }

    public interface Visitor<T> {
        default T visit(ThriftTypeSignatureParameterUnion acceptor) {
        return acceptor.accept(this);
        }

        T visitKind(com.facebook.presto.common.experimental.auto_gen.ThriftParameterKind kind);
        T visitTypeSignature(com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeSignature);
        T visitNamedTypeSignature(com.facebook.presto.common.experimental.auto_gen.ThriftNamedTypeSignature namedTypeSignature);
        T visitLongLiteral(long longLiteral);
        T visitVariable(String variable);
        T visitLongEnumMap(com.facebook.presto.common.experimental.auto_gen.ThriftLongEnumMap longEnumMap);
        T visitVarcharEnumMap(com.facebook.presto.common.experimental.auto_gen.ThriftVarcharEnumMap varcharEnumMap);
        T visitDistinctTypeInfo(com.facebook.presto.common.experimental.auto_gen.ThriftDistinctTypeInfo distinctTypeInfo);
    }

    public void write0(TProtocol oprot) throws TException {
      if (this.id != 0 && this.value == null ){
        if(allowNullFieldValues) {
          // Warning: this path will generate corrupt serialized data!
          return;
        } else {
          throw new TProtocolException("Cannot write a Union with marked-as-set but null value!");
        }
      }
      oprot.writeStructBegin(STRUCT_DESC);
      switch (this.id) {
      case _KIND: {
        oprot.writeFieldBegin(KIND_FIELD_DESC);
        com.facebook.presto.common.experimental.auto_gen.ThriftParameterKind kind = (com.facebook.presto.common.experimental.auto_gen.ThriftParameterKind)this.value;
        oprot.writeI32(kind == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(kind));
        oprot.writeFieldEnd();
        break;
      }
      case _TYPESIGNATURE: {
        oprot.writeFieldBegin(TYPE_SIGNATURE_FIELD_DESC);
        com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeSignature = (com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature)this.value;
        typeSignature.write0(oprot);
        oprot.writeFieldEnd();
        break;
      }
      case _NAMEDTYPESIGNATURE: {
        oprot.writeFieldBegin(NAMED_TYPE_SIGNATURE_FIELD_DESC);
        com.facebook.presto.common.experimental.auto_gen.ThriftNamedTypeSignature namedTypeSignature = (com.facebook.presto.common.experimental.auto_gen.ThriftNamedTypeSignature)this.value;
        namedTypeSignature.write0(oprot);
        oprot.writeFieldEnd();
        break;
      }
      case _LONGLITERAL: {
        oprot.writeFieldBegin(LONG_LITERAL_FIELD_DESC);
        long longLiteral = (long)this.value;
        oprot.writeI64(longLiteral);
        oprot.writeFieldEnd();
        break;
      }
      case _VARIABLE: {
        oprot.writeFieldBegin(VARIABLE_FIELD_DESC);
        String variable = (String)this.value;
        oprot.writeString(variable);
        oprot.writeFieldEnd();
        break;
      }
      case _LONGENUMMAP: {
        oprot.writeFieldBegin(LONG_ENUM_MAP_FIELD_DESC);
        com.facebook.presto.common.experimental.auto_gen.ThriftLongEnumMap longEnumMap = (com.facebook.presto.common.experimental.auto_gen.ThriftLongEnumMap)this.value;
        longEnumMap.write0(oprot);
        oprot.writeFieldEnd();
        break;
      }
      case _VARCHARENUMMAP: {
        oprot.writeFieldBegin(VARCHAR_ENUM_MAP_FIELD_DESC);
        com.facebook.presto.common.experimental.auto_gen.ThriftVarcharEnumMap varcharEnumMap = (com.facebook.presto.common.experimental.auto_gen.ThriftVarcharEnumMap)this.value;
        varcharEnumMap.write0(oprot);
        oprot.writeFieldEnd();
        break;
      }
      case _DISTINCTTYPEINFO: {
        oprot.writeFieldBegin(DISTINCT_TYPE_INFO_FIELD_DESC);
        com.facebook.presto.common.experimental.auto_gen.ThriftDistinctTypeInfo distinctTypeInfo = (com.facebook.presto.common.experimental.auto_gen.ThriftDistinctTypeInfo)this.value;
        distinctTypeInfo.write0(oprot);
        oprot.writeFieldEnd();
        break;
      }
      default:
          // ignore unknown field
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftTypeSignatureParameterUnion> asReader() {
      return ThriftTypeSignatureParameterUnion::read0;
    }
    
    public static ThriftTypeSignatureParameterUnion read0(TProtocol oprot) throws TException {
      ThriftTypeSignatureParameterUnion res = new ThriftTypeSignatureParameterUnion();
      res.value = null;
      res.id = (short) 0;
      oprot.readStructBegin(ThriftTypeSignatureParameterUnion.NAMES_TO_IDS, ThriftTypeSignatureParameterUnion.THRIFT_NAMES_TO_IDS, ThriftTypeSignatureParameterUnion.FIELD_METADATA);
      TField __field = oprot.readFieldBegin();
      if (__field.type != TType.STOP) {
          switch (__field.id) {
          case _KIND:
            if (__field.type == KIND_FIELD_DESC.type) {
              com.facebook.presto.common.experimental.auto_gen.ThriftParameterKind kind = com.facebook.presto.common.experimental.auto_gen.ThriftParameterKind.fromInteger(oprot.readI32());
              res.value = kind;
            }
            break;
          case _TYPESIGNATURE:
            if (__field.type == TYPE_SIGNATURE_FIELD_DESC.type) {
              com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeSignature = com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature.read0(oprot);
              res.value = typeSignature;
            }
            break;
          case _NAMEDTYPESIGNATURE:
            if (__field.type == NAMED_TYPE_SIGNATURE_FIELD_DESC.type) {
              com.facebook.presto.common.experimental.auto_gen.ThriftNamedTypeSignature namedTypeSignature = com.facebook.presto.common.experimental.auto_gen.ThriftNamedTypeSignature.read0(oprot);
              res.value = namedTypeSignature;
            }
            break;
          case _LONGLITERAL:
            if (__field.type == LONG_LITERAL_FIELD_DESC.type) {
              long longLiteral = oprot.readI64();
              res.value = longLiteral;
            }
            break;
          case _VARIABLE:
            if (__field.type == VARIABLE_FIELD_DESC.type) {
              String variable = oprot.readString();
              res.value = variable;
            }
            break;
          case _LONGENUMMAP:
            if (__field.type == LONG_ENUM_MAP_FIELD_DESC.type) {
              com.facebook.presto.common.experimental.auto_gen.ThriftLongEnumMap longEnumMap = com.facebook.presto.common.experimental.auto_gen.ThriftLongEnumMap.read0(oprot);
              res.value = longEnumMap;
            }
            break;
          case _VARCHARENUMMAP:
            if (__field.type == VARCHAR_ENUM_MAP_FIELD_DESC.type) {
              com.facebook.presto.common.experimental.auto_gen.ThriftVarcharEnumMap varcharEnumMap = com.facebook.presto.common.experimental.auto_gen.ThriftVarcharEnumMap.read0(oprot);
              res.value = varcharEnumMap;
            }
            break;
          case _DISTINCTTYPEINFO:
            if (__field.type == DISTINCT_TYPE_INFO_FIELD_DESC.type) {
              com.facebook.presto.common.experimental.auto_gen.ThriftDistinctTypeInfo distinctTypeInfo = com.facebook.presto.common.experimental.auto_gen.ThriftDistinctTypeInfo.read0(oprot);
              res.value = distinctTypeInfo;
            }
            break;
          default:
            TProtocolUtil.skip(oprot, __field.type);
          }
        if (res.value != null) {
          res.id = __field.id;
        }
        oprot.readFieldEnd();
        TField __stopField = oprot.readFieldBegin(); // Consume the STOP byte
        if (__stopField.type != TType.STOP) {
          throw new TProtocolException(TProtocolException.INVALID_DATA, "Union 'ThriftTypeSignatureParameterUnion' is missing a STOP byte");
        }
      }
      oprot.readStructEnd();
      return res;
    }
    public static ThriftTypeSignatureParameterUnion defaultInstance() {
        return _DEFAULT;
    }

}
