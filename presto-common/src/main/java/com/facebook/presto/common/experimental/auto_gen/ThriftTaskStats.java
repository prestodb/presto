/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftTaskStats", builder=ThriftTaskStats.Builder.class)
public final class ThriftTaskStats implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftTaskStats(
        @com.facebook.swift.codec.ThriftField(value=1, name="createTimeInMillis", requiredness=Requiredness.NONE) final long createTimeInMillis,
        @com.facebook.swift.codec.ThriftField(value=2, name="firstStartTimeInMillis", requiredness=Requiredness.NONE) final long firstStartTimeInMillis,
        @com.facebook.swift.codec.ThriftField(value=3, name="lastStartTimeInMillis", requiredness=Requiredness.NONE) final long lastStartTimeInMillis,
        @com.facebook.swift.codec.ThriftField(value=4, name="lastEndTimeInMillis", requiredness=Requiredness.NONE) final long lastEndTimeInMillis,
        @com.facebook.swift.codec.ThriftField(value=5, name="endTimeInMillis", requiredness=Requiredness.NONE) final long endTimeInMillis,
        @com.facebook.swift.codec.ThriftField(value=6, name="elapsedTimeInNanos", requiredness=Requiredness.NONE) final long elapsedTimeInNanos,
        @com.facebook.swift.codec.ThriftField(value=7, name="queuedTimeInNanos", requiredness=Requiredness.NONE) final long queuedTimeInNanos,
        @com.facebook.swift.codec.ThriftField(value=8, name="totalDrivers", requiredness=Requiredness.NONE) final int totalDrivers,
        @com.facebook.swift.codec.ThriftField(value=9, name="queuedDrivers", requiredness=Requiredness.NONE) final int queuedDrivers,
        @com.facebook.swift.codec.ThriftField(value=10, name="runningDrivers", requiredness=Requiredness.NONE) final int runningDrivers,
        @com.facebook.swift.codec.ThriftField(value=11, name="blockedDrivers", requiredness=Requiredness.NONE) final int blockedDrivers,
        @com.facebook.swift.codec.ThriftField(value=12, name="completedDrivers", requiredness=Requiredness.NONE) final int completedDrivers,
        @com.facebook.swift.codec.ThriftField(value=13, name="cumulativeUserMemory", requiredness=Requiredness.NONE) final double cumulativeUserMemory,
        @com.facebook.swift.codec.ThriftField(value=14, name="cumulativeTotalMemory", requiredness=Requiredness.NONE) final double cumulativeTotalMemory,
        @com.facebook.swift.codec.ThriftField(value=15, name="userMemoryReservationInBytes", requiredness=Requiredness.NONE) final long userMemoryReservationInBytes,
        @com.facebook.swift.codec.ThriftField(value=16, name="revocableMemoryReservationInBytes", requiredness=Requiredness.NONE) final long revocableMemoryReservationInBytes,
        @com.facebook.swift.codec.ThriftField(value=17, name="systemMemoryReservationInBytes", requiredness=Requiredness.NONE) final long systemMemoryReservationInBytes,
        @com.facebook.swift.codec.ThriftField(value=18, name="peakUserMemoryInBytes", requiredness=Requiredness.NONE) final long peakUserMemoryInBytes,
        @com.facebook.swift.codec.ThriftField(value=19, name="peakTotalMemoryInBytes", requiredness=Requiredness.NONE) final long peakTotalMemoryInBytes,
        @com.facebook.swift.codec.ThriftField(value=20, name="peakNodeTotalMemoryInBytes", requiredness=Requiredness.NONE) final long peakNodeTotalMemoryInBytes,
        @com.facebook.swift.codec.ThriftField(value=21, name="totalScheduledTimeInNanos", requiredness=Requiredness.NONE) final long totalScheduledTimeInNanos,
        @com.facebook.swift.codec.ThriftField(value=22, name="totalCpuTimeInNanos", requiredness=Requiredness.NONE) final long totalCpuTimeInNanos,
        @com.facebook.swift.codec.ThriftField(value=23, name="totalBlockedTimeInNanos", requiredness=Requiredness.NONE) final long totalBlockedTimeInNanos,
        @com.facebook.swift.codec.ThriftField(value=24, name="fullyBlocked", requiredness=Requiredness.NONE) final boolean fullyBlocked,
        @com.facebook.swift.codec.ThriftField(value=25, name="blockedReasons", requiredness=Requiredness.NONE) final Set<com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason> blockedReasons,
        @com.facebook.swift.codec.ThriftField(value=26, name="totalAllocationInBytes", requiredness=Requiredness.NONE) final long totalAllocationInBytes,
        @com.facebook.swift.codec.ThriftField(value=27, name="rawInputDataSizeInBytes", requiredness=Requiredness.NONE) final long rawInputDataSizeInBytes,
        @com.facebook.swift.codec.ThriftField(value=28, name="rawInputPositions", requiredness=Requiredness.NONE) final long rawInputPositions,
        @com.facebook.swift.codec.ThriftField(value=29, name="processedInputDataSizeInBytes", requiredness=Requiredness.NONE) final long processedInputDataSizeInBytes,
        @com.facebook.swift.codec.ThriftField(value=30, name="processedInputPositions", requiredness=Requiredness.NONE) final long processedInputPositions,
        @com.facebook.swift.codec.ThriftField(value=31, name="outputDataSizeInBytes", requiredness=Requiredness.NONE) final long outputDataSizeInBytes,
        @com.facebook.swift.codec.ThriftField(value=32, name="outputPositions", requiredness=Requiredness.NONE) final long outputPositions,
        @com.facebook.swift.codec.ThriftField(value=33, name="physicalWrittenDataSizeInBytes", requiredness=Requiredness.NONE) final long physicalWrittenDataSizeInBytes,
        @com.facebook.swift.codec.ThriftField(value=34, name="pipelines", requiredness=Requiredness.NONE) final List<com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats> pipelines,
        @com.facebook.swift.codec.ThriftField(value=35, name="queuedPartitionedDrivers", requiredness=Requiredness.NONE) final int queuedPartitionedDrivers,
        @com.facebook.swift.codec.ThriftField(value=36, name="queuedPartitionedSplitsWeight", requiredness=Requiredness.NONE) final long queuedPartitionedSplitsWeight,
        @com.facebook.swift.codec.ThriftField(value=37, name="runningPartitionedDrivers", requiredness=Requiredness.NONE) final int runningPartitionedDrivers,
        @com.facebook.swift.codec.ThriftField(value=38, name="runningPartitionedSplitsWeight", requiredness=Requiredness.NONE) final long runningPartitionedSplitsWeight,
        @com.facebook.swift.codec.ThriftField(value=39, name="fullGcCount", requiredness=Requiredness.NONE) final int fullGcCount,
        @com.facebook.swift.codec.ThriftField(value=40, name="fullGcTimeInMillis", requiredness=Requiredness.NONE) final long fullGcTimeInMillis,
        @com.facebook.swift.codec.ThriftField(value=41, name="runtimeStats", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats runtimeStats
    ) {
        this.createTimeInMillis = createTimeInMillis;
        this.firstStartTimeInMillis = firstStartTimeInMillis;
        this.lastStartTimeInMillis = lastStartTimeInMillis;
        this.lastEndTimeInMillis = lastEndTimeInMillis;
        this.endTimeInMillis = endTimeInMillis;
        this.elapsedTimeInNanos = elapsedTimeInNanos;
        this.queuedTimeInNanos = queuedTimeInNanos;
        this.totalDrivers = totalDrivers;
        this.queuedDrivers = queuedDrivers;
        this.runningDrivers = runningDrivers;
        this.blockedDrivers = blockedDrivers;
        this.completedDrivers = completedDrivers;
        this.cumulativeUserMemory = cumulativeUserMemory;
        this.cumulativeTotalMemory = cumulativeTotalMemory;
        this.userMemoryReservationInBytes = userMemoryReservationInBytes;
        this.revocableMemoryReservationInBytes = revocableMemoryReservationInBytes;
        this.systemMemoryReservationInBytes = systemMemoryReservationInBytes;
        this.peakUserMemoryInBytes = peakUserMemoryInBytes;
        this.peakTotalMemoryInBytes = peakTotalMemoryInBytes;
        this.peakNodeTotalMemoryInBytes = peakNodeTotalMemoryInBytes;
        this.totalScheduledTimeInNanos = totalScheduledTimeInNanos;
        this.totalCpuTimeInNanos = totalCpuTimeInNanos;
        this.totalBlockedTimeInNanos = totalBlockedTimeInNanos;
        this.fullyBlocked = fullyBlocked;
        this.blockedReasons = blockedReasons;
        this.totalAllocationInBytes = totalAllocationInBytes;
        this.rawInputDataSizeInBytes = rawInputDataSizeInBytes;
        this.rawInputPositions = rawInputPositions;
        this.processedInputDataSizeInBytes = processedInputDataSizeInBytes;
        this.processedInputPositions = processedInputPositions;
        this.outputDataSizeInBytes = outputDataSizeInBytes;
        this.outputPositions = outputPositions;
        this.physicalWrittenDataSizeInBytes = physicalWrittenDataSizeInBytes;
        this.pipelines = pipelines;
        this.queuedPartitionedDrivers = queuedPartitionedDrivers;
        this.queuedPartitionedSplitsWeight = queuedPartitionedSplitsWeight;
        this.runningPartitionedDrivers = runningPartitionedDrivers;
        this.runningPartitionedSplitsWeight = runningPartitionedSplitsWeight;
        this.fullGcCount = fullGcCount;
        this.fullGcTimeInMillis = fullGcTimeInMillis;
        this.runtimeStats = runtimeStats;
    }
    
    @ThriftConstructor
    protected ThriftTaskStats() {
      this.createTimeInMillis = 0L;
      this.firstStartTimeInMillis = 0L;
      this.lastStartTimeInMillis = 0L;
      this.lastEndTimeInMillis = 0L;
      this.endTimeInMillis = 0L;
      this.elapsedTimeInNanos = 0L;
      this.queuedTimeInNanos = 0L;
      this.totalDrivers = 0;
      this.queuedDrivers = 0;
      this.runningDrivers = 0;
      this.blockedDrivers = 0;
      this.completedDrivers = 0;
      this.cumulativeUserMemory = 0.;
      this.cumulativeTotalMemory = 0.;
      this.userMemoryReservationInBytes = 0L;
      this.revocableMemoryReservationInBytes = 0L;
      this.systemMemoryReservationInBytes = 0L;
      this.peakUserMemoryInBytes = 0L;
      this.peakTotalMemoryInBytes = 0L;
      this.peakNodeTotalMemoryInBytes = 0L;
      this.totalScheduledTimeInNanos = 0L;
      this.totalCpuTimeInNanos = 0L;
      this.totalBlockedTimeInNanos = 0L;
      this.fullyBlocked = false;
      this.blockedReasons = null;
      this.totalAllocationInBytes = 0L;
      this.rawInputDataSizeInBytes = 0L;
      this.rawInputPositions = 0L;
      this.processedInputDataSizeInBytes = 0L;
      this.processedInputPositions = 0L;
      this.outputDataSizeInBytes = 0L;
      this.outputPositions = 0L;
      this.physicalWrittenDataSizeInBytes = 0L;
      this.pipelines = null;
      this.queuedPartitionedDrivers = 0;
      this.queuedPartitionedSplitsWeight = 0L;
      this.runningPartitionedDrivers = 0;
      this.runningPartitionedSplitsWeight = 0L;
      this.fullGcCount = 0;
      this.fullGcTimeInMillis = 0L;
      this.runtimeStats = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftTaskStats other) {
      return new Builder(other);
    }

    public static class Builder {
        private long createTimeInMillis = 0L;
        private long firstStartTimeInMillis = 0L;
        private long lastStartTimeInMillis = 0L;
        private long lastEndTimeInMillis = 0L;
        private long endTimeInMillis = 0L;
        private long elapsedTimeInNanos = 0L;
        private long queuedTimeInNanos = 0L;
        private int totalDrivers = 0;
        private int queuedDrivers = 0;
        private int runningDrivers = 0;
        private int blockedDrivers = 0;
        private int completedDrivers = 0;
        private double cumulativeUserMemory = 0.;
        private double cumulativeTotalMemory = 0.;
        private long userMemoryReservationInBytes = 0L;
        private long revocableMemoryReservationInBytes = 0L;
        private long systemMemoryReservationInBytes = 0L;
        private long peakUserMemoryInBytes = 0L;
        private long peakTotalMemoryInBytes = 0L;
        private long peakNodeTotalMemoryInBytes = 0L;
        private long totalScheduledTimeInNanos = 0L;
        private long totalCpuTimeInNanos = 0L;
        private long totalBlockedTimeInNanos = 0L;
        private boolean fullyBlocked = false;
        private Set<com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason> blockedReasons = null;
        private long totalAllocationInBytes = 0L;
        private long rawInputDataSizeInBytes = 0L;
        private long rawInputPositions = 0L;
        private long processedInputDataSizeInBytes = 0L;
        private long processedInputPositions = 0L;
        private long outputDataSizeInBytes = 0L;
        private long outputPositions = 0L;
        private long physicalWrittenDataSizeInBytes = 0L;
        private List<com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats> pipelines = null;
        private int queuedPartitionedDrivers = 0;
        private long queuedPartitionedSplitsWeight = 0L;
        private int runningPartitionedDrivers = 0;
        private long runningPartitionedSplitsWeight = 0L;
        private int fullGcCount = 0;
        private long fullGcTimeInMillis = 0L;
        private com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats runtimeStats = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="createTimeInMillis", requiredness=Requiredness.NONE)    public Builder setCreateTimeInMillis(long createTimeInMillis) {
            this.createTimeInMillis = createTimeInMillis;
            return this;
        }
    
        public long getCreateTimeInMillis() { return createTimeInMillis; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="firstStartTimeInMillis", requiredness=Requiredness.NONE)    public Builder setFirstStartTimeInMillis(long firstStartTimeInMillis) {
            this.firstStartTimeInMillis = firstStartTimeInMillis;
            return this;
        }
    
        public long getFirstStartTimeInMillis() { return firstStartTimeInMillis; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="lastStartTimeInMillis", requiredness=Requiredness.NONE)    public Builder setLastStartTimeInMillis(long lastStartTimeInMillis) {
            this.lastStartTimeInMillis = lastStartTimeInMillis;
            return this;
        }
    
        public long getLastStartTimeInMillis() { return lastStartTimeInMillis; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="lastEndTimeInMillis", requiredness=Requiredness.NONE)    public Builder setLastEndTimeInMillis(long lastEndTimeInMillis) {
            this.lastEndTimeInMillis = lastEndTimeInMillis;
            return this;
        }
    
        public long getLastEndTimeInMillis() { return lastEndTimeInMillis; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="endTimeInMillis", requiredness=Requiredness.NONE)    public Builder setEndTimeInMillis(long endTimeInMillis) {
            this.endTimeInMillis = endTimeInMillis;
            return this;
        }
    
        public long getEndTimeInMillis() { return endTimeInMillis; }
    
            @com.facebook.swift.codec.ThriftField(value=6, name="elapsedTimeInNanos", requiredness=Requiredness.NONE)    public Builder setElapsedTimeInNanos(long elapsedTimeInNanos) {
            this.elapsedTimeInNanos = elapsedTimeInNanos;
            return this;
        }
    
        public long getElapsedTimeInNanos() { return elapsedTimeInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=7, name="queuedTimeInNanos", requiredness=Requiredness.NONE)    public Builder setQueuedTimeInNanos(long queuedTimeInNanos) {
            this.queuedTimeInNanos = queuedTimeInNanos;
            return this;
        }
    
        public long getQueuedTimeInNanos() { return queuedTimeInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=8, name="totalDrivers", requiredness=Requiredness.NONE)    public Builder setTotalDrivers(int totalDrivers) {
            this.totalDrivers = totalDrivers;
            return this;
        }
    
        public int getTotalDrivers() { return totalDrivers; }
    
            @com.facebook.swift.codec.ThriftField(value=9, name="queuedDrivers", requiredness=Requiredness.NONE)    public Builder setQueuedDrivers(int queuedDrivers) {
            this.queuedDrivers = queuedDrivers;
            return this;
        }
    
        public int getQueuedDrivers() { return queuedDrivers; }
    
            @com.facebook.swift.codec.ThriftField(value=10, name="runningDrivers", requiredness=Requiredness.NONE)    public Builder setRunningDrivers(int runningDrivers) {
            this.runningDrivers = runningDrivers;
            return this;
        }
    
        public int getRunningDrivers() { return runningDrivers; }
    
            @com.facebook.swift.codec.ThriftField(value=11, name="blockedDrivers", requiredness=Requiredness.NONE)    public Builder setBlockedDrivers(int blockedDrivers) {
            this.blockedDrivers = blockedDrivers;
            return this;
        }
    
        public int getBlockedDrivers() { return blockedDrivers; }
    
            @com.facebook.swift.codec.ThriftField(value=12, name="completedDrivers", requiredness=Requiredness.NONE)    public Builder setCompletedDrivers(int completedDrivers) {
            this.completedDrivers = completedDrivers;
            return this;
        }
    
        public int getCompletedDrivers() { return completedDrivers; }
    
            @com.facebook.swift.codec.ThriftField(value=13, name="cumulativeUserMemory", requiredness=Requiredness.NONE)    public Builder setCumulativeUserMemory(double cumulativeUserMemory) {
            this.cumulativeUserMemory = cumulativeUserMemory;
            return this;
        }
    
        public double getCumulativeUserMemory() { return cumulativeUserMemory; }
    
            @com.facebook.swift.codec.ThriftField(value=14, name="cumulativeTotalMemory", requiredness=Requiredness.NONE)    public Builder setCumulativeTotalMemory(double cumulativeTotalMemory) {
            this.cumulativeTotalMemory = cumulativeTotalMemory;
            return this;
        }
    
        public double getCumulativeTotalMemory() { return cumulativeTotalMemory; }
    
            @com.facebook.swift.codec.ThriftField(value=15, name="userMemoryReservationInBytes", requiredness=Requiredness.NONE)    public Builder setUserMemoryReservationInBytes(long userMemoryReservationInBytes) {
            this.userMemoryReservationInBytes = userMemoryReservationInBytes;
            return this;
        }
    
        public long getUserMemoryReservationInBytes() { return userMemoryReservationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=16, name="revocableMemoryReservationInBytes", requiredness=Requiredness.NONE)    public Builder setRevocableMemoryReservationInBytes(long revocableMemoryReservationInBytes) {
            this.revocableMemoryReservationInBytes = revocableMemoryReservationInBytes;
            return this;
        }
    
        public long getRevocableMemoryReservationInBytes() { return revocableMemoryReservationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=17, name="systemMemoryReservationInBytes", requiredness=Requiredness.NONE)    public Builder setSystemMemoryReservationInBytes(long systemMemoryReservationInBytes) {
            this.systemMemoryReservationInBytes = systemMemoryReservationInBytes;
            return this;
        }
    
        public long getSystemMemoryReservationInBytes() { return systemMemoryReservationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=18, name="peakUserMemoryInBytes", requiredness=Requiredness.NONE)    public Builder setPeakUserMemoryInBytes(long peakUserMemoryInBytes) {
            this.peakUserMemoryInBytes = peakUserMemoryInBytes;
            return this;
        }
    
        public long getPeakUserMemoryInBytes() { return peakUserMemoryInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=19, name="peakTotalMemoryInBytes", requiredness=Requiredness.NONE)    public Builder setPeakTotalMemoryInBytes(long peakTotalMemoryInBytes) {
            this.peakTotalMemoryInBytes = peakTotalMemoryInBytes;
            return this;
        }
    
        public long getPeakTotalMemoryInBytes() { return peakTotalMemoryInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=20, name="peakNodeTotalMemoryInBytes", requiredness=Requiredness.NONE)    public Builder setPeakNodeTotalMemoryInBytes(long peakNodeTotalMemoryInBytes) {
            this.peakNodeTotalMemoryInBytes = peakNodeTotalMemoryInBytes;
            return this;
        }
    
        public long getPeakNodeTotalMemoryInBytes() { return peakNodeTotalMemoryInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=21, name="totalScheduledTimeInNanos", requiredness=Requiredness.NONE)    public Builder setTotalScheduledTimeInNanos(long totalScheduledTimeInNanos) {
            this.totalScheduledTimeInNanos = totalScheduledTimeInNanos;
            return this;
        }
    
        public long getTotalScheduledTimeInNanos() { return totalScheduledTimeInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=22, name="totalCpuTimeInNanos", requiredness=Requiredness.NONE)    public Builder setTotalCpuTimeInNanos(long totalCpuTimeInNanos) {
            this.totalCpuTimeInNanos = totalCpuTimeInNanos;
            return this;
        }
    
        public long getTotalCpuTimeInNanos() { return totalCpuTimeInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=23, name="totalBlockedTimeInNanos", requiredness=Requiredness.NONE)    public Builder setTotalBlockedTimeInNanos(long totalBlockedTimeInNanos) {
            this.totalBlockedTimeInNanos = totalBlockedTimeInNanos;
            return this;
        }
    
        public long getTotalBlockedTimeInNanos() { return totalBlockedTimeInNanos; }
    
            @com.facebook.swift.codec.ThriftField(value=24, name="fullyBlocked", requiredness=Requiredness.NONE)    public Builder setFullyBlocked(boolean fullyBlocked) {
            this.fullyBlocked = fullyBlocked;
            return this;
        }
    
        public boolean isFullyBlocked() { return fullyBlocked; }
    
            @com.facebook.swift.codec.ThriftField(value=25, name="blockedReasons", requiredness=Requiredness.NONE)    public Builder setBlockedReasons(Set<com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason> blockedReasons) {
            this.blockedReasons = blockedReasons;
            return this;
        }
    
        public Set<com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason> getBlockedReasons() { return blockedReasons; }
    
            @com.facebook.swift.codec.ThriftField(value=26, name="totalAllocationInBytes", requiredness=Requiredness.NONE)    public Builder setTotalAllocationInBytes(long totalAllocationInBytes) {
            this.totalAllocationInBytes = totalAllocationInBytes;
            return this;
        }
    
        public long getTotalAllocationInBytes() { return totalAllocationInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=27, name="rawInputDataSizeInBytes", requiredness=Requiredness.NONE)    public Builder setRawInputDataSizeInBytes(long rawInputDataSizeInBytes) {
            this.rawInputDataSizeInBytes = rawInputDataSizeInBytes;
            return this;
        }
    
        public long getRawInputDataSizeInBytes() { return rawInputDataSizeInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=28, name="rawInputPositions", requiredness=Requiredness.NONE)    public Builder setRawInputPositions(long rawInputPositions) {
            this.rawInputPositions = rawInputPositions;
            return this;
        }
    
        public long getRawInputPositions() { return rawInputPositions; }
    
            @com.facebook.swift.codec.ThriftField(value=29, name="processedInputDataSizeInBytes", requiredness=Requiredness.NONE)    public Builder setProcessedInputDataSizeInBytes(long processedInputDataSizeInBytes) {
            this.processedInputDataSizeInBytes = processedInputDataSizeInBytes;
            return this;
        }
    
        public long getProcessedInputDataSizeInBytes() { return processedInputDataSizeInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=30, name="processedInputPositions", requiredness=Requiredness.NONE)    public Builder setProcessedInputPositions(long processedInputPositions) {
            this.processedInputPositions = processedInputPositions;
            return this;
        }
    
        public long getProcessedInputPositions() { return processedInputPositions; }
    
            @com.facebook.swift.codec.ThriftField(value=31, name="outputDataSizeInBytes", requiredness=Requiredness.NONE)    public Builder setOutputDataSizeInBytes(long outputDataSizeInBytes) {
            this.outputDataSizeInBytes = outputDataSizeInBytes;
            return this;
        }
    
        public long getOutputDataSizeInBytes() { return outputDataSizeInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=32, name="outputPositions", requiredness=Requiredness.NONE)    public Builder setOutputPositions(long outputPositions) {
            this.outputPositions = outputPositions;
            return this;
        }
    
        public long getOutputPositions() { return outputPositions; }
    
            @com.facebook.swift.codec.ThriftField(value=33, name="physicalWrittenDataSizeInBytes", requiredness=Requiredness.NONE)    public Builder setPhysicalWrittenDataSizeInBytes(long physicalWrittenDataSizeInBytes) {
            this.physicalWrittenDataSizeInBytes = physicalWrittenDataSizeInBytes;
            return this;
        }
    
        public long getPhysicalWrittenDataSizeInBytes() { return physicalWrittenDataSizeInBytes; }
    
            @com.facebook.swift.codec.ThriftField(value=34, name="pipelines", requiredness=Requiredness.NONE)    public Builder setPipelines(List<com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats> pipelines) {
            this.pipelines = pipelines;
            return this;
        }
    
        public List<com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats> getPipelines() { return pipelines; }
    
            @com.facebook.swift.codec.ThriftField(value=35, name="queuedPartitionedDrivers", requiredness=Requiredness.NONE)    public Builder setQueuedPartitionedDrivers(int queuedPartitionedDrivers) {
            this.queuedPartitionedDrivers = queuedPartitionedDrivers;
            return this;
        }
    
        public int getQueuedPartitionedDrivers() { return queuedPartitionedDrivers; }
    
            @com.facebook.swift.codec.ThriftField(value=36, name="queuedPartitionedSplitsWeight", requiredness=Requiredness.NONE)    public Builder setQueuedPartitionedSplitsWeight(long queuedPartitionedSplitsWeight) {
            this.queuedPartitionedSplitsWeight = queuedPartitionedSplitsWeight;
            return this;
        }
    
        public long getQueuedPartitionedSplitsWeight() { return queuedPartitionedSplitsWeight; }
    
            @com.facebook.swift.codec.ThriftField(value=37, name="runningPartitionedDrivers", requiredness=Requiredness.NONE)    public Builder setRunningPartitionedDrivers(int runningPartitionedDrivers) {
            this.runningPartitionedDrivers = runningPartitionedDrivers;
            return this;
        }
    
        public int getRunningPartitionedDrivers() { return runningPartitionedDrivers; }
    
            @com.facebook.swift.codec.ThriftField(value=38, name="runningPartitionedSplitsWeight", requiredness=Requiredness.NONE)    public Builder setRunningPartitionedSplitsWeight(long runningPartitionedSplitsWeight) {
            this.runningPartitionedSplitsWeight = runningPartitionedSplitsWeight;
            return this;
        }
    
        public long getRunningPartitionedSplitsWeight() { return runningPartitionedSplitsWeight; }
    
            @com.facebook.swift.codec.ThriftField(value=39, name="fullGcCount", requiredness=Requiredness.NONE)    public Builder setFullGcCount(int fullGcCount) {
            this.fullGcCount = fullGcCount;
            return this;
        }
    
        public int getFullGcCount() { return fullGcCount; }
    
            @com.facebook.swift.codec.ThriftField(value=40, name="fullGcTimeInMillis", requiredness=Requiredness.NONE)    public Builder setFullGcTimeInMillis(long fullGcTimeInMillis) {
            this.fullGcTimeInMillis = fullGcTimeInMillis;
            return this;
        }
    
        public long getFullGcTimeInMillis() { return fullGcTimeInMillis; }
    
            @com.facebook.swift.codec.ThriftField(value=41, name="runtimeStats", requiredness=Requiredness.NONE)    public Builder setRuntimeStats(com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats runtimeStats) {
            this.runtimeStats = runtimeStats;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats getRuntimeStats() { return runtimeStats; }
    
        public Builder() { }
        public Builder(ThriftTaskStats other) {
            this.createTimeInMillis = other.createTimeInMillis;
            this.firstStartTimeInMillis = other.firstStartTimeInMillis;
            this.lastStartTimeInMillis = other.lastStartTimeInMillis;
            this.lastEndTimeInMillis = other.lastEndTimeInMillis;
            this.endTimeInMillis = other.endTimeInMillis;
            this.elapsedTimeInNanos = other.elapsedTimeInNanos;
            this.queuedTimeInNanos = other.queuedTimeInNanos;
            this.totalDrivers = other.totalDrivers;
            this.queuedDrivers = other.queuedDrivers;
            this.runningDrivers = other.runningDrivers;
            this.blockedDrivers = other.blockedDrivers;
            this.completedDrivers = other.completedDrivers;
            this.cumulativeUserMemory = other.cumulativeUserMemory;
            this.cumulativeTotalMemory = other.cumulativeTotalMemory;
            this.userMemoryReservationInBytes = other.userMemoryReservationInBytes;
            this.revocableMemoryReservationInBytes = other.revocableMemoryReservationInBytes;
            this.systemMemoryReservationInBytes = other.systemMemoryReservationInBytes;
            this.peakUserMemoryInBytes = other.peakUserMemoryInBytes;
            this.peakTotalMemoryInBytes = other.peakTotalMemoryInBytes;
            this.peakNodeTotalMemoryInBytes = other.peakNodeTotalMemoryInBytes;
            this.totalScheduledTimeInNanos = other.totalScheduledTimeInNanos;
            this.totalCpuTimeInNanos = other.totalCpuTimeInNanos;
            this.totalBlockedTimeInNanos = other.totalBlockedTimeInNanos;
            this.fullyBlocked = other.fullyBlocked;
            this.blockedReasons = other.blockedReasons;
            this.totalAllocationInBytes = other.totalAllocationInBytes;
            this.rawInputDataSizeInBytes = other.rawInputDataSizeInBytes;
            this.rawInputPositions = other.rawInputPositions;
            this.processedInputDataSizeInBytes = other.processedInputDataSizeInBytes;
            this.processedInputPositions = other.processedInputPositions;
            this.outputDataSizeInBytes = other.outputDataSizeInBytes;
            this.outputPositions = other.outputPositions;
            this.physicalWrittenDataSizeInBytes = other.physicalWrittenDataSizeInBytes;
            this.pipelines = other.pipelines;
            this.queuedPartitionedDrivers = other.queuedPartitionedDrivers;
            this.queuedPartitionedSplitsWeight = other.queuedPartitionedSplitsWeight;
            this.runningPartitionedDrivers = other.runningPartitionedDrivers;
            this.runningPartitionedSplitsWeight = other.runningPartitionedSplitsWeight;
            this.fullGcCount = other.fullGcCount;
            this.fullGcTimeInMillis = other.fullGcTimeInMillis;
            this.runtimeStats = other.runtimeStats;
        }
    
        @ThriftConstructor
        public ThriftTaskStats build() {
            ThriftTaskStats result = new ThriftTaskStats (
                this.createTimeInMillis,
                this.firstStartTimeInMillis,
                this.lastStartTimeInMillis,
                this.lastEndTimeInMillis,
                this.endTimeInMillis,
                this.elapsedTimeInNanos,
                this.queuedTimeInNanos,
                this.totalDrivers,
                this.queuedDrivers,
                this.runningDrivers,
                this.blockedDrivers,
                this.completedDrivers,
                this.cumulativeUserMemory,
                this.cumulativeTotalMemory,
                this.userMemoryReservationInBytes,
                this.revocableMemoryReservationInBytes,
                this.systemMemoryReservationInBytes,
                this.peakUserMemoryInBytes,
                this.peakTotalMemoryInBytes,
                this.peakNodeTotalMemoryInBytes,
                this.totalScheduledTimeInNanos,
                this.totalCpuTimeInNanos,
                this.totalBlockedTimeInNanos,
                this.fullyBlocked,
                this.blockedReasons,
                this.totalAllocationInBytes,
                this.rawInputDataSizeInBytes,
                this.rawInputPositions,
                this.processedInputDataSizeInBytes,
                this.processedInputPositions,
                this.outputDataSizeInBytes,
                this.outputPositions,
                this.physicalWrittenDataSizeInBytes,
                this.pipelines,
                this.queuedPartitionedDrivers,
                this.queuedPartitionedSplitsWeight,
                this.runningPartitionedDrivers,
                this.runningPartitionedSplitsWeight,
                this.fullGcCount,
                this.fullGcTimeInMillis,
                this.runtimeStats
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftTaskStats");
    private final long createTimeInMillis;
    public static final int _CREATETIMEINMILLIS = 1;
    private static final TField CREATE_TIME_IN_MILLIS_FIELD_DESC = new TField("createTimeInMillis", TType.I64, (short)1);
        private final long firstStartTimeInMillis;
    public static final int _FIRSTSTARTTIMEINMILLIS = 2;
    private static final TField FIRST_START_TIME_IN_MILLIS_FIELD_DESC = new TField("firstStartTimeInMillis", TType.I64, (short)2);
        private final long lastStartTimeInMillis;
    public static final int _LASTSTARTTIMEINMILLIS = 3;
    private static final TField LAST_START_TIME_IN_MILLIS_FIELD_DESC = new TField("lastStartTimeInMillis", TType.I64, (short)3);
        private final long lastEndTimeInMillis;
    public static final int _LASTENDTIMEINMILLIS = 4;
    private static final TField LAST_END_TIME_IN_MILLIS_FIELD_DESC = new TField("lastEndTimeInMillis", TType.I64, (short)4);
        private final long endTimeInMillis;
    public static final int _ENDTIMEINMILLIS = 5;
    private static final TField END_TIME_IN_MILLIS_FIELD_DESC = new TField("endTimeInMillis", TType.I64, (short)5);
        private final long elapsedTimeInNanos;
    public static final int _ELAPSEDTIMEINNANOS = 6;
    private static final TField ELAPSED_TIME_IN_NANOS_FIELD_DESC = new TField("elapsedTimeInNanos", TType.I64, (short)6);
        private final long queuedTimeInNanos;
    public static final int _QUEUEDTIMEINNANOS = 7;
    private static final TField QUEUED_TIME_IN_NANOS_FIELD_DESC = new TField("queuedTimeInNanos", TType.I64, (short)7);
        private final int totalDrivers;
    public static final int _TOTALDRIVERS = 8;
    private static final TField TOTAL_DRIVERS_FIELD_DESC = new TField("totalDrivers", TType.I32, (short)8);
        private final int queuedDrivers;
    public static final int _QUEUEDDRIVERS = 9;
    private static final TField QUEUED_DRIVERS_FIELD_DESC = new TField("queuedDrivers", TType.I32, (short)9);
        private final int runningDrivers;
    public static final int _RUNNINGDRIVERS = 10;
    private static final TField RUNNING_DRIVERS_FIELD_DESC = new TField("runningDrivers", TType.I32, (short)10);
        private final int blockedDrivers;
    public static final int _BLOCKEDDRIVERS = 11;
    private static final TField BLOCKED_DRIVERS_FIELD_DESC = new TField("blockedDrivers", TType.I32, (short)11);
        private final int completedDrivers;
    public static final int _COMPLETEDDRIVERS = 12;
    private static final TField COMPLETED_DRIVERS_FIELD_DESC = new TField("completedDrivers", TType.I32, (short)12);
        private final double cumulativeUserMemory;
    public static final int _CUMULATIVEUSERMEMORY = 13;
    private static final TField CUMULATIVE_USER_MEMORY_FIELD_DESC = new TField("cumulativeUserMemory", TType.DOUBLE, (short)13);
        private final double cumulativeTotalMemory;
    public static final int _CUMULATIVETOTALMEMORY = 14;
    private static final TField CUMULATIVE_TOTAL_MEMORY_FIELD_DESC = new TField("cumulativeTotalMemory", TType.DOUBLE, (short)14);
        private final long userMemoryReservationInBytes;
    public static final int _USERMEMORYRESERVATIONINBYTES = 15;
    private static final TField USER_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC = new TField("userMemoryReservationInBytes", TType.I64, (short)15);
        private final long revocableMemoryReservationInBytes;
    public static final int _REVOCABLEMEMORYRESERVATIONINBYTES = 16;
    private static final TField REVOCABLE_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC = new TField("revocableMemoryReservationInBytes", TType.I64, (short)16);
        private final long systemMemoryReservationInBytes;
    public static final int _SYSTEMMEMORYRESERVATIONINBYTES = 17;
    private static final TField SYSTEM_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC = new TField("systemMemoryReservationInBytes", TType.I64, (short)17);
        private final long peakUserMemoryInBytes;
    public static final int _PEAKUSERMEMORYINBYTES = 18;
    private static final TField PEAK_USER_MEMORY_IN_BYTES_FIELD_DESC = new TField("peakUserMemoryInBytes", TType.I64, (short)18);
        private final long peakTotalMemoryInBytes;
    public static final int _PEAKTOTALMEMORYINBYTES = 19;
    private static final TField PEAK_TOTAL_MEMORY_IN_BYTES_FIELD_DESC = new TField("peakTotalMemoryInBytes", TType.I64, (short)19);
        private final long peakNodeTotalMemoryInBytes;
    public static final int _PEAKNODETOTALMEMORYINBYTES = 20;
    private static final TField PEAK_NODE_TOTAL_MEMORY_IN_BYTES_FIELD_DESC = new TField("peakNodeTotalMemoryInBytes", TType.I64, (short)20);
        private final long totalScheduledTimeInNanos;
    public static final int _TOTALSCHEDULEDTIMEINNANOS = 21;
    private static final TField TOTAL_SCHEDULED_TIME_IN_NANOS_FIELD_DESC = new TField("totalScheduledTimeInNanos", TType.I64, (short)21);
        private final long totalCpuTimeInNanos;
    public static final int _TOTALCPUTIMEINNANOS = 22;
    private static final TField TOTAL_CPU_TIME_IN_NANOS_FIELD_DESC = new TField("totalCpuTimeInNanos", TType.I64, (short)22);
        private final long totalBlockedTimeInNanos;
    public static final int _TOTALBLOCKEDTIMEINNANOS = 23;
    private static final TField TOTAL_BLOCKED_TIME_IN_NANOS_FIELD_DESC = new TField("totalBlockedTimeInNanos", TType.I64, (short)23);
        private final boolean fullyBlocked;
    public static final int _FULLYBLOCKED = 24;
    private static final TField FULLY_BLOCKED_FIELD_DESC = new TField("fullyBlocked", TType.BOOL, (short)24);
        private final Set<com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason> blockedReasons;
    public static final int _BLOCKEDREASONS = 25;
    private static final TField BLOCKED_REASONS_FIELD_DESC = new TField("blockedReasons", TType.SET, (short)25);
        private final long totalAllocationInBytes;
    public static final int _TOTALALLOCATIONINBYTES = 26;
    private static final TField TOTAL_ALLOCATION_IN_BYTES_FIELD_DESC = new TField("totalAllocationInBytes", TType.I64, (short)26);
        private final long rawInputDataSizeInBytes;
    public static final int _RAWINPUTDATASIZEINBYTES = 27;
    private static final TField RAW_INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC = new TField("rawInputDataSizeInBytes", TType.I64, (short)27);
        private final long rawInputPositions;
    public static final int _RAWINPUTPOSITIONS = 28;
    private static final TField RAW_INPUT_POSITIONS_FIELD_DESC = new TField("rawInputPositions", TType.I64, (short)28);
        private final long processedInputDataSizeInBytes;
    public static final int _PROCESSEDINPUTDATASIZEINBYTES = 29;
    private static final TField PROCESSED_INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC = new TField("processedInputDataSizeInBytes", TType.I64, (short)29);
        private final long processedInputPositions;
    public static final int _PROCESSEDINPUTPOSITIONS = 30;
    private static final TField PROCESSED_INPUT_POSITIONS_FIELD_DESC = new TField("processedInputPositions", TType.I64, (short)30);
        private final long outputDataSizeInBytes;
    public static final int _OUTPUTDATASIZEINBYTES = 31;
    private static final TField OUTPUT_DATA_SIZE_IN_BYTES_FIELD_DESC = new TField("outputDataSizeInBytes", TType.I64, (short)31);
        private final long outputPositions;
    public static final int _OUTPUTPOSITIONS = 32;
    private static final TField OUTPUT_POSITIONS_FIELD_DESC = new TField("outputPositions", TType.I64, (short)32);
        private final long physicalWrittenDataSizeInBytes;
    public static final int _PHYSICALWRITTENDATASIZEINBYTES = 33;
    private static final TField PHYSICAL_WRITTEN_DATA_SIZE_IN_BYTES_FIELD_DESC = new TField("physicalWrittenDataSizeInBytes", TType.I64, (short)33);
        private final List<com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats> pipelines;
    public static final int _PIPELINES = 34;
    private static final TField PIPELINES_FIELD_DESC = new TField("pipelines", TType.LIST, (short)34);
        private final int queuedPartitionedDrivers;
    public static final int _QUEUEDPARTITIONEDDRIVERS = 35;
    private static final TField QUEUED_PARTITIONED_DRIVERS_FIELD_DESC = new TField("queuedPartitionedDrivers", TType.I32, (short)35);
        private final long queuedPartitionedSplitsWeight;
    public static final int _QUEUEDPARTITIONEDSPLITSWEIGHT = 36;
    private static final TField QUEUED_PARTITIONED_SPLITS_WEIGHT_FIELD_DESC = new TField("queuedPartitionedSplitsWeight", TType.I64, (short)36);
        private final int runningPartitionedDrivers;
    public static final int _RUNNINGPARTITIONEDDRIVERS = 37;
    private static final TField RUNNING_PARTITIONED_DRIVERS_FIELD_DESC = new TField("runningPartitionedDrivers", TType.I32, (short)37);
        private final long runningPartitionedSplitsWeight;
    public static final int _RUNNINGPARTITIONEDSPLITSWEIGHT = 38;
    private static final TField RUNNING_PARTITIONED_SPLITS_WEIGHT_FIELD_DESC = new TField("runningPartitionedSplitsWeight", TType.I64, (short)38);
        private final int fullGcCount;
    public static final int _FULLGCCOUNT = 39;
    private static final TField FULL_GC_COUNT_FIELD_DESC = new TField("fullGcCount", TType.I32, (short)39);
        private final long fullGcTimeInMillis;
    public static final int _FULLGCTIMEINMILLIS = 40;
    private static final TField FULL_GC_TIME_IN_MILLIS_FIELD_DESC = new TField("fullGcTimeInMillis", TType.I64, (short)40);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats runtimeStats;
    public static final int _RUNTIMESTATS = 41;
    private static final TField RUNTIME_STATS_FIELD_DESC = new TField("runtimeStats", TType.STRUCT, (short)41);
    static {
      NAMES_TO_IDS.put("createTimeInMillis", 1);
      THRIFT_NAMES_TO_IDS.put("createTimeInMillis", 1);
      FIELD_METADATA.put(1, CREATE_TIME_IN_MILLIS_FIELD_DESC);
      NAMES_TO_IDS.put("firstStartTimeInMillis", 2);
      THRIFT_NAMES_TO_IDS.put("firstStartTimeInMillis", 2);
      FIELD_METADATA.put(2, FIRST_START_TIME_IN_MILLIS_FIELD_DESC);
      NAMES_TO_IDS.put("lastStartTimeInMillis", 3);
      THRIFT_NAMES_TO_IDS.put("lastStartTimeInMillis", 3);
      FIELD_METADATA.put(3, LAST_START_TIME_IN_MILLIS_FIELD_DESC);
      NAMES_TO_IDS.put("lastEndTimeInMillis", 4);
      THRIFT_NAMES_TO_IDS.put("lastEndTimeInMillis", 4);
      FIELD_METADATA.put(4, LAST_END_TIME_IN_MILLIS_FIELD_DESC);
      NAMES_TO_IDS.put("endTimeInMillis", 5);
      THRIFT_NAMES_TO_IDS.put("endTimeInMillis", 5);
      FIELD_METADATA.put(5, END_TIME_IN_MILLIS_FIELD_DESC);
      NAMES_TO_IDS.put("elapsedTimeInNanos", 6);
      THRIFT_NAMES_TO_IDS.put("elapsedTimeInNanos", 6);
      FIELD_METADATA.put(6, ELAPSED_TIME_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("queuedTimeInNanos", 7);
      THRIFT_NAMES_TO_IDS.put("queuedTimeInNanos", 7);
      FIELD_METADATA.put(7, QUEUED_TIME_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("totalDrivers", 8);
      THRIFT_NAMES_TO_IDS.put("totalDrivers", 8);
      FIELD_METADATA.put(8, TOTAL_DRIVERS_FIELD_DESC);
      NAMES_TO_IDS.put("queuedDrivers", 9);
      THRIFT_NAMES_TO_IDS.put("queuedDrivers", 9);
      FIELD_METADATA.put(9, QUEUED_DRIVERS_FIELD_DESC);
      NAMES_TO_IDS.put("runningDrivers", 10);
      THRIFT_NAMES_TO_IDS.put("runningDrivers", 10);
      FIELD_METADATA.put(10, RUNNING_DRIVERS_FIELD_DESC);
      NAMES_TO_IDS.put("blockedDrivers", 11);
      THRIFT_NAMES_TO_IDS.put("blockedDrivers", 11);
      FIELD_METADATA.put(11, BLOCKED_DRIVERS_FIELD_DESC);
      NAMES_TO_IDS.put("completedDrivers", 12);
      THRIFT_NAMES_TO_IDS.put("completedDrivers", 12);
      FIELD_METADATA.put(12, COMPLETED_DRIVERS_FIELD_DESC);
      NAMES_TO_IDS.put("cumulativeUserMemory", 13);
      THRIFT_NAMES_TO_IDS.put("cumulativeUserMemory", 13);
      FIELD_METADATA.put(13, CUMULATIVE_USER_MEMORY_FIELD_DESC);
      NAMES_TO_IDS.put("cumulativeTotalMemory", 14);
      THRIFT_NAMES_TO_IDS.put("cumulativeTotalMemory", 14);
      FIELD_METADATA.put(14, CUMULATIVE_TOTAL_MEMORY_FIELD_DESC);
      NAMES_TO_IDS.put("userMemoryReservationInBytes", 15);
      THRIFT_NAMES_TO_IDS.put("userMemoryReservationInBytes", 15);
      FIELD_METADATA.put(15, USER_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("revocableMemoryReservationInBytes", 16);
      THRIFT_NAMES_TO_IDS.put("revocableMemoryReservationInBytes", 16);
      FIELD_METADATA.put(16, REVOCABLE_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("systemMemoryReservationInBytes", 17);
      THRIFT_NAMES_TO_IDS.put("systemMemoryReservationInBytes", 17);
      FIELD_METADATA.put(17, SYSTEM_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("peakUserMemoryInBytes", 18);
      THRIFT_NAMES_TO_IDS.put("peakUserMemoryInBytes", 18);
      FIELD_METADATA.put(18, PEAK_USER_MEMORY_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("peakTotalMemoryInBytes", 19);
      THRIFT_NAMES_TO_IDS.put("peakTotalMemoryInBytes", 19);
      FIELD_METADATA.put(19, PEAK_TOTAL_MEMORY_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("peakNodeTotalMemoryInBytes", 20);
      THRIFT_NAMES_TO_IDS.put("peakNodeTotalMemoryInBytes", 20);
      FIELD_METADATA.put(20, PEAK_NODE_TOTAL_MEMORY_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("totalScheduledTimeInNanos", 21);
      THRIFT_NAMES_TO_IDS.put("totalScheduledTimeInNanos", 21);
      FIELD_METADATA.put(21, TOTAL_SCHEDULED_TIME_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("totalCpuTimeInNanos", 22);
      THRIFT_NAMES_TO_IDS.put("totalCpuTimeInNanos", 22);
      FIELD_METADATA.put(22, TOTAL_CPU_TIME_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("totalBlockedTimeInNanos", 23);
      THRIFT_NAMES_TO_IDS.put("totalBlockedTimeInNanos", 23);
      FIELD_METADATA.put(23, TOTAL_BLOCKED_TIME_IN_NANOS_FIELD_DESC);
      NAMES_TO_IDS.put("fullyBlocked", 24);
      THRIFT_NAMES_TO_IDS.put("fullyBlocked", 24);
      FIELD_METADATA.put(24, FULLY_BLOCKED_FIELD_DESC);
      NAMES_TO_IDS.put("blockedReasons", 25);
      THRIFT_NAMES_TO_IDS.put("blockedReasons", 25);
      FIELD_METADATA.put(25, BLOCKED_REASONS_FIELD_DESC);
      NAMES_TO_IDS.put("totalAllocationInBytes", 26);
      THRIFT_NAMES_TO_IDS.put("totalAllocationInBytes", 26);
      FIELD_METADATA.put(26, TOTAL_ALLOCATION_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("rawInputDataSizeInBytes", 27);
      THRIFT_NAMES_TO_IDS.put("rawInputDataSizeInBytes", 27);
      FIELD_METADATA.put(27, RAW_INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("rawInputPositions", 28);
      THRIFT_NAMES_TO_IDS.put("rawInputPositions", 28);
      FIELD_METADATA.put(28, RAW_INPUT_POSITIONS_FIELD_DESC);
      NAMES_TO_IDS.put("processedInputDataSizeInBytes", 29);
      THRIFT_NAMES_TO_IDS.put("processedInputDataSizeInBytes", 29);
      FIELD_METADATA.put(29, PROCESSED_INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("processedInputPositions", 30);
      THRIFT_NAMES_TO_IDS.put("processedInputPositions", 30);
      FIELD_METADATA.put(30, PROCESSED_INPUT_POSITIONS_FIELD_DESC);
      NAMES_TO_IDS.put("outputDataSizeInBytes", 31);
      THRIFT_NAMES_TO_IDS.put("outputDataSizeInBytes", 31);
      FIELD_METADATA.put(31, OUTPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("outputPositions", 32);
      THRIFT_NAMES_TO_IDS.put("outputPositions", 32);
      FIELD_METADATA.put(32, OUTPUT_POSITIONS_FIELD_DESC);
      NAMES_TO_IDS.put("physicalWrittenDataSizeInBytes", 33);
      THRIFT_NAMES_TO_IDS.put("physicalWrittenDataSizeInBytes", 33);
      FIELD_METADATA.put(33, PHYSICAL_WRITTEN_DATA_SIZE_IN_BYTES_FIELD_DESC);
      NAMES_TO_IDS.put("pipelines", 34);
      THRIFT_NAMES_TO_IDS.put("pipelines", 34);
      FIELD_METADATA.put(34, PIPELINES_FIELD_DESC);
      NAMES_TO_IDS.put("queuedPartitionedDrivers", 35);
      THRIFT_NAMES_TO_IDS.put("queuedPartitionedDrivers", 35);
      FIELD_METADATA.put(35, QUEUED_PARTITIONED_DRIVERS_FIELD_DESC);
      NAMES_TO_IDS.put("queuedPartitionedSplitsWeight", 36);
      THRIFT_NAMES_TO_IDS.put("queuedPartitionedSplitsWeight", 36);
      FIELD_METADATA.put(36, QUEUED_PARTITIONED_SPLITS_WEIGHT_FIELD_DESC);
      NAMES_TO_IDS.put("runningPartitionedDrivers", 37);
      THRIFT_NAMES_TO_IDS.put("runningPartitionedDrivers", 37);
      FIELD_METADATA.put(37, RUNNING_PARTITIONED_DRIVERS_FIELD_DESC);
      NAMES_TO_IDS.put("runningPartitionedSplitsWeight", 38);
      THRIFT_NAMES_TO_IDS.put("runningPartitionedSplitsWeight", 38);
      FIELD_METADATA.put(38, RUNNING_PARTITIONED_SPLITS_WEIGHT_FIELD_DESC);
      NAMES_TO_IDS.put("fullGcCount", 39);
      THRIFT_NAMES_TO_IDS.put("fullGcCount", 39);
      FIELD_METADATA.put(39, FULL_GC_COUNT_FIELD_DESC);
      NAMES_TO_IDS.put("fullGcTimeInMillis", 40);
      THRIFT_NAMES_TO_IDS.put("fullGcTimeInMillis", 40);
      FIELD_METADATA.put(40, FULL_GC_TIME_IN_MILLIS_FIELD_DESC);
      NAMES_TO_IDS.put("runtimeStats", 41);
      THRIFT_NAMES_TO_IDS.put("runtimeStats", 41);
      FIELD_METADATA.put(41, RUNTIME_STATS_FIELD_DESC);
    }
    
    
    @com.facebook.swift.codec.ThriftField(value=1, name="createTimeInMillis", requiredness=Requiredness.NONE)
    public long getCreateTimeInMillis() { return createTimeInMillis; }

    
    
    @com.facebook.swift.codec.ThriftField(value=2, name="firstStartTimeInMillis", requiredness=Requiredness.NONE)
    public long getFirstStartTimeInMillis() { return firstStartTimeInMillis; }

    
    
    @com.facebook.swift.codec.ThriftField(value=3, name="lastStartTimeInMillis", requiredness=Requiredness.NONE)
    public long getLastStartTimeInMillis() { return lastStartTimeInMillis; }

    
    
    @com.facebook.swift.codec.ThriftField(value=4, name="lastEndTimeInMillis", requiredness=Requiredness.NONE)
    public long getLastEndTimeInMillis() { return lastEndTimeInMillis; }

    
    
    @com.facebook.swift.codec.ThriftField(value=5, name="endTimeInMillis", requiredness=Requiredness.NONE)
    public long getEndTimeInMillis() { return endTimeInMillis; }

    
    
    @com.facebook.swift.codec.ThriftField(value=6, name="elapsedTimeInNanos", requiredness=Requiredness.NONE)
    public long getElapsedTimeInNanos() { return elapsedTimeInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=7, name="queuedTimeInNanos", requiredness=Requiredness.NONE)
    public long getQueuedTimeInNanos() { return queuedTimeInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=8, name="totalDrivers", requiredness=Requiredness.NONE)
    public int getTotalDrivers() { return totalDrivers; }

    
    
    @com.facebook.swift.codec.ThriftField(value=9, name="queuedDrivers", requiredness=Requiredness.NONE)
    public int getQueuedDrivers() { return queuedDrivers; }

    
    
    @com.facebook.swift.codec.ThriftField(value=10, name="runningDrivers", requiredness=Requiredness.NONE)
    public int getRunningDrivers() { return runningDrivers; }

    
    
    @com.facebook.swift.codec.ThriftField(value=11, name="blockedDrivers", requiredness=Requiredness.NONE)
    public int getBlockedDrivers() { return blockedDrivers; }

    
    
    @com.facebook.swift.codec.ThriftField(value=12, name="completedDrivers", requiredness=Requiredness.NONE)
    public int getCompletedDrivers() { return completedDrivers; }

    
    
    @com.facebook.swift.codec.ThriftField(value=13, name="cumulativeUserMemory", requiredness=Requiredness.NONE)
    public double getCumulativeUserMemory() { return cumulativeUserMemory; }

    
    
    @com.facebook.swift.codec.ThriftField(value=14, name="cumulativeTotalMemory", requiredness=Requiredness.NONE)
    public double getCumulativeTotalMemory() { return cumulativeTotalMemory; }

    
    
    @com.facebook.swift.codec.ThriftField(value=15, name="userMemoryReservationInBytes", requiredness=Requiredness.NONE)
    public long getUserMemoryReservationInBytes() { return userMemoryReservationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=16, name="revocableMemoryReservationInBytes", requiredness=Requiredness.NONE)
    public long getRevocableMemoryReservationInBytes() { return revocableMemoryReservationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=17, name="systemMemoryReservationInBytes", requiredness=Requiredness.NONE)
    public long getSystemMemoryReservationInBytes() { return systemMemoryReservationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=18, name="peakUserMemoryInBytes", requiredness=Requiredness.NONE)
    public long getPeakUserMemoryInBytes() { return peakUserMemoryInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=19, name="peakTotalMemoryInBytes", requiredness=Requiredness.NONE)
    public long getPeakTotalMemoryInBytes() { return peakTotalMemoryInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=20, name="peakNodeTotalMemoryInBytes", requiredness=Requiredness.NONE)
    public long getPeakNodeTotalMemoryInBytes() { return peakNodeTotalMemoryInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=21, name="totalScheduledTimeInNanos", requiredness=Requiredness.NONE)
    public long getTotalScheduledTimeInNanos() { return totalScheduledTimeInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=22, name="totalCpuTimeInNanos", requiredness=Requiredness.NONE)
    public long getTotalCpuTimeInNanos() { return totalCpuTimeInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=23, name="totalBlockedTimeInNanos", requiredness=Requiredness.NONE)
    public long getTotalBlockedTimeInNanos() { return totalBlockedTimeInNanos; }

    
    
    @com.facebook.swift.codec.ThriftField(value=24, name="fullyBlocked", requiredness=Requiredness.NONE)
    public boolean isFullyBlocked() { return fullyBlocked; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=25, name="blockedReasons", requiredness=Requiredness.NONE)
    public Set<com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason> getBlockedReasons() { return blockedReasons; }

    
    
    @com.facebook.swift.codec.ThriftField(value=26, name="totalAllocationInBytes", requiredness=Requiredness.NONE)
    public long getTotalAllocationInBytes() { return totalAllocationInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=27, name="rawInputDataSizeInBytes", requiredness=Requiredness.NONE)
    public long getRawInputDataSizeInBytes() { return rawInputDataSizeInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=28, name="rawInputPositions", requiredness=Requiredness.NONE)
    public long getRawInputPositions() { return rawInputPositions; }

    
    
    @com.facebook.swift.codec.ThriftField(value=29, name="processedInputDataSizeInBytes", requiredness=Requiredness.NONE)
    public long getProcessedInputDataSizeInBytes() { return processedInputDataSizeInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=30, name="processedInputPositions", requiredness=Requiredness.NONE)
    public long getProcessedInputPositions() { return processedInputPositions; }

    
    
    @com.facebook.swift.codec.ThriftField(value=31, name="outputDataSizeInBytes", requiredness=Requiredness.NONE)
    public long getOutputDataSizeInBytes() { return outputDataSizeInBytes; }

    
    
    @com.facebook.swift.codec.ThriftField(value=32, name="outputPositions", requiredness=Requiredness.NONE)
    public long getOutputPositions() { return outputPositions; }

    
    
    @com.facebook.swift.codec.ThriftField(value=33, name="physicalWrittenDataSizeInBytes", requiredness=Requiredness.NONE)
    public long getPhysicalWrittenDataSizeInBytes() { return physicalWrittenDataSizeInBytes; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=34, name="pipelines", requiredness=Requiredness.NONE)
    public List<com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats> getPipelines() { return pipelines; }

    
    
    @com.facebook.swift.codec.ThriftField(value=35, name="queuedPartitionedDrivers", requiredness=Requiredness.NONE)
    public int getQueuedPartitionedDrivers() { return queuedPartitionedDrivers; }

    
    
    @com.facebook.swift.codec.ThriftField(value=36, name="queuedPartitionedSplitsWeight", requiredness=Requiredness.NONE)
    public long getQueuedPartitionedSplitsWeight() { return queuedPartitionedSplitsWeight; }

    
    
    @com.facebook.swift.codec.ThriftField(value=37, name="runningPartitionedDrivers", requiredness=Requiredness.NONE)
    public int getRunningPartitionedDrivers() { return runningPartitionedDrivers; }

    
    
    @com.facebook.swift.codec.ThriftField(value=38, name="runningPartitionedSplitsWeight", requiredness=Requiredness.NONE)
    public long getRunningPartitionedSplitsWeight() { return runningPartitionedSplitsWeight; }

    
    
    @com.facebook.swift.codec.ThriftField(value=39, name="fullGcCount", requiredness=Requiredness.NONE)
    public int getFullGcCount() { return fullGcCount; }

    
    
    @com.facebook.swift.codec.ThriftField(value=40, name="fullGcTimeInMillis", requiredness=Requiredness.NONE)
    public long getFullGcTimeInMillis() { return fullGcTimeInMillis; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=41, name="runtimeStats", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats getRuntimeStats() { return runtimeStats; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("createTimeInMillis", createTimeInMillis);
        helper.add("firstStartTimeInMillis", firstStartTimeInMillis);
        helper.add("lastStartTimeInMillis", lastStartTimeInMillis);
        helper.add("lastEndTimeInMillis", lastEndTimeInMillis);
        helper.add("endTimeInMillis", endTimeInMillis);
        helper.add("elapsedTimeInNanos", elapsedTimeInNanos);
        helper.add("queuedTimeInNanos", queuedTimeInNanos);
        helper.add("totalDrivers", totalDrivers);
        helper.add("queuedDrivers", queuedDrivers);
        helper.add("runningDrivers", runningDrivers);
        helper.add("blockedDrivers", blockedDrivers);
        helper.add("completedDrivers", completedDrivers);
        helper.add("cumulativeUserMemory", cumulativeUserMemory);
        helper.add("cumulativeTotalMemory", cumulativeTotalMemory);
        helper.add("userMemoryReservationInBytes", userMemoryReservationInBytes);
        helper.add("revocableMemoryReservationInBytes", revocableMemoryReservationInBytes);
        helper.add("systemMemoryReservationInBytes", systemMemoryReservationInBytes);
        helper.add("peakUserMemoryInBytes", peakUserMemoryInBytes);
        helper.add("peakTotalMemoryInBytes", peakTotalMemoryInBytes);
        helper.add("peakNodeTotalMemoryInBytes", peakNodeTotalMemoryInBytes);
        helper.add("totalScheduledTimeInNanos", totalScheduledTimeInNanos);
        helper.add("totalCpuTimeInNanos", totalCpuTimeInNanos);
        helper.add("totalBlockedTimeInNanos", totalBlockedTimeInNanos);
        helper.add("fullyBlocked", fullyBlocked);
        helper.add("blockedReasons", blockedReasons);
        helper.add("totalAllocationInBytes", totalAllocationInBytes);
        helper.add("rawInputDataSizeInBytes", rawInputDataSizeInBytes);
        helper.add("rawInputPositions", rawInputPositions);
        helper.add("processedInputDataSizeInBytes", processedInputDataSizeInBytes);
        helper.add("processedInputPositions", processedInputPositions);
        helper.add("outputDataSizeInBytes", outputDataSizeInBytes);
        helper.add("outputPositions", outputPositions);
        helper.add("physicalWrittenDataSizeInBytes", physicalWrittenDataSizeInBytes);
        helper.add("pipelines", pipelines);
        helper.add("queuedPartitionedDrivers", queuedPartitionedDrivers);
        helper.add("queuedPartitionedSplitsWeight", queuedPartitionedSplitsWeight);
        helper.add("runningPartitionedDrivers", runningPartitionedDrivers);
        helper.add("runningPartitionedSplitsWeight", runningPartitionedSplitsWeight);
        helper.add("fullGcCount", fullGcCount);
        helper.add("fullGcTimeInMillis", fullGcTimeInMillis);
        helper.add("runtimeStats", runtimeStats);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftTaskStats other = (ThriftTaskStats)o;
    
        return
            Objects.equals(createTimeInMillis, other.createTimeInMillis) &&
            Objects.equals(firstStartTimeInMillis, other.firstStartTimeInMillis) &&
            Objects.equals(lastStartTimeInMillis, other.lastStartTimeInMillis) &&
            Objects.equals(lastEndTimeInMillis, other.lastEndTimeInMillis) &&
            Objects.equals(endTimeInMillis, other.endTimeInMillis) &&
            Objects.equals(elapsedTimeInNanos, other.elapsedTimeInNanos) &&
            Objects.equals(queuedTimeInNanos, other.queuedTimeInNanos) &&
            Objects.equals(totalDrivers, other.totalDrivers) &&
            Objects.equals(queuedDrivers, other.queuedDrivers) &&
            Objects.equals(runningDrivers, other.runningDrivers) &&
            Objects.equals(blockedDrivers, other.blockedDrivers) &&
            Objects.equals(completedDrivers, other.completedDrivers) &&
            Objects.equals(cumulativeUserMemory, other.cumulativeUserMemory) &&
            Objects.equals(cumulativeTotalMemory, other.cumulativeTotalMemory) &&
            Objects.equals(userMemoryReservationInBytes, other.userMemoryReservationInBytes) &&
            Objects.equals(revocableMemoryReservationInBytes, other.revocableMemoryReservationInBytes) &&
            Objects.equals(systemMemoryReservationInBytes, other.systemMemoryReservationInBytes) &&
            Objects.equals(peakUserMemoryInBytes, other.peakUserMemoryInBytes) &&
            Objects.equals(peakTotalMemoryInBytes, other.peakTotalMemoryInBytes) &&
            Objects.equals(peakNodeTotalMemoryInBytes, other.peakNodeTotalMemoryInBytes) &&
            Objects.equals(totalScheduledTimeInNanos, other.totalScheduledTimeInNanos) &&
            Objects.equals(totalCpuTimeInNanos, other.totalCpuTimeInNanos) &&
            Objects.equals(totalBlockedTimeInNanos, other.totalBlockedTimeInNanos) &&
            Objects.equals(fullyBlocked, other.fullyBlocked) &&
            Objects.equals(blockedReasons, other.blockedReasons) &&
            Objects.equals(totalAllocationInBytes, other.totalAllocationInBytes) &&
            Objects.equals(rawInputDataSizeInBytes, other.rawInputDataSizeInBytes) &&
            Objects.equals(rawInputPositions, other.rawInputPositions) &&
            Objects.equals(processedInputDataSizeInBytes, other.processedInputDataSizeInBytes) &&
            Objects.equals(processedInputPositions, other.processedInputPositions) &&
            Objects.equals(outputDataSizeInBytes, other.outputDataSizeInBytes) &&
            Objects.equals(outputPositions, other.outputPositions) &&
            Objects.equals(physicalWrittenDataSizeInBytes, other.physicalWrittenDataSizeInBytes) &&
            Objects.equals(pipelines, other.pipelines) &&
            Objects.equals(queuedPartitionedDrivers, other.queuedPartitionedDrivers) &&
            Objects.equals(queuedPartitionedSplitsWeight, other.queuedPartitionedSplitsWeight) &&
            Objects.equals(runningPartitionedDrivers, other.runningPartitionedDrivers) &&
            Objects.equals(runningPartitionedSplitsWeight, other.runningPartitionedSplitsWeight) &&
            Objects.equals(fullGcCount, other.fullGcCount) &&
            Objects.equals(fullGcTimeInMillis, other.fullGcTimeInMillis) &&
            Objects.equals(runtimeStats, other.runtimeStats) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            createTimeInMillis,
            firstStartTimeInMillis,
            lastStartTimeInMillis,
            lastEndTimeInMillis,
            endTimeInMillis,
            elapsedTimeInNanos,
            queuedTimeInNanos,
            totalDrivers,
            queuedDrivers,
            runningDrivers,
            blockedDrivers,
            completedDrivers,
            cumulativeUserMemory,
            cumulativeTotalMemory,
            userMemoryReservationInBytes,
            revocableMemoryReservationInBytes,
            systemMemoryReservationInBytes,
            peakUserMemoryInBytes,
            peakTotalMemoryInBytes,
            peakNodeTotalMemoryInBytes,
            totalScheduledTimeInNanos,
            totalCpuTimeInNanos,
            totalBlockedTimeInNanos,
            fullyBlocked,
            blockedReasons,
            totalAllocationInBytes,
            rawInputDataSizeInBytes,
            rawInputPositions,
            processedInputDataSizeInBytes,
            processedInputPositions,
            outputDataSizeInBytes,
            outputPositions,
            physicalWrittenDataSizeInBytes,
            pipelines,
            queuedPartitionedDrivers,
            queuedPartitionedSplitsWeight,
            runningPartitionedDrivers,
            runningPartitionedSplitsWeight,
            fullGcCount,
            fullGcTimeInMillis,
            runtimeStats
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftTaskStats> asReader() {
      return ThriftTaskStats::read0;
    }
    
    public static ThriftTaskStats read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftTaskStats.NAMES_TO_IDS, ThriftTaskStats.THRIFT_NAMES_TO_IDS, ThriftTaskStats.FIELD_METADATA);
      ThriftTaskStats.Builder builder = new ThriftTaskStats.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _CREATETIMEINMILLIS:
          if (__field.type == TType.I64) {
            long createTimeInMillis = oprot.readI64();
            builder.setCreateTimeInMillis(createTimeInMillis);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _FIRSTSTARTTIMEINMILLIS:
          if (__field.type == TType.I64) {
            long firstStartTimeInMillis = oprot.readI64();
            builder.setFirstStartTimeInMillis(firstStartTimeInMillis);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _LASTSTARTTIMEINMILLIS:
          if (__field.type == TType.I64) {
            long lastStartTimeInMillis = oprot.readI64();
            builder.setLastStartTimeInMillis(lastStartTimeInMillis);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _LASTENDTIMEINMILLIS:
          if (__field.type == TType.I64) {
            long lastEndTimeInMillis = oprot.readI64();
            builder.setLastEndTimeInMillis(lastEndTimeInMillis);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ENDTIMEINMILLIS:
          if (__field.type == TType.I64) {
            long endTimeInMillis = oprot.readI64();
            builder.setEndTimeInMillis(endTimeInMillis);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ELAPSEDTIMEINNANOS:
          if (__field.type == TType.I64) {
            long elapsedTimeInNanos = oprot.readI64();
            builder.setElapsedTimeInNanos(elapsedTimeInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _QUEUEDTIMEINNANOS:
          if (__field.type == TType.I64) {
            long queuedTimeInNanos = oprot.readI64();
            builder.setQueuedTimeInNanos(queuedTimeInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TOTALDRIVERS:
          if (__field.type == TType.I32) {
            int totalDrivers = oprot.readI32();
            builder.setTotalDrivers(totalDrivers);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _QUEUEDDRIVERS:
          if (__field.type == TType.I32) {
            int queuedDrivers = oprot.readI32();
            builder.setQueuedDrivers(queuedDrivers);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _RUNNINGDRIVERS:
          if (__field.type == TType.I32) {
            int runningDrivers = oprot.readI32();
            builder.setRunningDrivers(runningDrivers);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _BLOCKEDDRIVERS:
          if (__field.type == TType.I32) {
            int blockedDrivers = oprot.readI32();
            builder.setBlockedDrivers(blockedDrivers);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _COMPLETEDDRIVERS:
          if (__field.type == TType.I32) {
            int completedDrivers = oprot.readI32();
            builder.setCompletedDrivers(completedDrivers);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _CUMULATIVEUSERMEMORY:
          if (__field.type == TType.DOUBLE) {
            double cumulativeUserMemory = oprot.readDouble();
            builder.setCumulativeUserMemory(cumulativeUserMemory);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _CUMULATIVETOTALMEMORY:
          if (__field.type == TType.DOUBLE) {
            double cumulativeTotalMemory = oprot.readDouble();
            builder.setCumulativeTotalMemory(cumulativeTotalMemory);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _USERMEMORYRESERVATIONINBYTES:
          if (__field.type == TType.I64) {
            long userMemoryReservationInBytes = oprot.readI64();
            builder.setUserMemoryReservationInBytes(userMemoryReservationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _REVOCABLEMEMORYRESERVATIONINBYTES:
          if (__field.type == TType.I64) {
            long revocableMemoryReservationInBytes = oprot.readI64();
            builder.setRevocableMemoryReservationInBytes(revocableMemoryReservationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _SYSTEMMEMORYRESERVATIONINBYTES:
          if (__field.type == TType.I64) {
            long systemMemoryReservationInBytes = oprot.readI64();
            builder.setSystemMemoryReservationInBytes(systemMemoryReservationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PEAKUSERMEMORYINBYTES:
          if (__field.type == TType.I64) {
            long peakUserMemoryInBytes = oprot.readI64();
            builder.setPeakUserMemoryInBytes(peakUserMemoryInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PEAKTOTALMEMORYINBYTES:
          if (__field.type == TType.I64) {
            long peakTotalMemoryInBytes = oprot.readI64();
            builder.setPeakTotalMemoryInBytes(peakTotalMemoryInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PEAKNODETOTALMEMORYINBYTES:
          if (__field.type == TType.I64) {
            long peakNodeTotalMemoryInBytes = oprot.readI64();
            builder.setPeakNodeTotalMemoryInBytes(peakNodeTotalMemoryInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TOTALSCHEDULEDTIMEINNANOS:
          if (__field.type == TType.I64) {
            long totalScheduledTimeInNanos = oprot.readI64();
            builder.setTotalScheduledTimeInNanos(totalScheduledTimeInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TOTALCPUTIMEINNANOS:
          if (__field.type == TType.I64) {
            long totalCpuTimeInNanos = oprot.readI64();
            builder.setTotalCpuTimeInNanos(totalCpuTimeInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TOTALBLOCKEDTIMEINNANOS:
          if (__field.type == TType.I64) {
            long totalBlockedTimeInNanos = oprot.readI64();
            builder.setTotalBlockedTimeInNanos(totalBlockedTimeInNanos);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _FULLYBLOCKED:
          if (__field.type == TType.BOOL) {
            boolean fullyBlocked = oprot.readBool();
            builder.setFullyBlocked(fullyBlocked);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _BLOCKEDREASONS:
          if (__field.type == TType.SET) {
            Set<com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason> blockedReasons;
                {
                TSet _set = oprot.readSetBegin();
                blockedReasons = new HashSet<com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason>(Math.max(0, _set.size));
                for (int _i = 0; (_set.size < 0) ? oprot.peekSet() : (_i < _set.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason.fromInteger(oprot.readI32());
                    blockedReasons.add(_value1);
                }
                oprot.readSetEnd();
                }
            builder.setBlockedReasons(blockedReasons);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TOTALALLOCATIONINBYTES:
          if (__field.type == TType.I64) {
            long totalAllocationInBytes = oprot.readI64();
            builder.setTotalAllocationInBytes(totalAllocationInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _RAWINPUTDATASIZEINBYTES:
          if (__field.type == TType.I64) {
            long rawInputDataSizeInBytes = oprot.readI64();
            builder.setRawInputDataSizeInBytes(rawInputDataSizeInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _RAWINPUTPOSITIONS:
          if (__field.type == TType.I64) {
            long rawInputPositions = oprot.readI64();
            builder.setRawInputPositions(rawInputPositions);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PROCESSEDINPUTDATASIZEINBYTES:
          if (__field.type == TType.I64) {
            long processedInputDataSizeInBytes = oprot.readI64();
            builder.setProcessedInputDataSizeInBytes(processedInputDataSizeInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PROCESSEDINPUTPOSITIONS:
          if (__field.type == TType.I64) {
            long processedInputPositions = oprot.readI64();
            builder.setProcessedInputPositions(processedInputPositions);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _OUTPUTDATASIZEINBYTES:
          if (__field.type == TType.I64) {
            long outputDataSizeInBytes = oprot.readI64();
            builder.setOutputDataSizeInBytes(outputDataSizeInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _OUTPUTPOSITIONS:
          if (__field.type == TType.I64) {
            long outputPositions = oprot.readI64();
            builder.setOutputPositions(outputPositions);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PHYSICALWRITTENDATASIZEINBYTES:
          if (__field.type == TType.I64) {
            long physicalWrittenDataSizeInBytes = oprot.readI64();
            builder.setPhysicalWrittenDataSizeInBytes(physicalWrittenDataSizeInBytes);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PIPELINES:
          if (__field.type == TType.LIST) {
            List<com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats> pipelines;
                {
                TList _list = oprot.readListBegin();
                pipelines = new ArrayList<com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats.read0(oprot);
                    pipelines.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setPipelines(pipelines);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _QUEUEDPARTITIONEDDRIVERS:
          if (__field.type == TType.I32) {
            int queuedPartitionedDrivers = oprot.readI32();
            builder.setQueuedPartitionedDrivers(queuedPartitionedDrivers);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _QUEUEDPARTITIONEDSPLITSWEIGHT:
          if (__field.type == TType.I64) {
            long queuedPartitionedSplitsWeight = oprot.readI64();
            builder.setQueuedPartitionedSplitsWeight(queuedPartitionedSplitsWeight);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _RUNNINGPARTITIONEDDRIVERS:
          if (__field.type == TType.I32) {
            int runningPartitionedDrivers = oprot.readI32();
            builder.setRunningPartitionedDrivers(runningPartitionedDrivers);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _RUNNINGPARTITIONEDSPLITSWEIGHT:
          if (__field.type == TType.I64) {
            long runningPartitionedSplitsWeight = oprot.readI64();
            builder.setRunningPartitionedSplitsWeight(runningPartitionedSplitsWeight);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _FULLGCCOUNT:
          if (__field.type == TType.I32) {
            int fullGcCount = oprot.readI32();
            builder.setFullGcCount(fullGcCount);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _FULLGCTIMEINMILLIS:
          if (__field.type == TType.I64) {
            long fullGcTimeInMillis = oprot.readI64();
            builder.setFullGcTimeInMillis(fullGcTimeInMillis);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _RUNTIMESTATS:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats runtimeStats = com.facebook.presto.common.experimental.auto_gen.ThriftRuntimeStats.read0(oprot);
            builder.setRuntimeStats(runtimeStats);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(CREATE_TIME_IN_MILLIS_FIELD_DESC);
      oprot.writeI64(this.createTimeInMillis);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FIRST_START_TIME_IN_MILLIS_FIELD_DESC);
      oprot.writeI64(this.firstStartTimeInMillis);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_START_TIME_IN_MILLIS_FIELD_DESC);
      oprot.writeI64(this.lastStartTimeInMillis);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LAST_END_TIME_IN_MILLIS_FIELD_DESC);
      oprot.writeI64(this.lastEndTimeInMillis);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(END_TIME_IN_MILLIS_FIELD_DESC);
      oprot.writeI64(this.endTimeInMillis);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ELAPSED_TIME_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.elapsedTimeInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(QUEUED_TIME_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.queuedTimeInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_DRIVERS_FIELD_DESC);
      oprot.writeI32(this.totalDrivers);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(QUEUED_DRIVERS_FIELD_DESC);
      oprot.writeI32(this.queuedDrivers);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RUNNING_DRIVERS_FIELD_DESC);
      oprot.writeI32(this.runningDrivers);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(BLOCKED_DRIVERS_FIELD_DESC);
      oprot.writeI32(this.blockedDrivers);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COMPLETED_DRIVERS_FIELD_DESC);
      oprot.writeI32(this.completedDrivers);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CUMULATIVE_USER_MEMORY_FIELD_DESC);
      oprot.writeDouble(this.cumulativeUserMemory);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(CUMULATIVE_TOTAL_MEMORY_FIELD_DESC);
      oprot.writeDouble(this.cumulativeTotalMemory);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(USER_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.userMemoryReservationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(REVOCABLE_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.revocableMemoryReservationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(SYSTEM_MEMORY_RESERVATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.systemMemoryReservationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PEAK_USER_MEMORY_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.peakUserMemoryInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PEAK_TOTAL_MEMORY_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.peakTotalMemoryInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PEAK_NODE_TOTAL_MEMORY_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.peakNodeTotalMemoryInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_SCHEDULED_TIME_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.totalScheduledTimeInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_CPU_TIME_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.totalCpuTimeInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_BLOCKED_TIME_IN_NANOS_FIELD_DESC);
      oprot.writeI64(this.totalBlockedTimeInNanos);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FULLY_BLOCKED_FIELD_DESC);
      oprot.writeBool(this.fullyBlocked);
      oprot.writeFieldEnd();
      if (blockedReasons != null) {
        oprot.writeFieldBegin(BLOCKED_REASONS_FIELD_DESC);
        Set<com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason> _iter0 = blockedReasons;
        oprot.writeSetBegin(new TSet(TType.I32, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftBlockedReason _iter1 : _iter0) {
              oprot.writeI32(_iter1 == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(_iter1));
            }
            oprot.writeSetEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TOTAL_ALLOCATION_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.totalAllocationInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RAW_INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.rawInputDataSizeInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RAW_INPUT_POSITIONS_FIELD_DESC);
      oprot.writeI64(this.rawInputPositions);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PROCESSED_INPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.processedInputDataSizeInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PROCESSED_INPUT_POSITIONS_FIELD_DESC);
      oprot.writeI64(this.processedInputPositions);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OUTPUT_DATA_SIZE_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.outputDataSizeInBytes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(OUTPUT_POSITIONS_FIELD_DESC);
      oprot.writeI64(this.outputPositions);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PHYSICAL_WRITTEN_DATA_SIZE_IN_BYTES_FIELD_DESC);
      oprot.writeI64(this.physicalWrittenDataSizeInBytes);
      oprot.writeFieldEnd();
      if (pipelines != null) {
        oprot.writeFieldBegin(PIPELINES_FIELD_DESC);
        List<com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats> _iter0 = pipelines;
        oprot.writeListBegin(new TList(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftPipelineStats _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(QUEUED_PARTITIONED_DRIVERS_FIELD_DESC);
      oprot.writeI32(this.queuedPartitionedDrivers);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(QUEUED_PARTITIONED_SPLITS_WEIGHT_FIELD_DESC);
      oprot.writeI64(this.queuedPartitionedSplitsWeight);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RUNNING_PARTITIONED_DRIVERS_FIELD_DESC);
      oprot.writeI32(this.runningPartitionedDrivers);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(RUNNING_PARTITIONED_SPLITS_WEIGHT_FIELD_DESC);
      oprot.writeI64(this.runningPartitionedSplitsWeight);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FULL_GC_COUNT_FIELD_DESC);
      oprot.writeI32(this.fullGcCount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FULL_GC_TIME_IN_MILLIS_FIELD_DESC);
      oprot.writeI64(this.fullGcTimeInMillis);
      oprot.writeFieldEnd();
      if (runtimeStats != null) {
        oprot.writeFieldBegin(RUNTIME_STATS_FIELD_DESC);
        this.runtimeStats.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftTaskStatsLazy {
        private static final ThriftTaskStats _DEFAULT = new ThriftTaskStats.Builder().build();
    }
    
    public static ThriftTaskStats defaultInstance() {
        return  _ThriftTaskStatsLazy._DEFAULT;
    }
}
