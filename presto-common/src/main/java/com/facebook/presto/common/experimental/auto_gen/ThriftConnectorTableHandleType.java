/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import org.apache.fbthrift.TException;
import org.apache.fbthrift.protocol.TProtocol;

@SwiftGenerated
public enum ThriftConnectorTableHandleType implements com.facebook.thrift.enums.BaseEnum, com.facebook.thrift.payload.ThriftSerializable {
    BASE_HIVE_HANDLE(1),
    HIVE_HANDLE(2);

    private final int value;

    ThriftConnectorTableHandleType(int value) {
        this.value = value;
    }

    @ThriftEnumValue
    public int getValue() {
        return value;
    }

    public static ThriftConnectorTableHandleType fromInteger(int n) {
        switch (n) {
        case 1:
            return BASE_HIVE_HANDLE;
        case 2:
            return HIVE_HANDLE;
        default:
            return null;
        }
    }

    public static com.facebook.thrift.payload.Reader<ThriftConnectorTableHandleType> asReader() {
        return ThriftConnectorTableHandleType::read0;
    }

    public static ThriftConnectorTableHandleType read0(TProtocol iprot) throws TException {
        return ThriftConnectorTableHandleType.fromInteger(iprot.readI32());
    }

    public void write0(TProtocol oprot) throws TException {
        oprot.writeI32(getValue());
    }


}
