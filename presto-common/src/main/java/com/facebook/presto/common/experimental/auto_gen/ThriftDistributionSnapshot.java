/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.thrift.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftDistributionSnapshot", builder=ThriftDistributionSnapshot.Builder.class)
public final class ThriftDistributionSnapshot implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftDistributionSnapshot(
        @com.facebook.swift.codec.ThriftField(value=1, name="maxError", requiredness=Requiredness.NONE) final double maxError,
        @com.facebook.swift.codec.ThriftField(value=2, name="count", requiredness=Requiredness.NONE) final double count,
        @com.facebook.swift.codec.ThriftField(value=3, name="total", requiredness=Requiredness.NONE) final double total,
        @com.facebook.swift.codec.ThriftField(value=4, name="p01", requiredness=Requiredness.NONE) final long p01,
        @com.facebook.swift.codec.ThriftField(value=5, name="p05", requiredness=Requiredness.NONE) final long p05,
        @com.facebook.swift.codec.ThriftField(value=6, name="p10", requiredness=Requiredness.NONE) final long p10,
        @com.facebook.swift.codec.ThriftField(value=7, name="p25", requiredness=Requiredness.NONE) final long p25,
        @com.facebook.swift.codec.ThriftField(value=8, name="p50", requiredness=Requiredness.NONE) final long p50,
        @com.facebook.swift.codec.ThriftField(value=9, name="p75", requiredness=Requiredness.NONE) final long p75,
        @com.facebook.swift.codec.ThriftField(value=10, name="p90", requiredness=Requiredness.NONE) final long p90,
        @com.facebook.swift.codec.ThriftField(value=11, name="p95", requiredness=Requiredness.NONE) final long p95,
        @com.facebook.swift.codec.ThriftField(value=12, name="p99", requiredness=Requiredness.NONE) final long p99,
        @com.facebook.swift.codec.ThriftField(value=13, name="min", requiredness=Requiredness.NONE) final long min,
        @com.facebook.swift.codec.ThriftField(value=14, name="max", requiredness=Requiredness.NONE) final long max,
        @com.facebook.swift.codec.ThriftField(value=15, name="avg", requiredness=Requiredness.NONE) final double avg
    ) {
        this.maxError = maxError;
        this.count = count;
        this.total = total;
        this.p01 = p01;
        this.p05 = p05;
        this.p10 = p10;
        this.p25 = p25;
        this.p50 = p50;
        this.p75 = p75;
        this.p90 = p90;
        this.p95 = p95;
        this.p99 = p99;
        this.min = min;
        this.max = max;
        this.avg = avg;
    }
    
    @ThriftConstructor
    protected ThriftDistributionSnapshot() {
      this.maxError = 0.;
      this.count = 0.;
      this.total = 0.;
      this.p01 = 0L;
      this.p05 = 0L;
      this.p10 = 0L;
      this.p25 = 0L;
      this.p50 = 0L;
      this.p75 = 0L;
      this.p90 = 0L;
      this.p95 = 0L;
      this.p99 = 0L;
      this.min = 0L;
      this.max = 0L;
      this.avg = 0.;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftDistributionSnapshot other) {
      return new Builder(other);
    }

    public static class Builder {
        private double maxError = 0.;
        private double count = 0.;
        private double total = 0.;
        private long p01 = 0L;
        private long p05 = 0L;
        private long p10 = 0L;
        private long p25 = 0L;
        private long p50 = 0L;
        private long p75 = 0L;
        private long p90 = 0L;
        private long p95 = 0L;
        private long p99 = 0L;
        private long min = 0L;
        private long max = 0L;
        private double avg = 0.;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="maxError", requiredness=Requiredness.NONE)    public Builder setMaxError(double maxError) {
            this.maxError = maxError;
            return this;
        }
    
        public double getMaxError() { return maxError; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="count", requiredness=Requiredness.NONE)    public Builder setCount(double count) {
            this.count = count;
            return this;
        }
    
        public double getCount() { return count; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="total", requiredness=Requiredness.NONE)    public Builder setTotal(double total) {
            this.total = total;
            return this;
        }
    
        public double getTotal() { return total; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="p01", requiredness=Requiredness.NONE)    public Builder setP01(long p01) {
            this.p01 = p01;
            return this;
        }
    
        public long getP01() { return p01; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="p05", requiredness=Requiredness.NONE)    public Builder setP05(long p05) {
            this.p05 = p05;
            return this;
        }
    
        public long getP05() { return p05; }
    
            @com.facebook.swift.codec.ThriftField(value=6, name="p10", requiredness=Requiredness.NONE)    public Builder setP10(long p10) {
            this.p10 = p10;
            return this;
        }
    
        public long getP10() { return p10; }
    
            @com.facebook.swift.codec.ThriftField(value=7, name="p25", requiredness=Requiredness.NONE)    public Builder setP25(long p25) {
            this.p25 = p25;
            return this;
        }
    
        public long getP25() { return p25; }
    
            @com.facebook.swift.codec.ThriftField(value=8, name="p50", requiredness=Requiredness.NONE)    public Builder setP50(long p50) {
            this.p50 = p50;
            return this;
        }
    
        public long getP50() { return p50; }
    
            @com.facebook.swift.codec.ThriftField(value=9, name="p75", requiredness=Requiredness.NONE)    public Builder setP75(long p75) {
            this.p75 = p75;
            return this;
        }
    
        public long getP75() { return p75; }
    
            @com.facebook.swift.codec.ThriftField(value=10, name="p90", requiredness=Requiredness.NONE)    public Builder setP90(long p90) {
            this.p90 = p90;
            return this;
        }
    
        public long getP90() { return p90; }
    
            @com.facebook.swift.codec.ThriftField(value=11, name="p95", requiredness=Requiredness.NONE)    public Builder setP95(long p95) {
            this.p95 = p95;
            return this;
        }
    
        public long getP95() { return p95; }
    
            @com.facebook.swift.codec.ThriftField(value=12, name="p99", requiredness=Requiredness.NONE)    public Builder setP99(long p99) {
            this.p99 = p99;
            return this;
        }
    
        public long getP99() { return p99; }
    
            @com.facebook.swift.codec.ThriftField(value=13, name="min", requiredness=Requiredness.NONE)    public Builder setMin(long min) {
            this.min = min;
            return this;
        }
    
        public long getMin() { return min; }
    
            @com.facebook.swift.codec.ThriftField(value=14, name="max", requiredness=Requiredness.NONE)    public Builder setMax(long max) {
            this.max = max;
            return this;
        }
    
        public long getMax() { return max; }
    
            @com.facebook.swift.codec.ThriftField(value=15, name="avg", requiredness=Requiredness.NONE)    public Builder setAvg(double avg) {
            this.avg = avg;
            return this;
        }
    
        public double getAvg() { return avg; }
    
        public Builder() { }
        public Builder(ThriftDistributionSnapshot other) {
            this.maxError = other.maxError;
            this.count = other.count;
            this.total = other.total;
            this.p01 = other.p01;
            this.p05 = other.p05;
            this.p10 = other.p10;
            this.p25 = other.p25;
            this.p50 = other.p50;
            this.p75 = other.p75;
            this.p90 = other.p90;
            this.p95 = other.p95;
            this.p99 = other.p99;
            this.min = other.min;
            this.max = other.max;
            this.avg = other.avg;
        }
    
        @ThriftConstructor
        public ThriftDistributionSnapshot build() {
            ThriftDistributionSnapshot result = new ThriftDistributionSnapshot (
                this.maxError,
                this.count,
                this.total,
                this.p01,
                this.p05,
                this.p10,
                this.p25,
                this.p50,
                this.p75,
                this.p90,
                this.p95,
                this.p99,
                this.min,
                this.max,
                this.avg
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftDistributionSnapshot");
    private final double maxError;
    public static final int _MAXERROR = 1;
    private static final TField MAX_ERROR_FIELD_DESC = new TField("maxError", TType.DOUBLE, (short)1);
        private final double count;
    public static final int _COUNT = 2;
    private static final TField COUNT_FIELD_DESC = new TField("count", TType.DOUBLE, (short)2);
        private final double total;
    public static final int _TOTAL = 3;
    private static final TField TOTAL_FIELD_DESC = new TField("total", TType.DOUBLE, (short)3);
        private final long p01;
    public static final int _P01 = 4;
    private static final TField P01_FIELD_DESC = new TField("p01", TType.I64, (short)4);
        private final long p05;
    public static final int _P05 = 5;
    private static final TField P05_FIELD_DESC = new TField("p05", TType.I64, (short)5);
        private final long p10;
    public static final int _P10 = 6;
    private static final TField P10_FIELD_DESC = new TField("p10", TType.I64, (short)6);
        private final long p25;
    public static final int _P25 = 7;
    private static final TField P25_FIELD_DESC = new TField("p25", TType.I64, (short)7);
        private final long p50;
    public static final int _P50 = 8;
    private static final TField P50_FIELD_DESC = new TField("p50", TType.I64, (short)8);
        private final long p75;
    public static final int _P75 = 9;
    private static final TField P75_FIELD_DESC = new TField("p75", TType.I64, (short)9);
        private final long p90;
    public static final int _P90 = 10;
    private static final TField P90_FIELD_DESC = new TField("p90", TType.I64, (short)10);
        private final long p95;
    public static final int _P95 = 11;
    private static final TField P95_FIELD_DESC = new TField("p95", TType.I64, (short)11);
        private final long p99;
    public static final int _P99 = 12;
    private static final TField P99_FIELD_DESC = new TField("p99", TType.I64, (short)12);
        private final long min;
    public static final int _MIN = 13;
    private static final TField MIN_FIELD_DESC = new TField("min", TType.I64, (short)13);
        private final long max;
    public static final int _MAX = 14;
    private static final TField MAX_FIELD_DESC = new TField("max", TType.I64, (short)14);
        private final double avg;
    public static final int _AVG = 15;
    private static final TField AVG_FIELD_DESC = new TField("avg", TType.DOUBLE, (short)15);
    static {
      NAMES_TO_IDS.put("maxError", 1);
      THRIFT_NAMES_TO_IDS.put("maxError", 1);
      FIELD_METADATA.put(1, MAX_ERROR_FIELD_DESC);
      NAMES_TO_IDS.put("count", 2);
      THRIFT_NAMES_TO_IDS.put("count", 2);
      FIELD_METADATA.put(2, COUNT_FIELD_DESC);
      NAMES_TO_IDS.put("total", 3);
      THRIFT_NAMES_TO_IDS.put("total", 3);
      FIELD_METADATA.put(3, TOTAL_FIELD_DESC);
      NAMES_TO_IDS.put("p01", 4);
      THRIFT_NAMES_TO_IDS.put("p01", 4);
      FIELD_METADATA.put(4, P01_FIELD_DESC);
      NAMES_TO_IDS.put("p05", 5);
      THRIFT_NAMES_TO_IDS.put("p05", 5);
      FIELD_METADATA.put(5, P05_FIELD_DESC);
      NAMES_TO_IDS.put("p10", 6);
      THRIFT_NAMES_TO_IDS.put("p10", 6);
      FIELD_METADATA.put(6, P10_FIELD_DESC);
      NAMES_TO_IDS.put("p25", 7);
      THRIFT_NAMES_TO_IDS.put("p25", 7);
      FIELD_METADATA.put(7, P25_FIELD_DESC);
      NAMES_TO_IDS.put("p50", 8);
      THRIFT_NAMES_TO_IDS.put("p50", 8);
      FIELD_METADATA.put(8, P50_FIELD_DESC);
      NAMES_TO_IDS.put("p75", 9);
      THRIFT_NAMES_TO_IDS.put("p75", 9);
      FIELD_METADATA.put(9, P75_FIELD_DESC);
      NAMES_TO_IDS.put("p90", 10);
      THRIFT_NAMES_TO_IDS.put("p90", 10);
      FIELD_METADATA.put(10, P90_FIELD_DESC);
      NAMES_TO_IDS.put("p95", 11);
      THRIFT_NAMES_TO_IDS.put("p95", 11);
      FIELD_METADATA.put(11, P95_FIELD_DESC);
      NAMES_TO_IDS.put("p99", 12);
      THRIFT_NAMES_TO_IDS.put("p99", 12);
      FIELD_METADATA.put(12, P99_FIELD_DESC);
      NAMES_TO_IDS.put("min", 13);
      THRIFT_NAMES_TO_IDS.put("min", 13);
      FIELD_METADATA.put(13, MIN_FIELD_DESC);
      NAMES_TO_IDS.put("max", 14);
      THRIFT_NAMES_TO_IDS.put("max", 14);
      FIELD_METADATA.put(14, MAX_FIELD_DESC);
      NAMES_TO_IDS.put("avg", 15);
      THRIFT_NAMES_TO_IDS.put("avg", 15);
      FIELD_METADATA.put(15, AVG_FIELD_DESC);
    }
    
    
    @com.facebook.swift.codec.ThriftField(value=1, name="maxError", requiredness=Requiredness.NONE)
    public double getMaxError() { return maxError; }

    
    
    @com.facebook.swift.codec.ThriftField(value=2, name="count", requiredness=Requiredness.NONE)
    public double getCount() { return count; }

    
    
    @com.facebook.swift.codec.ThriftField(value=3, name="total", requiredness=Requiredness.NONE)
    public double getTotal() { return total; }

    
    
    @com.facebook.swift.codec.ThriftField(value=4, name="p01", requiredness=Requiredness.NONE)
    public long getP01() { return p01; }

    
    
    @com.facebook.swift.codec.ThriftField(value=5, name="p05", requiredness=Requiredness.NONE)
    public long getP05() { return p05; }

    
    
    @com.facebook.swift.codec.ThriftField(value=6, name="p10", requiredness=Requiredness.NONE)
    public long getP10() { return p10; }

    
    
    @com.facebook.swift.codec.ThriftField(value=7, name="p25", requiredness=Requiredness.NONE)
    public long getP25() { return p25; }

    
    
    @com.facebook.swift.codec.ThriftField(value=8, name="p50", requiredness=Requiredness.NONE)
    public long getP50() { return p50; }

    
    
    @com.facebook.swift.codec.ThriftField(value=9, name="p75", requiredness=Requiredness.NONE)
    public long getP75() { return p75; }

    
    
    @com.facebook.swift.codec.ThriftField(value=10, name="p90", requiredness=Requiredness.NONE)
    public long getP90() { return p90; }

    
    
    @com.facebook.swift.codec.ThriftField(value=11, name="p95", requiredness=Requiredness.NONE)
    public long getP95() { return p95; }

    
    
    @com.facebook.swift.codec.ThriftField(value=12, name="p99", requiredness=Requiredness.NONE)
    public long getP99() { return p99; }

    
    
    @com.facebook.swift.codec.ThriftField(value=13, name="min", requiredness=Requiredness.NONE)
    public long getMin() { return min; }

    
    
    @com.facebook.swift.codec.ThriftField(value=14, name="max", requiredness=Requiredness.NONE)
    public long getMax() { return max; }

    
    
    @com.facebook.swift.codec.ThriftField(value=15, name="avg", requiredness=Requiredness.NONE)
    public double getAvg() { return avg; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("maxError", maxError);
        helper.add("count", count);
        helper.add("total", total);
        helper.add("p01", p01);
        helper.add("p05", p05);
        helper.add("p10", p10);
        helper.add("p25", p25);
        helper.add("p50", p50);
        helper.add("p75", p75);
        helper.add("p90", p90);
        helper.add("p95", p95);
        helper.add("p99", p99);
        helper.add("min", min);
        helper.add("max", max);
        helper.add("avg", avg);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftDistributionSnapshot other = (ThriftDistributionSnapshot)o;
    
        return
            Objects.equals(maxError, other.maxError) &&
            Objects.equals(count, other.count) &&
            Objects.equals(total, other.total) &&
            Objects.equals(p01, other.p01) &&
            Objects.equals(p05, other.p05) &&
            Objects.equals(p10, other.p10) &&
            Objects.equals(p25, other.p25) &&
            Objects.equals(p50, other.p50) &&
            Objects.equals(p75, other.p75) &&
            Objects.equals(p90, other.p90) &&
            Objects.equals(p95, other.p95) &&
            Objects.equals(p99, other.p99) &&
            Objects.equals(min, other.min) &&
            Objects.equals(max, other.max) &&
            Objects.equals(avg, other.avg) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            maxError,
            count,
            total,
            p01,
            p05,
            p10,
            p25,
            p50,
            p75,
            p90,
            p95,
            p99,
            min,
            max,
            avg
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftDistributionSnapshot> asReader() {
      return ThriftDistributionSnapshot::read0;
    }
    
    public static ThriftDistributionSnapshot read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftDistributionSnapshot.NAMES_TO_IDS, ThriftDistributionSnapshot.THRIFT_NAMES_TO_IDS, ThriftDistributionSnapshot.FIELD_METADATA);
      ThriftDistributionSnapshot.Builder builder = new ThriftDistributionSnapshot.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _MAXERROR:
          if (__field.type == TType.DOUBLE) {
            double maxError = oprot.readDouble();
            builder.setMaxError(maxError);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _COUNT:
          if (__field.type == TType.DOUBLE) {
            double count = oprot.readDouble();
            builder.setCount(count);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TOTAL:
          if (__field.type == TType.DOUBLE) {
            double total = oprot.readDouble();
            builder.setTotal(total);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _P01:
          if (__field.type == TType.I64) {
            long p01 = oprot.readI64();
            builder.setP01(p01);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _P05:
          if (__field.type == TType.I64) {
            long p05 = oprot.readI64();
            builder.setP05(p05);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _P10:
          if (__field.type == TType.I64) {
            long p10 = oprot.readI64();
            builder.setP10(p10);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _P25:
          if (__field.type == TType.I64) {
            long p25 = oprot.readI64();
            builder.setP25(p25);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _P50:
          if (__field.type == TType.I64) {
            long p50 = oprot.readI64();
            builder.setP50(p50);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _P75:
          if (__field.type == TType.I64) {
            long p75 = oprot.readI64();
            builder.setP75(p75);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _P90:
          if (__field.type == TType.I64) {
            long p90 = oprot.readI64();
            builder.setP90(p90);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _P95:
          if (__field.type == TType.I64) {
            long p95 = oprot.readI64();
            builder.setP95(p95);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _P99:
          if (__field.type == TType.I64) {
            long p99 = oprot.readI64();
            builder.setP99(p99);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _MIN:
          if (__field.type == TType.I64) {
            long min = oprot.readI64();
            builder.setMin(min);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _MAX:
          if (__field.type == TType.I64) {
            long max = oprot.readI64();
            builder.setMax(max);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _AVG:
          if (__field.type == TType.DOUBLE) {
            double avg = oprot.readDouble();
            builder.setAvg(avg);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(MAX_ERROR_FIELD_DESC);
      oprot.writeDouble(this.maxError);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COUNT_FIELD_DESC);
      oprot.writeDouble(this.count);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TOTAL_FIELD_DESC);
      oprot.writeDouble(this.total);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(P01_FIELD_DESC);
      oprot.writeI64(this.p01);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(P05_FIELD_DESC);
      oprot.writeI64(this.p05);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(P10_FIELD_DESC);
      oprot.writeI64(this.p10);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(P25_FIELD_DESC);
      oprot.writeI64(this.p25);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(P50_FIELD_DESC);
      oprot.writeI64(this.p50);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(P75_FIELD_DESC);
      oprot.writeI64(this.p75);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(P90_FIELD_DESC);
      oprot.writeI64(this.p90);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(P95_FIELD_DESC);
      oprot.writeI64(this.p95);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(P99_FIELD_DESC);
      oprot.writeI64(this.p99);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MIN_FIELD_DESC);
      oprot.writeI64(this.min);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(MAX_FIELD_DESC);
      oprot.writeI64(this.max);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(AVG_FIELD_DESC);
      oprot.writeDouble(this.avg);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftDistributionSnapshotLazy {
        private static final ThriftDistributionSnapshot _DEFAULT = new ThriftDistributionSnapshot.Builder().build();
    }
    
    public static ThriftDistributionSnapshot defaultInstance() {
        return  _ThriftDistributionSnapshotLazy._DEFAULT;
    }
}
