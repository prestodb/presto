/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftStorageFormat", builder=ThriftStorageFormat.Builder.class)
public final class ThriftStorageFormat implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftStorageFormat(
        @com.facebook.swift.codec.ThriftField(value=1, name="serDe", requiredness=Requiredness.NONE) final String serDe,
        @com.facebook.swift.codec.ThriftField(value=2, name="inputFormat", requiredness=Requiredness.NONE) final String inputFormat,
        @com.facebook.swift.codec.ThriftField(value=3, name="outputFormat", requiredness=Requiredness.NONE) final String outputFormat
    ) {
        this.serDe = serDe;
        this.inputFormat = inputFormat;
        this.outputFormat = outputFormat;
    }
    
    @ThriftConstructor
    protected ThriftStorageFormat() {
      this.serDe = null;
      this.inputFormat = null;
      this.outputFormat = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftStorageFormat other) {
      return new Builder(other);
    }

    public static class Builder {
        private String serDe = null;
        private String inputFormat = null;
        private String outputFormat = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="serDe", requiredness=Requiredness.NONE)    public Builder setSerDe(String serDe) {
            this.serDe = serDe;
            return this;
        }
    
        public String getSerDe() { return serDe; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="inputFormat", requiredness=Requiredness.NONE)    public Builder setInputFormat(String inputFormat) {
            this.inputFormat = inputFormat;
            return this;
        }
    
        public String getInputFormat() { return inputFormat; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="outputFormat", requiredness=Requiredness.NONE)    public Builder setOutputFormat(String outputFormat) {
            this.outputFormat = outputFormat;
            return this;
        }
    
        public String getOutputFormat() { return outputFormat; }
    
        public Builder() { }
        public Builder(ThriftStorageFormat other) {
            this.serDe = other.serDe;
            this.inputFormat = other.inputFormat;
            this.outputFormat = other.outputFormat;
        }
    
        @ThriftConstructor
        public ThriftStorageFormat build() {
            ThriftStorageFormat result = new ThriftStorageFormat (
                this.serDe,
                this.inputFormat,
                this.outputFormat
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftStorageFormat");
    private final String serDe;
    public static final int _SERDE = 1;
    private static final TField SER_DE_FIELD_DESC = new TField("serDe", TType.STRING, (short)1);
        private final String inputFormat;
    public static final int _INPUTFORMAT = 2;
    private static final TField INPUT_FORMAT_FIELD_DESC = new TField("inputFormat", TType.STRING, (short)2);
        private final String outputFormat;
    public static final int _OUTPUTFORMAT = 3;
    private static final TField OUTPUT_FORMAT_FIELD_DESC = new TField("outputFormat", TType.STRING, (short)3);
    static {
      NAMES_TO_IDS.put("serDe", 1);
      THRIFT_NAMES_TO_IDS.put("serDe", 1);
      FIELD_METADATA.put(1, SER_DE_FIELD_DESC);
      NAMES_TO_IDS.put("inputFormat", 2);
      THRIFT_NAMES_TO_IDS.put("inputFormat", 2);
      FIELD_METADATA.put(2, INPUT_FORMAT_FIELD_DESC);
      NAMES_TO_IDS.put("outputFormat", 3);
      THRIFT_NAMES_TO_IDS.put("outputFormat", 3);
      FIELD_METADATA.put(3, OUTPUT_FORMAT_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="serDe", requiredness=Requiredness.NONE)
    public String getSerDe() { return serDe; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="inputFormat", requiredness=Requiredness.NONE)
    public String getInputFormat() { return inputFormat; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="outputFormat", requiredness=Requiredness.NONE)
    public String getOutputFormat() { return outputFormat; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("serDe", serDe);
        helper.add("inputFormat", inputFormat);
        helper.add("outputFormat", outputFormat);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftStorageFormat other = (ThriftStorageFormat)o;
    
        return
            Objects.equals(serDe, other.serDe) &&
            Objects.equals(inputFormat, other.inputFormat) &&
            Objects.equals(outputFormat, other.outputFormat) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            serDe,
            inputFormat,
            outputFormat
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftStorageFormat> asReader() {
      return ThriftStorageFormat::read0;
    }
    
    public static ThriftStorageFormat read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftStorageFormat.NAMES_TO_IDS, ThriftStorageFormat.THRIFT_NAMES_TO_IDS, ThriftStorageFormat.FIELD_METADATA);
      ThriftStorageFormat.Builder builder = new ThriftStorageFormat.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _SERDE:
          if (__field.type == TType.STRING) {
            String serDe = oprot.readString();
            builder.setSerDe(serDe);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _INPUTFORMAT:
          if (__field.type == TType.STRING) {
            String inputFormat = oprot.readString();
            builder.setInputFormat(inputFormat);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _OUTPUTFORMAT:
          if (__field.type == TType.STRING) {
            String outputFormat = oprot.readString();
            builder.setOutputFormat(outputFormat);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (serDe != null) {
        oprot.writeFieldBegin(SER_DE_FIELD_DESC);
        oprot.writeString(this.serDe);
        oprot.writeFieldEnd();
      }
      if (inputFormat != null) {
        oprot.writeFieldBegin(INPUT_FORMAT_FIELD_DESC);
        oprot.writeString(this.inputFormat);
        oprot.writeFieldEnd();
      }
      if (outputFormat != null) {
        oprot.writeFieldBegin(OUTPUT_FORMAT_FIELD_DESC);
        oprot.writeString(this.outputFormat);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftStorageFormatLazy {
        private static final ThriftStorageFormat _DEFAULT = new ThriftStorageFormat.Builder().build();
    }
    
    public static ThriftStorageFormat defaultInstance() {
        return  _ThriftStorageFormatLazy._DEFAULT;
    }
}
