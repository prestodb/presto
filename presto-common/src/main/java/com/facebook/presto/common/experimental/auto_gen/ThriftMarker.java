/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftMarker", builder=ThriftMarker.Builder.class)
public final class ThriftMarker implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftMarker(
        @com.facebook.swift.codec.ThriftField(value=1, name="type", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftType type,
        @com.facebook.swift.codec.ThriftField(value=2, name="valueBlock", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftBlock valueBlock,
        @com.facebook.swift.codec.ThriftField(value=3, name="bound", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftBound bound
    ) {
        this.type = type;
        this.valueBlock = valueBlock;
        this.bound = bound;
    }
    
    @ThriftConstructor
    protected ThriftMarker() {
      this.type = null;
      this.valueBlock = null;
      this.bound = com.facebook.presto.common.experimental.auto_gen.ThriftBound.fromInteger(0);
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftMarker other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftType type = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftBlock valueBlock = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftBound bound = com.facebook.presto.common.experimental.auto_gen.ThriftBound.fromInteger(0);
    
        @com.facebook.swift.codec.ThriftField(value=1, name="type", requiredness=Requiredness.NONE)    public Builder setType(com.facebook.presto.common.experimental.auto_gen.ThriftType type) {
            this.type = type;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftType getType() { return type; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="valueBlock", requiredness=Requiredness.OPTIONAL)    public Builder setValueBlock(com.facebook.presto.common.experimental.auto_gen.ThriftBlock valueBlock) {
            this.valueBlock = valueBlock;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftBlock getValueBlock() { return valueBlock; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="bound", requiredness=Requiredness.NONE)    public Builder setBound(com.facebook.presto.common.experimental.auto_gen.ThriftBound bound) {
            this.bound = bound;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftBound getBound() { return bound; }
    
        public Builder() { }
        public Builder(ThriftMarker other) {
            this.type = other.type;
            this.valueBlock = other.valueBlock;
            this.bound = other.bound;
        }
    
        @ThriftConstructor
        public ThriftMarker build() {
            ThriftMarker result = new ThriftMarker (
                this.type,
                this.valueBlock,
                this.bound
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftMarker");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftType type;
    public static final int _TYPE = 1;
    private static final TField TYPE_FIELD_DESC = new TField("type", TType.STRUCT, (short)1);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftBlock valueBlock;
    public static final int _VALUEBLOCK = 2;
    private static final TField VALUE_BLOCK_FIELD_DESC = new TField("valueBlock", TType.STRUCT, (short)2);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftBound bound;
    public static final int _BOUND = 3;
    private static final TField BOUND_FIELD_DESC = new TField("bound", TType.I32, (short)3);
    static {
      NAMES_TO_IDS.put("type", 1);
      THRIFT_NAMES_TO_IDS.put("type", 1);
      FIELD_METADATA.put(1, TYPE_FIELD_DESC);
      NAMES_TO_IDS.put("valueBlock", 2);
      THRIFT_NAMES_TO_IDS.put("valueBlock", 2);
      FIELD_METADATA.put(2, VALUE_BLOCK_FIELD_DESC);
      NAMES_TO_IDS.put("bound", 3);
      THRIFT_NAMES_TO_IDS.put("bound", 3);
      FIELD_METADATA.put(3, BOUND_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="type", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftType getType() { return type; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="valueBlock", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftBlock getValueBlock() { return valueBlock; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="bound", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftBound getBound() { return bound; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("type", type);
        helper.add("valueBlock", valueBlock);
        helper.add("bound", bound);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftMarker other = (ThriftMarker)o;
    
        return
            Objects.equals(type, other.type) &&
            Objects.equals(valueBlock, other.valueBlock) &&
            Objects.equals(bound, other.bound) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            type,
            valueBlock,
            bound
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftMarker> asReader() {
      return ThriftMarker::read0;
    }
    
    public static ThriftMarker read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftMarker.NAMES_TO_IDS, ThriftMarker.THRIFT_NAMES_TO_IDS, ThriftMarker.FIELD_METADATA);
      ThriftMarker.Builder builder = new ThriftMarker.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _TYPE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftType type = com.facebook.presto.common.experimental.auto_gen.ThriftType.read0(oprot);
            builder.setType(type);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _VALUEBLOCK:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftBlock valueBlock = com.facebook.presto.common.experimental.auto_gen.ThriftBlock.read0(oprot);
            builder.setValueBlock(valueBlock);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _BOUND:
          if (__field.type == TType.I32) {
            com.facebook.presto.common.experimental.auto_gen.ThriftBound bound = com.facebook.presto.common.experimental.auto_gen.ThriftBound.fromInteger(oprot.readI32());
            builder.setBound(bound);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (type != null) {
        oprot.writeFieldBegin(TYPE_FIELD_DESC);
        this.type.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (valueBlock != null) {
        oprot.writeFieldBegin(VALUE_BLOCK_FIELD_DESC);
        this.valueBlock.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BOUND_FIELD_DESC);
      oprot.writeI32(this.bound == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.bound));
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftMarkerLazy {
        private static final ThriftMarker _DEFAULT = new ThriftMarker.Builder().build();
    }
    
    public static ThriftMarker defaultInstance() {
        return  _ThriftMarkerLazy._DEFAULT;
    }
}
