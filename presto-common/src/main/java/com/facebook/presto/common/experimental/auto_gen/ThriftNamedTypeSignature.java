/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftNamedTypeSignature", builder=ThriftNamedTypeSignature.Builder.class)
public final class ThriftNamedTypeSignature implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftNamedTypeSignature(
        @com.facebook.swift.codec.ThriftField(value=1, name="rowFieldName", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftRowFieldName rowFieldName,
        @com.facebook.swift.codec.ThriftField(value=2, name="typeSignature", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeSignature
    ) {
        this.rowFieldName = rowFieldName;
        this.typeSignature = typeSignature;
    }
    
    @ThriftConstructor
    protected ThriftNamedTypeSignature() {
      this.rowFieldName = null;
      this.typeSignature = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftNamedTypeSignature other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftRowFieldName rowFieldName = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeSignature = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="rowFieldName", requiredness=Requiredness.OPTIONAL)    public Builder setRowFieldName(com.facebook.presto.common.experimental.auto_gen.ThriftRowFieldName rowFieldName) {
            this.rowFieldName = rowFieldName;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftRowFieldName getRowFieldName() { return rowFieldName; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="typeSignature", requiredness=Requiredness.NONE)    public Builder setTypeSignature(com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeSignature) {
            this.typeSignature = typeSignature;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature getTypeSignature() { return typeSignature; }
    
        public Builder() { }
        public Builder(ThriftNamedTypeSignature other) {
            this.rowFieldName = other.rowFieldName;
            this.typeSignature = other.typeSignature;
        }
    
        @ThriftConstructor
        public ThriftNamedTypeSignature build() {
            ThriftNamedTypeSignature result = new ThriftNamedTypeSignature (
                this.rowFieldName,
                this.typeSignature
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftNamedTypeSignature");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftRowFieldName rowFieldName;
    public static final int _ROWFIELDNAME = 1;
    private static final TField ROW_FIELD_NAME_FIELD_DESC = new TField("rowFieldName", TType.STRUCT, (short)1);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeSignature;
    public static final int _TYPESIGNATURE = 2;
    private static final TField TYPE_SIGNATURE_FIELD_DESC = new TField("typeSignature", TType.STRUCT, (short)2);
    static {
      NAMES_TO_IDS.put("rowFieldName", 1);
      THRIFT_NAMES_TO_IDS.put("rowFieldName", 1);
      FIELD_METADATA.put(1, ROW_FIELD_NAME_FIELD_DESC);
      NAMES_TO_IDS.put("typeSignature", 2);
      THRIFT_NAMES_TO_IDS.put("typeSignature", 2);
      FIELD_METADATA.put(2, TYPE_SIGNATURE_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="rowFieldName", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftRowFieldName getRowFieldName() { return rowFieldName; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="typeSignature", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature getTypeSignature() { return typeSignature; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("rowFieldName", rowFieldName);
        helper.add("typeSignature", typeSignature);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftNamedTypeSignature other = (ThriftNamedTypeSignature)o;
    
        return
            Objects.equals(rowFieldName, other.rowFieldName) &&
            Objects.equals(typeSignature, other.typeSignature) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            rowFieldName,
            typeSignature
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftNamedTypeSignature> asReader() {
      return ThriftNamedTypeSignature::read0;
    }
    
    public static ThriftNamedTypeSignature read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftNamedTypeSignature.NAMES_TO_IDS, ThriftNamedTypeSignature.THRIFT_NAMES_TO_IDS, ThriftNamedTypeSignature.FIELD_METADATA);
      ThriftNamedTypeSignature.Builder builder = new ThriftNamedTypeSignature.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _ROWFIELDNAME:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftRowFieldName rowFieldName = com.facebook.presto.common.experimental.auto_gen.ThriftRowFieldName.read0(oprot);
            builder.setRowFieldName(rowFieldName);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TYPESIGNATURE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature typeSignature = com.facebook.presto.common.experimental.auto_gen.ThriftTypeSignature.read0(oprot);
            builder.setTypeSignature(typeSignature);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (rowFieldName != null) {
        oprot.writeFieldBegin(ROW_FIELD_NAME_FIELD_DESC);
        this.rowFieldName.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (typeSignature != null) {
        oprot.writeFieldBegin(TYPE_SIGNATURE_FIELD_DESC);
        this.typeSignature.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftNamedTypeSignatureLazy {
        private static final ThriftNamedTypeSignature _DEFAULT = new ThriftNamedTypeSignature.Builder().build();
    }
    
    public static ThriftNamedTypeSignature defaultInstance() {
        return  _ThriftNamedTypeSignatureLazy._DEFAULT;
    }
}
