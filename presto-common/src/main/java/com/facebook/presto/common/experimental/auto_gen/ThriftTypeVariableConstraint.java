/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftTypeVariableConstraint", builder=ThriftTypeVariableConstraint.Builder.class)
public final class ThriftTypeVariableConstraint implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftTypeVariableConstraint(
        @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE) final String name,
        @com.facebook.swift.codec.ThriftField(value=2, name="comparableRequired", requiredness=Requiredness.NONE) final boolean comparableRequired,
        @com.facebook.swift.codec.ThriftField(value=3, name="orderableRequired", requiredness=Requiredness.NONE) final boolean orderableRequired,
        @com.facebook.swift.codec.ThriftField(value=4, name="variadicBound", requiredness=Requiredness.NONE) final String variadicBound,
        @com.facebook.swift.codec.ThriftField(value=5, name="nonDecimalNumericRequired", requiredness=Requiredness.NONE) final boolean nonDecimalNumericRequired
    ) {
        this.name = name;
        this.comparableRequired = comparableRequired;
        this.orderableRequired = orderableRequired;
        this.variadicBound = variadicBound;
        this.nonDecimalNumericRequired = nonDecimalNumericRequired;
    }
    
    @ThriftConstructor
    protected ThriftTypeVariableConstraint() {
      this.name = null;
      this.comparableRequired = false;
      this.orderableRequired = false;
      this.variadicBound = null;
      this.nonDecimalNumericRequired = false;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftTypeVariableConstraint other) {
      return new Builder(other);
    }

    public static class Builder {
        private String name = null;
        private boolean comparableRequired = false;
        private boolean orderableRequired = false;
        private String variadicBound = null;
        private boolean nonDecimalNumericRequired = false;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE)    public Builder setName(String name) {
            this.name = name;
            return this;
        }
    
        public String getName() { return name; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="comparableRequired", requiredness=Requiredness.NONE)    public Builder setComparableRequired(boolean comparableRequired) {
            this.comparableRequired = comparableRequired;
            return this;
        }
    
        public boolean isComparableRequired() { return comparableRequired; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="orderableRequired", requiredness=Requiredness.NONE)    public Builder setOrderableRequired(boolean orderableRequired) {
            this.orderableRequired = orderableRequired;
            return this;
        }
    
        public boolean isOrderableRequired() { return orderableRequired; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="variadicBound", requiredness=Requiredness.NONE)    public Builder setVariadicBound(String variadicBound) {
            this.variadicBound = variadicBound;
            return this;
        }
    
        public String getVariadicBound() { return variadicBound; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="nonDecimalNumericRequired", requiredness=Requiredness.NONE)    public Builder setNonDecimalNumericRequired(boolean nonDecimalNumericRequired) {
            this.nonDecimalNumericRequired = nonDecimalNumericRequired;
            return this;
        }
    
        public boolean isNonDecimalNumericRequired() { return nonDecimalNumericRequired; }
    
        public Builder() { }
        public Builder(ThriftTypeVariableConstraint other) {
            this.name = other.name;
            this.comparableRequired = other.comparableRequired;
            this.orderableRequired = other.orderableRequired;
            this.variadicBound = other.variadicBound;
            this.nonDecimalNumericRequired = other.nonDecimalNumericRequired;
        }
    
        @ThriftConstructor
        public ThriftTypeVariableConstraint build() {
            ThriftTypeVariableConstraint result = new ThriftTypeVariableConstraint (
                this.name,
                this.comparableRequired,
                this.orderableRequired,
                this.variadicBound,
                this.nonDecimalNumericRequired
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftTypeVariableConstraint");
    private final String name;
    public static final int _NAME = 1;
    private static final TField NAME_FIELD_DESC = new TField("name", TType.STRING, (short)1);
        private final boolean comparableRequired;
    public static final int _COMPARABLEREQUIRED = 2;
    private static final TField COMPARABLE_REQUIRED_FIELD_DESC = new TField("comparableRequired", TType.BOOL, (short)2);
        private final boolean orderableRequired;
    public static final int _ORDERABLEREQUIRED = 3;
    private static final TField ORDERABLE_REQUIRED_FIELD_DESC = new TField("orderableRequired", TType.BOOL, (short)3);
        private final String variadicBound;
    public static final int _VARIADICBOUND = 4;
    private static final TField VARIADIC_BOUND_FIELD_DESC = new TField("variadicBound", TType.STRING, (short)4);
        private final boolean nonDecimalNumericRequired;
    public static final int _NONDECIMALNUMERICREQUIRED = 5;
    private static final TField NON_DECIMAL_NUMERIC_REQUIRED_FIELD_DESC = new TField("nonDecimalNumericRequired", TType.BOOL, (short)5);
    static {
      NAMES_TO_IDS.put("name", 1);
      THRIFT_NAMES_TO_IDS.put("name", 1);
      FIELD_METADATA.put(1, NAME_FIELD_DESC);
      NAMES_TO_IDS.put("comparableRequired", 2);
      THRIFT_NAMES_TO_IDS.put("comparableRequired", 2);
      FIELD_METADATA.put(2, COMPARABLE_REQUIRED_FIELD_DESC);
      NAMES_TO_IDS.put("orderableRequired", 3);
      THRIFT_NAMES_TO_IDS.put("orderableRequired", 3);
      FIELD_METADATA.put(3, ORDERABLE_REQUIRED_FIELD_DESC);
      NAMES_TO_IDS.put("variadicBound", 4);
      THRIFT_NAMES_TO_IDS.put("variadicBound", 4);
      FIELD_METADATA.put(4, VARIADIC_BOUND_FIELD_DESC);
      NAMES_TO_IDS.put("nonDecimalNumericRequired", 5);
      THRIFT_NAMES_TO_IDS.put("nonDecimalNumericRequired", 5);
      FIELD_METADATA.put(5, NON_DECIMAL_NUMERIC_REQUIRED_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE)
    public String getName() { return name; }

    
    
    @com.facebook.swift.codec.ThriftField(value=2, name="comparableRequired", requiredness=Requiredness.NONE)
    public boolean isComparableRequired() { return comparableRequired; }

    
    
    @com.facebook.swift.codec.ThriftField(value=3, name="orderableRequired", requiredness=Requiredness.NONE)
    public boolean isOrderableRequired() { return orderableRequired; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="variadicBound", requiredness=Requiredness.NONE)
    public String getVariadicBound() { return variadicBound; }

    
    
    @com.facebook.swift.codec.ThriftField(value=5, name="nonDecimalNumericRequired", requiredness=Requiredness.NONE)
    public boolean isNonDecimalNumericRequired() { return nonDecimalNumericRequired; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("name", name);
        helper.add("comparableRequired", comparableRequired);
        helper.add("orderableRequired", orderableRequired);
        helper.add("variadicBound", variadicBound);
        helper.add("nonDecimalNumericRequired", nonDecimalNumericRequired);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftTypeVariableConstraint other = (ThriftTypeVariableConstraint)o;
    
        return
            Objects.equals(name, other.name) &&
            Objects.equals(comparableRequired, other.comparableRequired) &&
            Objects.equals(orderableRequired, other.orderableRequired) &&
            Objects.equals(variadicBound, other.variadicBound) &&
            Objects.equals(nonDecimalNumericRequired, other.nonDecimalNumericRequired) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            name,
            comparableRequired,
            orderableRequired,
            variadicBound,
            nonDecimalNumericRequired
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftTypeVariableConstraint> asReader() {
      return ThriftTypeVariableConstraint::read0;
    }
    
    public static ThriftTypeVariableConstraint read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftTypeVariableConstraint.NAMES_TO_IDS, ThriftTypeVariableConstraint.THRIFT_NAMES_TO_IDS, ThriftTypeVariableConstraint.FIELD_METADATA);
      ThriftTypeVariableConstraint.Builder builder = new ThriftTypeVariableConstraint.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _NAME:
          if (__field.type == TType.STRING) {
            String name = oprot.readString();
            builder.setName(name);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _COMPARABLEREQUIRED:
          if (__field.type == TType.BOOL) {
            boolean comparableRequired = oprot.readBool();
            builder.setComparableRequired(comparableRequired);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ORDERABLEREQUIRED:
          if (__field.type == TType.BOOL) {
            boolean orderableRequired = oprot.readBool();
            builder.setOrderableRequired(orderableRequired);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _VARIADICBOUND:
          if (__field.type == TType.STRING) {
            String variadicBound = oprot.readString();
            builder.setVariadicBound(variadicBound);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _NONDECIMALNUMERICREQUIRED:
          if (__field.type == TType.BOOL) {
            boolean nonDecimalNumericRequired = oprot.readBool();
            builder.setNonDecimalNumericRequired(nonDecimalNumericRequired);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(this.name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(COMPARABLE_REQUIRED_FIELD_DESC);
      oprot.writeBool(this.comparableRequired);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ORDERABLE_REQUIRED_FIELD_DESC);
      oprot.writeBool(this.orderableRequired);
      oprot.writeFieldEnd();
      if (variadicBound != null) {
        oprot.writeFieldBegin(VARIADIC_BOUND_FIELD_DESC);
        oprot.writeString(this.variadicBound);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NON_DECIMAL_NUMERIC_REQUIRED_FIELD_DESC);
      oprot.writeBool(this.nonDecimalNumericRequired);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftTypeVariableConstraintLazy {
        private static final ThriftTypeVariableConstraint _DEFAULT = new ThriftTypeVariableConstraint.Builder().build();
    }
    
    public static ThriftTypeVariableConstraint defaultInstance() {
        return  _ThriftTypeVariableConstraintLazy._DEFAULT;
    }
}
