/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftNativeFunctionHandle", builder=ThriftNativeFunctionHandle.Builder.class)
public final class ThriftNativeFunctionHandle implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftNativeFunctionHandle(
        @com.facebook.swift.codec.ThriftField(value=1, name="base", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftSqlFunctionHandle base,
        @com.facebook.swift.codec.ThriftField(value=2, name="signature", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftSignature signature
    ) {
        this.base = base;
        this.signature = signature;
    }
    
    @ThriftConstructor
    protected ThriftNativeFunctionHandle() {
      this.base = null;
      this.signature = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftNativeFunctionHandle other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftSqlFunctionHandle base = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftSignature signature = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="base", requiredness=Requiredness.NONE)    public Builder setBase(com.facebook.presto.common.experimental.auto_gen.ThriftSqlFunctionHandle base) {
            this.base = base;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftSqlFunctionHandle getBase() { return base; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="signature", requiredness=Requiredness.NONE)    public Builder setSignature(com.facebook.presto.common.experimental.auto_gen.ThriftSignature signature) {
            this.signature = signature;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftSignature getSignature() { return signature; }
    
        public Builder() { }
        public Builder(ThriftNativeFunctionHandle other) {
            this.base = other.base;
            this.signature = other.signature;
        }
    
        @ThriftConstructor
        public ThriftNativeFunctionHandle build() {
            ThriftNativeFunctionHandle result = new ThriftNativeFunctionHandle (
                this.base,
                this.signature
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftNativeFunctionHandle");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftSqlFunctionHandle base;
    public static final int _BASE = 1;
    private static final TField BASE_FIELD_DESC = new TField("base", TType.STRUCT, (short)1);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftSignature signature;
    public static final int _SIGNATURE = 2;
    private static final TField SIGNATURE_FIELD_DESC = new TField("signature", TType.STRUCT, (short)2);
    static {
      NAMES_TO_IDS.put("base", 1);
      THRIFT_NAMES_TO_IDS.put("base", 1);
      FIELD_METADATA.put(1, BASE_FIELD_DESC);
      NAMES_TO_IDS.put("signature", 2);
      THRIFT_NAMES_TO_IDS.put("signature", 2);
      FIELD_METADATA.put(2, SIGNATURE_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="base", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftSqlFunctionHandle getBase() { return base; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="signature", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftSignature getSignature() { return signature; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("base", base);
        helper.add("signature", signature);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftNativeFunctionHandle other = (ThriftNativeFunctionHandle)o;
    
        return
            Objects.equals(base, other.base) &&
            Objects.equals(signature, other.signature) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            base,
            signature
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftNativeFunctionHandle> asReader() {
      return ThriftNativeFunctionHandle::read0;
    }
    
    public static ThriftNativeFunctionHandle read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftNativeFunctionHandle.NAMES_TO_IDS, ThriftNativeFunctionHandle.THRIFT_NAMES_TO_IDS, ThriftNativeFunctionHandle.FIELD_METADATA);
      ThriftNativeFunctionHandle.Builder builder = new ThriftNativeFunctionHandle.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _BASE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftSqlFunctionHandle base = com.facebook.presto.common.experimental.auto_gen.ThriftSqlFunctionHandle.read0(oprot);
            builder.setBase(base);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _SIGNATURE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftSignature signature = com.facebook.presto.common.experimental.auto_gen.ThriftSignature.read0(oprot);
            builder.setSignature(signature);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (base != null) {
        oprot.writeFieldBegin(BASE_FIELD_DESC);
        this.base.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (signature != null) {
        oprot.writeFieldBegin(SIGNATURE_FIELD_DESC);
        this.signature.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftNativeFunctionHandleLazy {
        private static final ThriftNativeFunctionHandle _DEFAULT = new ThriftNativeFunctionHandle.Builder().build();
    }
    
    public static ThriftNativeFunctionHandle defaultInstance() {
        return  _ThriftNativeFunctionHandleLazy._DEFAULT;
    }
}
