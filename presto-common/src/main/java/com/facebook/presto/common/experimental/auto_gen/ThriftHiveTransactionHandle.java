/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftHiveTransactionHandle", builder=ThriftHiveTransactionHandle.Builder.class)
public final class ThriftHiveTransactionHandle implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftHiveTransactionHandle(
        @com.facebook.swift.codec.ThriftField(value=1, name="taskInstanceIdLeastSignificantBits", requiredness=Requiredness.NONE) final long taskInstanceIdLeastSignificantBits,
        @com.facebook.swift.codec.ThriftField(value=2, name="taskInstanceIdMostSignificantBits", requiredness=Requiredness.NONE) final long taskInstanceIdMostSignificantBits
    ) {
        this.taskInstanceIdLeastSignificantBits = taskInstanceIdLeastSignificantBits;
        this.taskInstanceIdMostSignificantBits = taskInstanceIdMostSignificantBits;
    }
    
    @ThriftConstructor
    protected ThriftHiveTransactionHandle() {
      this.taskInstanceIdLeastSignificantBits = 0L;
      this.taskInstanceIdMostSignificantBits = 0L;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftHiveTransactionHandle other) {
      return new Builder(other);
    }

    public static class Builder {
        private long taskInstanceIdLeastSignificantBits = 0L;
        private long taskInstanceIdMostSignificantBits = 0L;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="taskInstanceIdLeastSignificantBits", requiredness=Requiredness.NONE)    public Builder setTaskInstanceIdLeastSignificantBits(long taskInstanceIdLeastSignificantBits) {
            this.taskInstanceIdLeastSignificantBits = taskInstanceIdLeastSignificantBits;
            return this;
        }
    
        public long getTaskInstanceIdLeastSignificantBits() { return taskInstanceIdLeastSignificantBits; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="taskInstanceIdMostSignificantBits", requiredness=Requiredness.NONE)    public Builder setTaskInstanceIdMostSignificantBits(long taskInstanceIdMostSignificantBits) {
            this.taskInstanceIdMostSignificantBits = taskInstanceIdMostSignificantBits;
            return this;
        }
    
        public long getTaskInstanceIdMostSignificantBits() { return taskInstanceIdMostSignificantBits; }
    
        public Builder() { }
        public Builder(ThriftHiveTransactionHandle other) {
            this.taskInstanceIdLeastSignificantBits = other.taskInstanceIdLeastSignificantBits;
            this.taskInstanceIdMostSignificantBits = other.taskInstanceIdMostSignificantBits;
        }
    
        @ThriftConstructor
        public ThriftHiveTransactionHandle build() {
            ThriftHiveTransactionHandle result = new ThriftHiveTransactionHandle (
                this.taskInstanceIdLeastSignificantBits,
                this.taskInstanceIdMostSignificantBits
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftHiveTransactionHandle");
    private final long taskInstanceIdLeastSignificantBits;
    public static final int _TASKINSTANCEIDLEASTSIGNIFICANTBITS = 1;
    private static final TField TASK_INSTANCE_ID_LEAST_SIGNIFICANT_BITS_FIELD_DESC = new TField("taskInstanceIdLeastSignificantBits", TType.I64, (short)1);
        private final long taskInstanceIdMostSignificantBits;
    public static final int _TASKINSTANCEIDMOSTSIGNIFICANTBITS = 2;
    private static final TField TASK_INSTANCE_ID_MOST_SIGNIFICANT_BITS_FIELD_DESC = new TField("taskInstanceIdMostSignificantBits", TType.I64, (short)2);
    static {
      NAMES_TO_IDS.put("taskInstanceIdLeastSignificantBits", 1);
      THRIFT_NAMES_TO_IDS.put("taskInstanceIdLeastSignificantBits", 1);
      FIELD_METADATA.put(1, TASK_INSTANCE_ID_LEAST_SIGNIFICANT_BITS_FIELD_DESC);
      NAMES_TO_IDS.put("taskInstanceIdMostSignificantBits", 2);
      THRIFT_NAMES_TO_IDS.put("taskInstanceIdMostSignificantBits", 2);
      FIELD_METADATA.put(2, TASK_INSTANCE_ID_MOST_SIGNIFICANT_BITS_FIELD_DESC);
    }
    
    
    @com.facebook.swift.codec.ThriftField(value=1, name="taskInstanceIdLeastSignificantBits", requiredness=Requiredness.NONE)
    public long getTaskInstanceIdLeastSignificantBits() { return taskInstanceIdLeastSignificantBits; }

    
    
    @com.facebook.swift.codec.ThriftField(value=2, name="taskInstanceIdMostSignificantBits", requiredness=Requiredness.NONE)
    public long getTaskInstanceIdMostSignificantBits() { return taskInstanceIdMostSignificantBits; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("taskInstanceIdLeastSignificantBits", taskInstanceIdLeastSignificantBits);
        helper.add("taskInstanceIdMostSignificantBits", taskInstanceIdMostSignificantBits);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftHiveTransactionHandle other = (ThriftHiveTransactionHandle)o;
    
        return
            Objects.equals(taskInstanceIdLeastSignificantBits, other.taskInstanceIdLeastSignificantBits) &&
            Objects.equals(taskInstanceIdMostSignificantBits, other.taskInstanceIdMostSignificantBits) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            taskInstanceIdLeastSignificantBits,
            taskInstanceIdMostSignificantBits
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftHiveTransactionHandle> asReader() {
      return ThriftHiveTransactionHandle::read0;
    }
    
    public static ThriftHiveTransactionHandle read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftHiveTransactionHandle.NAMES_TO_IDS, ThriftHiveTransactionHandle.THRIFT_NAMES_TO_IDS, ThriftHiveTransactionHandle.FIELD_METADATA);
      ThriftHiveTransactionHandle.Builder builder = new ThriftHiveTransactionHandle.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _TASKINSTANCEIDLEASTSIGNIFICANTBITS:
          if (__field.type == TType.I64) {
            long taskInstanceIdLeastSignificantBits = oprot.readI64();
            builder.setTaskInstanceIdLeastSignificantBits(taskInstanceIdLeastSignificantBits);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TASKINSTANCEIDMOSTSIGNIFICANTBITS:
          if (__field.type == TType.I64) {
            long taskInstanceIdMostSignificantBits = oprot.readI64();
            builder.setTaskInstanceIdMostSignificantBits(taskInstanceIdMostSignificantBits);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      oprot.writeFieldBegin(TASK_INSTANCE_ID_LEAST_SIGNIFICANT_BITS_FIELD_DESC);
      oprot.writeI64(this.taskInstanceIdLeastSignificantBits);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(TASK_INSTANCE_ID_MOST_SIGNIFICANT_BITS_FIELD_DESC);
      oprot.writeI64(this.taskInstanceIdMostSignificantBits);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftHiveTransactionHandleLazy {
        private static final ThriftHiveTransactionHandle _DEFAULT = new ThriftHiveTransactionHandle.Builder().build();
    }
    
    public static ThriftHiveTransactionHandle defaultInstance() {
        return  _ThriftHiveTransactionHandleLazy._DEFAULT;
    }
}
