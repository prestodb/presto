/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftHiveBucketProperty", builder=ThriftHiveBucketProperty.Builder.class)
public final class ThriftHiveBucketProperty implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftHiveBucketProperty(
        @com.facebook.swift.codec.ThriftField(value=1, name="bucketedBy", requiredness=Requiredness.NONE) final List<String> bucketedBy,
        @com.facebook.swift.codec.ThriftField(value=2, name="bucketCount", requiredness=Requiredness.NONE) final int bucketCount,
        @com.facebook.swift.codec.ThriftField(value=3, name="sortedBy", requiredness=Requiredness.NONE) final List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> sortedBy,
        @com.facebook.swift.codec.ThriftField(value=4, name="bucketFunctionType", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftBucketFunctionType bucketFunctionType,
        @com.facebook.swift.codec.ThriftField(value=5, name="types", requiredness=Requiredness.OPTIONAL) final List<com.facebook.presto.common.experimental.auto_gen.ThriftType> types
    ) {
        this.bucketedBy = bucketedBy;
        this.bucketCount = bucketCount;
        this.sortedBy = sortedBy;
        this.bucketFunctionType = bucketFunctionType;
        this.types = types;
    }
    
    @ThriftConstructor
    protected ThriftHiveBucketProperty() {
      this.bucketedBy = null;
      this.bucketCount = 0;
      this.sortedBy = null;
      this.bucketFunctionType = com.facebook.presto.common.experimental.auto_gen.ThriftBucketFunctionType.fromInteger(0);
      this.types = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftHiveBucketProperty other) {
      return new Builder(other);
    }

    public static class Builder {
        private List<String> bucketedBy = null;
        private int bucketCount = 0;
        private List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> sortedBy = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftBucketFunctionType bucketFunctionType = com.facebook.presto.common.experimental.auto_gen.ThriftBucketFunctionType.fromInteger(0);
        private List<com.facebook.presto.common.experimental.auto_gen.ThriftType> types = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="bucketedBy", requiredness=Requiredness.NONE)    public Builder setBucketedBy(List<String> bucketedBy) {
            this.bucketedBy = bucketedBy;
            return this;
        }
    
        public List<String> getBucketedBy() { return bucketedBy; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="bucketCount", requiredness=Requiredness.NONE)    public Builder setBucketCount(int bucketCount) {
            this.bucketCount = bucketCount;
            return this;
        }
    
        public int getBucketCount() { return bucketCount; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="sortedBy", requiredness=Requiredness.NONE)    public Builder setSortedBy(List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> sortedBy) {
            this.sortedBy = sortedBy;
            return this;
        }
    
        public List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> getSortedBy() { return sortedBy; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="bucketFunctionType", requiredness=Requiredness.NONE)    public Builder setBucketFunctionType(com.facebook.presto.common.experimental.auto_gen.ThriftBucketFunctionType bucketFunctionType) {
            this.bucketFunctionType = bucketFunctionType;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftBucketFunctionType getBucketFunctionType() { return bucketFunctionType; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="types", requiredness=Requiredness.OPTIONAL)    public Builder setTypes(List<com.facebook.presto.common.experimental.auto_gen.ThriftType> types) {
            this.types = types;
            return this;
        }
    
        public List<com.facebook.presto.common.experimental.auto_gen.ThriftType> getTypes() { return types; }
    
        public Builder() { }
        public Builder(ThriftHiveBucketProperty other) {
            this.bucketedBy = other.bucketedBy;
            this.bucketCount = other.bucketCount;
            this.sortedBy = other.sortedBy;
            this.bucketFunctionType = other.bucketFunctionType;
            this.types = other.types;
        }
    
        @ThriftConstructor
        public ThriftHiveBucketProperty build() {
            ThriftHiveBucketProperty result = new ThriftHiveBucketProperty (
                this.bucketedBy,
                this.bucketCount,
                this.sortedBy,
                this.bucketFunctionType,
                this.types
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftHiveBucketProperty");
    private final List<String> bucketedBy;
    public static final int _BUCKETEDBY = 1;
    private static final TField BUCKETED_BY_FIELD_DESC = new TField("bucketedBy", TType.LIST, (short)1);
        private final int bucketCount;
    public static final int _BUCKETCOUNT = 2;
    private static final TField BUCKET_COUNT_FIELD_DESC = new TField("bucketCount", TType.I32, (short)2);
        private final List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> sortedBy;
    public static final int _SORTEDBY = 3;
    private static final TField SORTED_BY_FIELD_DESC = new TField("sortedBy", TType.LIST, (short)3);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftBucketFunctionType bucketFunctionType;
    public static final int _BUCKETFUNCTIONTYPE = 4;
    private static final TField BUCKET_FUNCTION_TYPE_FIELD_DESC = new TField("bucketFunctionType", TType.I32, (short)4);
        private final List<com.facebook.presto.common.experimental.auto_gen.ThriftType> types;
    public static final int _TYPES = 5;
    private static final TField TYPES_FIELD_DESC = new TField("types", TType.LIST, (short)5);
    static {
      NAMES_TO_IDS.put("bucketedBy", 1);
      THRIFT_NAMES_TO_IDS.put("bucketedBy", 1);
      FIELD_METADATA.put(1, BUCKETED_BY_FIELD_DESC);
      NAMES_TO_IDS.put("bucketCount", 2);
      THRIFT_NAMES_TO_IDS.put("bucketCount", 2);
      FIELD_METADATA.put(2, BUCKET_COUNT_FIELD_DESC);
      NAMES_TO_IDS.put("sortedBy", 3);
      THRIFT_NAMES_TO_IDS.put("sortedBy", 3);
      FIELD_METADATA.put(3, SORTED_BY_FIELD_DESC);
      NAMES_TO_IDS.put("bucketFunctionType", 4);
      THRIFT_NAMES_TO_IDS.put("bucketFunctionType", 4);
      FIELD_METADATA.put(4, BUCKET_FUNCTION_TYPE_FIELD_DESC);
      NAMES_TO_IDS.put("types", 5);
      THRIFT_NAMES_TO_IDS.put("types", 5);
      FIELD_METADATA.put(5, TYPES_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="bucketedBy", requiredness=Requiredness.NONE)
    public List<String> getBucketedBy() { return bucketedBy; }

    
    
    @com.facebook.swift.codec.ThriftField(value=2, name="bucketCount", requiredness=Requiredness.NONE)
    public int getBucketCount() { return bucketCount; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="sortedBy", requiredness=Requiredness.NONE)
    public List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> getSortedBy() { return sortedBy; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="bucketFunctionType", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftBucketFunctionType getBucketFunctionType() { return bucketFunctionType; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=5, name="types", requiredness=Requiredness.OPTIONAL)
    public List<com.facebook.presto.common.experimental.auto_gen.ThriftType> getTypes() { return types; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("bucketedBy", bucketedBy);
        helper.add("bucketCount", bucketCount);
        helper.add("sortedBy", sortedBy);
        helper.add("bucketFunctionType", bucketFunctionType);
        helper.add("types", types);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftHiveBucketProperty other = (ThriftHiveBucketProperty)o;
    
        return
            Objects.equals(bucketedBy, other.bucketedBy) &&
            Objects.equals(bucketCount, other.bucketCount) &&
            Objects.equals(sortedBy, other.sortedBy) &&
            Objects.equals(bucketFunctionType, other.bucketFunctionType) &&
            Objects.equals(types, other.types) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            bucketedBy,
            bucketCount,
            sortedBy,
            bucketFunctionType,
            types
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftHiveBucketProperty> asReader() {
      return ThriftHiveBucketProperty::read0;
    }
    
    public static ThriftHiveBucketProperty read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftHiveBucketProperty.NAMES_TO_IDS, ThriftHiveBucketProperty.THRIFT_NAMES_TO_IDS, ThriftHiveBucketProperty.FIELD_METADATA);
      ThriftHiveBucketProperty.Builder builder = new ThriftHiveBucketProperty.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _BUCKETEDBY:
          if (__field.type == TType.LIST) {
            List<String> bucketedBy;
                {
                TList _list = oprot.readListBegin();
                bucketedBy = new ArrayList<String>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    String _value1 = oprot.readString();
                    bucketedBy.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setBucketedBy(bucketedBy);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _BUCKETCOUNT:
          if (__field.type == TType.I32) {
            int bucketCount = oprot.readI32();
            builder.setBucketCount(bucketCount);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _SORTEDBY:
          if (__field.type == TType.LIST) {
            List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> sortedBy;
                {
                TList _list = oprot.readListBegin();
                sortedBy = new ArrayList<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn.read0(oprot);
                    sortedBy.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setSortedBy(sortedBy);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _BUCKETFUNCTIONTYPE:
          if (__field.type == TType.I32) {
            com.facebook.presto.common.experimental.auto_gen.ThriftBucketFunctionType bucketFunctionType = com.facebook.presto.common.experimental.auto_gen.ThriftBucketFunctionType.fromInteger(oprot.readI32());
            builder.setBucketFunctionType(bucketFunctionType);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TYPES:
          if (__field.type == TType.LIST) {
            List<com.facebook.presto.common.experimental.auto_gen.ThriftType> types;
                {
                TList _list = oprot.readListBegin();
                types = new ArrayList<com.facebook.presto.common.experimental.auto_gen.ThriftType>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftType _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftType.read0(oprot);
                    types.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setTypes(types);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (bucketedBy != null) {
        oprot.writeFieldBegin(BUCKETED_BY_FIELD_DESC);
        List<String> _iter0 = bucketedBy;
        oprot.writeListBegin(new TList(TType.STRING, _iter0.size()));
            for (String _iter1 : _iter0) {
              oprot.writeString(_iter1);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BUCKET_COUNT_FIELD_DESC);
      oprot.writeI32(this.bucketCount);
      oprot.writeFieldEnd();
      if (sortedBy != null) {
        oprot.writeFieldBegin(SORTED_BY_FIELD_DESC);
        List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> _iter0 = sortedBy;
        oprot.writeListBegin(new TList(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(BUCKET_FUNCTION_TYPE_FIELD_DESC);
      oprot.writeI32(this.bucketFunctionType == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.bucketFunctionType));
      oprot.writeFieldEnd();
      if (types != null) {
        oprot.writeFieldBegin(TYPES_FIELD_DESC);
        List<com.facebook.presto.common.experimental.auto_gen.ThriftType>  _iter0 = types;
        oprot.writeListBegin(new TList(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftType _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftHiveBucketPropertyLazy {
        private static final ThriftHiveBucketProperty _DEFAULT = new ThriftHiveBucketProperty.Builder().build();
    }
    
    public static ThriftHiveBucketProperty defaultInstance() {
        return  _ThriftHiveBucketPropertyLazy._DEFAULT;
    }
}
