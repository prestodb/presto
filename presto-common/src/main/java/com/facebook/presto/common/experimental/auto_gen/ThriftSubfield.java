/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftSubfield", builder=ThriftSubfield.Builder.class)
public final class ThriftSubfield implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftSubfield(
        @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE) final String name,
        @com.facebook.swift.codec.ThriftField(value=2, name="path", requiredness=Requiredness.NONE) final List<com.facebook.presto.common.experimental.auto_gen.ThriftPathElement> path
    ) {
        this.name = name;
        this.path = path;
    }
    
    @ThriftConstructor
    protected ThriftSubfield() {
      this.name = null;
      this.path = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftSubfield other) {
      return new Builder(other);
    }

    public static class Builder {
        private String name = null;
        private List<com.facebook.presto.common.experimental.auto_gen.ThriftPathElement> path = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE)    public Builder setName(String name) {
            this.name = name;
            return this;
        }
    
        public String getName() { return name; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="path", requiredness=Requiredness.NONE)    public Builder setPath(List<com.facebook.presto.common.experimental.auto_gen.ThriftPathElement> path) {
            this.path = path;
            return this;
        }
    
        public List<com.facebook.presto.common.experimental.auto_gen.ThriftPathElement> getPath() { return path; }
    
        public Builder() { }
        public Builder(ThriftSubfield other) {
            this.name = other.name;
            this.path = other.path;
        }
    
        @ThriftConstructor
        public ThriftSubfield build() {
            ThriftSubfield result = new ThriftSubfield (
                this.name,
                this.path
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftSubfield");
    private final String name;
    public static final int _NAME = 1;
    private static final TField NAME_FIELD_DESC = new TField("name", TType.STRING, (short)1);
        private final List<com.facebook.presto.common.experimental.auto_gen.ThriftPathElement> path;
    public static final int _PATH = 2;
    private static final TField PATH_FIELD_DESC = new TField("path", TType.LIST, (short)2);
    static {
      NAMES_TO_IDS.put("name", 1);
      THRIFT_NAMES_TO_IDS.put("name", 1);
      FIELD_METADATA.put(1, NAME_FIELD_DESC);
      NAMES_TO_IDS.put("path", 2);
      THRIFT_NAMES_TO_IDS.put("path", 2);
      FIELD_METADATA.put(2, PATH_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="name", requiredness=Requiredness.NONE)
    public String getName() { return name; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="path", requiredness=Requiredness.NONE)
    public List<com.facebook.presto.common.experimental.auto_gen.ThriftPathElement> getPath() { return path; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("name", name);
        helper.add("path", path);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftSubfield other = (ThriftSubfield)o;
    
        return
            Objects.equals(name, other.name) &&
            Objects.equals(path, other.path) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            name,
            path
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftSubfield> asReader() {
      return ThriftSubfield::read0;
    }
    
    public static ThriftSubfield read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftSubfield.NAMES_TO_IDS, ThriftSubfield.THRIFT_NAMES_TO_IDS, ThriftSubfield.FIELD_METADATA);
      ThriftSubfield.Builder builder = new ThriftSubfield.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _NAME:
          if (__field.type == TType.STRING) {
            String name = oprot.readString();
            builder.setName(name);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PATH:
          if (__field.type == TType.LIST) {
            List<com.facebook.presto.common.experimental.auto_gen.ThriftPathElement> path;
                {
                TList _list = oprot.readListBegin();
                path = new ArrayList<com.facebook.presto.common.experimental.auto_gen.ThriftPathElement>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftPathElement _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftPathElement.read0(oprot);
                    path.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setPath(path);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(this.name);
        oprot.writeFieldEnd();
      }
      if (path != null) {
        oprot.writeFieldBegin(PATH_FIELD_DESC);
        List<com.facebook.presto.common.experimental.auto_gen.ThriftPathElement> _iter0 = path;
        oprot.writeListBegin(new TList(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftPathElement _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftSubfieldLazy {
        private static final ThriftSubfield _DEFAULT = new ThriftSubfield.Builder().build();
    }
    
    public static ThriftSubfield defaultInstance() {
        return  _ThriftSubfieldLazy._DEFAULT;
    }
}
