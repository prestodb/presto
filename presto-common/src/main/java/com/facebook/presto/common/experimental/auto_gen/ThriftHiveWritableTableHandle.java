/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftHiveWritableTableHandle", builder=ThriftHiveWritableTableHandle.Builder.class)
public final class ThriftHiveWritableTableHandle implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftHiveWritableTableHandle(
        @com.facebook.swift.codec.ThriftField(value=1, name="schemaName", requiredness=Requiredness.NONE) final String schemaName,
        @com.facebook.swift.codec.ThriftField(value=2, name="tableName", requiredness=Requiredness.NONE) final String tableName,
        @com.facebook.swift.codec.ThriftField(value=3, name="inputColumns", requiredness=Requiredness.NONE) final List<com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle> inputColumns,
        @com.facebook.swift.codec.ThriftField(value=4, name="pageSinkMetadata", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftHivePageSinkMetadata pageSinkMetadata,
        @com.facebook.swift.codec.ThriftField(value=5, name="locationHandle", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftLocationHandle locationHandle,
        @com.facebook.swift.codec.ThriftField(value=6, name="bucketProperty", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftHiveBucketProperty bucketProperty,
        @com.facebook.swift.codec.ThriftField(value=7, name="preferredOrderingColumns", requiredness=Requiredness.NONE) final List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> preferredOrderingColumns,
        @com.facebook.swift.codec.ThriftField(value=8, name="tableStorageFormat", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat tableStorageFormat,
        @com.facebook.swift.codec.ThriftField(value=9, name="partitionStorageFormat", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat partitionStorageFormat,
        @com.facebook.swift.codec.ThriftField(value=10, name="actualStorageFormat", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat actualStorageFormat,
        @com.facebook.swift.codec.ThriftField(value=11, name="compressionCodec", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftHiveCompressionCodec compressionCodec,
        @com.facebook.swift.codec.ThriftField(value=12, name="encryptionInformation", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftEncryptionInformation encryptionInformation
    ) {
        this.schemaName = schemaName;
        this.tableName = tableName;
        this.inputColumns = inputColumns;
        this.pageSinkMetadata = pageSinkMetadata;
        this.locationHandle = locationHandle;
        this.bucketProperty = bucketProperty;
        this.preferredOrderingColumns = preferredOrderingColumns;
        this.tableStorageFormat = tableStorageFormat;
        this.partitionStorageFormat = partitionStorageFormat;
        this.actualStorageFormat = actualStorageFormat;
        this.compressionCodec = compressionCodec;
        this.encryptionInformation = encryptionInformation;
    }
    
    @ThriftConstructor
    protected ThriftHiveWritableTableHandle() {
      this.schemaName = null;
      this.tableName = null;
      this.inputColumns = null;
      this.pageSinkMetadata = null;
      this.locationHandle = null;
      this.bucketProperty = null;
      this.preferredOrderingColumns = null;
      this.tableStorageFormat = com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat.fromInteger(0);
      this.partitionStorageFormat = com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat.fromInteger(0);
      this.actualStorageFormat = com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat.fromInteger(0);
      this.compressionCodec = com.facebook.presto.common.experimental.auto_gen.ThriftHiveCompressionCodec.fromInteger(0);
      this.encryptionInformation = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftHiveWritableTableHandle other) {
      return new Builder(other);
    }

    public static class Builder {
        private String schemaName = null;
        private String tableName = null;
        private List<com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle> inputColumns = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftHivePageSinkMetadata pageSinkMetadata = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftLocationHandle locationHandle = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftHiveBucketProperty bucketProperty = null;
        private List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> preferredOrderingColumns = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat tableStorageFormat = com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat.fromInteger(0);
        private com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat partitionStorageFormat = com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat.fromInteger(0);
        private com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat actualStorageFormat = com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat.fromInteger(0);
        private com.facebook.presto.common.experimental.auto_gen.ThriftHiveCompressionCodec compressionCodec = com.facebook.presto.common.experimental.auto_gen.ThriftHiveCompressionCodec.fromInteger(0);
        private com.facebook.presto.common.experimental.auto_gen.ThriftEncryptionInformation encryptionInformation = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="schemaName", requiredness=Requiredness.NONE)    public Builder setSchemaName(String schemaName) {
            this.schemaName = schemaName;
            return this;
        }
    
        public String getSchemaName() { return schemaName; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="tableName", requiredness=Requiredness.NONE)    public Builder setTableName(String tableName) {
            this.tableName = tableName;
            return this;
        }
    
        public String getTableName() { return tableName; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="inputColumns", requiredness=Requiredness.NONE)    public Builder setInputColumns(List<com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle> inputColumns) {
            this.inputColumns = inputColumns;
            return this;
        }
    
        public List<com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle> getInputColumns() { return inputColumns; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="pageSinkMetadata", requiredness=Requiredness.NONE)    public Builder setPageSinkMetadata(com.facebook.presto.common.experimental.auto_gen.ThriftHivePageSinkMetadata pageSinkMetadata) {
            this.pageSinkMetadata = pageSinkMetadata;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftHivePageSinkMetadata getPageSinkMetadata() { return pageSinkMetadata; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="locationHandle", requiredness=Requiredness.NONE)    public Builder setLocationHandle(com.facebook.presto.common.experimental.auto_gen.ThriftLocationHandle locationHandle) {
            this.locationHandle = locationHandle;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftLocationHandle getLocationHandle() { return locationHandle; }
    
            @com.facebook.swift.codec.ThriftField(value=6, name="bucketProperty", requiredness=Requiredness.OPTIONAL)    public Builder setBucketProperty(com.facebook.presto.common.experimental.auto_gen.ThriftHiveBucketProperty bucketProperty) {
            this.bucketProperty = bucketProperty;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftHiveBucketProperty getBucketProperty() { return bucketProperty; }
    
            @com.facebook.swift.codec.ThriftField(value=7, name="preferredOrderingColumns", requiredness=Requiredness.NONE)    public Builder setPreferredOrderingColumns(List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> preferredOrderingColumns) {
            this.preferredOrderingColumns = preferredOrderingColumns;
            return this;
        }
    
        public List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> getPreferredOrderingColumns() { return preferredOrderingColumns; }
    
            @com.facebook.swift.codec.ThriftField(value=8, name="tableStorageFormat", requiredness=Requiredness.NONE)    public Builder setTableStorageFormat(com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat tableStorageFormat) {
            this.tableStorageFormat = tableStorageFormat;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat getTableStorageFormat() { return tableStorageFormat; }
    
            @com.facebook.swift.codec.ThriftField(value=9, name="partitionStorageFormat", requiredness=Requiredness.NONE)    public Builder setPartitionStorageFormat(com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat partitionStorageFormat) {
            this.partitionStorageFormat = partitionStorageFormat;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat getPartitionStorageFormat() { return partitionStorageFormat; }
    
            @com.facebook.swift.codec.ThriftField(value=10, name="actualStorageFormat", requiredness=Requiredness.NONE)    public Builder setActualStorageFormat(com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat actualStorageFormat) {
            this.actualStorageFormat = actualStorageFormat;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat getActualStorageFormat() { return actualStorageFormat; }
    
            @com.facebook.swift.codec.ThriftField(value=11, name="compressionCodec", requiredness=Requiredness.NONE)    public Builder setCompressionCodec(com.facebook.presto.common.experimental.auto_gen.ThriftHiveCompressionCodec compressionCodec) {
            this.compressionCodec = compressionCodec;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftHiveCompressionCodec getCompressionCodec() { return compressionCodec; }
    
            @com.facebook.swift.codec.ThriftField(value=12, name="encryptionInformation", requiredness=Requiredness.OPTIONAL)    public Builder setEncryptionInformation(com.facebook.presto.common.experimental.auto_gen.ThriftEncryptionInformation encryptionInformation) {
            this.encryptionInformation = encryptionInformation;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftEncryptionInformation getEncryptionInformation() { return encryptionInformation; }
    
        public Builder() { }
        public Builder(ThriftHiveWritableTableHandle other) {
            this.schemaName = other.schemaName;
            this.tableName = other.tableName;
            this.inputColumns = other.inputColumns;
            this.pageSinkMetadata = other.pageSinkMetadata;
            this.locationHandle = other.locationHandle;
            this.bucketProperty = other.bucketProperty;
            this.preferredOrderingColumns = other.preferredOrderingColumns;
            this.tableStorageFormat = other.tableStorageFormat;
            this.partitionStorageFormat = other.partitionStorageFormat;
            this.actualStorageFormat = other.actualStorageFormat;
            this.compressionCodec = other.compressionCodec;
            this.encryptionInformation = other.encryptionInformation;
        }
    
        @ThriftConstructor
        public ThriftHiveWritableTableHandle build() {
            ThriftHiveWritableTableHandle result = new ThriftHiveWritableTableHandle (
                this.schemaName,
                this.tableName,
                this.inputColumns,
                this.pageSinkMetadata,
                this.locationHandle,
                this.bucketProperty,
                this.preferredOrderingColumns,
                this.tableStorageFormat,
                this.partitionStorageFormat,
                this.actualStorageFormat,
                this.compressionCodec,
                this.encryptionInformation
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftHiveWritableTableHandle");
    private final String schemaName;
    public static final int _SCHEMANAME = 1;
    private static final TField SCHEMA_NAME_FIELD_DESC = new TField("schemaName", TType.STRING, (short)1);
        private final String tableName;
    public static final int _TABLENAME = 2;
    private static final TField TABLE_NAME_FIELD_DESC = new TField("tableName", TType.STRING, (short)2);
        private final List<com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle> inputColumns;
    public static final int _INPUTCOLUMNS = 3;
    private static final TField INPUT_COLUMNS_FIELD_DESC = new TField("inputColumns", TType.LIST, (short)3);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftHivePageSinkMetadata pageSinkMetadata;
    public static final int _PAGESINKMETADATA = 4;
    private static final TField PAGE_SINK_METADATA_FIELD_DESC = new TField("pageSinkMetadata", TType.STRUCT, (short)4);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftLocationHandle locationHandle;
    public static final int _LOCATIONHANDLE = 5;
    private static final TField LOCATION_HANDLE_FIELD_DESC = new TField("locationHandle", TType.STRUCT, (short)5);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftHiveBucketProperty bucketProperty;
    public static final int _BUCKETPROPERTY = 6;
    private static final TField BUCKET_PROPERTY_FIELD_DESC = new TField("bucketProperty", TType.STRUCT, (short)6);
        private final List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> preferredOrderingColumns;
    public static final int _PREFERREDORDERINGCOLUMNS = 7;
    private static final TField PREFERRED_ORDERING_COLUMNS_FIELD_DESC = new TField("preferredOrderingColumns", TType.LIST, (short)7);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat tableStorageFormat;
    public static final int _TABLESTORAGEFORMAT = 8;
    private static final TField TABLE_STORAGE_FORMAT_FIELD_DESC = new TField("tableStorageFormat", TType.I32, (short)8);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat partitionStorageFormat;
    public static final int _PARTITIONSTORAGEFORMAT = 9;
    private static final TField PARTITION_STORAGE_FORMAT_FIELD_DESC = new TField("partitionStorageFormat", TType.I32, (short)9);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat actualStorageFormat;
    public static final int _ACTUALSTORAGEFORMAT = 10;
    private static final TField ACTUAL_STORAGE_FORMAT_FIELD_DESC = new TField("actualStorageFormat", TType.I32, (short)10);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftHiveCompressionCodec compressionCodec;
    public static final int _COMPRESSIONCODEC = 11;
    private static final TField COMPRESSION_CODEC_FIELD_DESC = new TField("compressionCodec", TType.I32, (short)11);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftEncryptionInformation encryptionInformation;
    public static final int _ENCRYPTIONINFORMATION = 12;
    private static final TField ENCRYPTION_INFORMATION_FIELD_DESC = new TField("encryptionInformation", TType.STRUCT, (short)12);
    static {
      NAMES_TO_IDS.put("schemaName", 1);
      THRIFT_NAMES_TO_IDS.put("schemaName", 1);
      FIELD_METADATA.put(1, SCHEMA_NAME_FIELD_DESC);
      NAMES_TO_IDS.put("tableName", 2);
      THRIFT_NAMES_TO_IDS.put("tableName", 2);
      FIELD_METADATA.put(2, TABLE_NAME_FIELD_DESC);
      NAMES_TO_IDS.put("inputColumns", 3);
      THRIFT_NAMES_TO_IDS.put("inputColumns", 3);
      FIELD_METADATA.put(3, INPUT_COLUMNS_FIELD_DESC);
      NAMES_TO_IDS.put("pageSinkMetadata", 4);
      THRIFT_NAMES_TO_IDS.put("pageSinkMetadata", 4);
      FIELD_METADATA.put(4, PAGE_SINK_METADATA_FIELD_DESC);
      NAMES_TO_IDS.put("locationHandle", 5);
      THRIFT_NAMES_TO_IDS.put("locationHandle", 5);
      FIELD_METADATA.put(5, LOCATION_HANDLE_FIELD_DESC);
      NAMES_TO_IDS.put("bucketProperty", 6);
      THRIFT_NAMES_TO_IDS.put("bucketProperty", 6);
      FIELD_METADATA.put(6, BUCKET_PROPERTY_FIELD_DESC);
      NAMES_TO_IDS.put("preferredOrderingColumns", 7);
      THRIFT_NAMES_TO_IDS.put("preferredOrderingColumns", 7);
      FIELD_METADATA.put(7, PREFERRED_ORDERING_COLUMNS_FIELD_DESC);
      NAMES_TO_IDS.put("tableStorageFormat", 8);
      THRIFT_NAMES_TO_IDS.put("tableStorageFormat", 8);
      FIELD_METADATA.put(8, TABLE_STORAGE_FORMAT_FIELD_DESC);
      NAMES_TO_IDS.put("partitionStorageFormat", 9);
      THRIFT_NAMES_TO_IDS.put("partitionStorageFormat", 9);
      FIELD_METADATA.put(9, PARTITION_STORAGE_FORMAT_FIELD_DESC);
      NAMES_TO_IDS.put("actualStorageFormat", 10);
      THRIFT_NAMES_TO_IDS.put("actualStorageFormat", 10);
      FIELD_METADATA.put(10, ACTUAL_STORAGE_FORMAT_FIELD_DESC);
      NAMES_TO_IDS.put("compressionCodec", 11);
      THRIFT_NAMES_TO_IDS.put("compressionCodec", 11);
      FIELD_METADATA.put(11, COMPRESSION_CODEC_FIELD_DESC);
      NAMES_TO_IDS.put("encryptionInformation", 12);
      THRIFT_NAMES_TO_IDS.put("encryptionInformation", 12);
      FIELD_METADATA.put(12, ENCRYPTION_INFORMATION_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="schemaName", requiredness=Requiredness.NONE)
    public String getSchemaName() { return schemaName; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="tableName", requiredness=Requiredness.NONE)
    public String getTableName() { return tableName; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="inputColumns", requiredness=Requiredness.NONE)
    public List<com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle> getInputColumns() { return inputColumns; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="pageSinkMetadata", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftHivePageSinkMetadata getPageSinkMetadata() { return pageSinkMetadata; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=5, name="locationHandle", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftLocationHandle getLocationHandle() { return locationHandle; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=6, name="bucketProperty", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftHiveBucketProperty getBucketProperty() { return bucketProperty; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=7, name="preferredOrderingColumns", requiredness=Requiredness.NONE)
    public List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> getPreferredOrderingColumns() { return preferredOrderingColumns; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=8, name="tableStorageFormat", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat getTableStorageFormat() { return tableStorageFormat; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=9, name="partitionStorageFormat", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat getPartitionStorageFormat() { return partitionStorageFormat; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=10, name="actualStorageFormat", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat getActualStorageFormat() { return actualStorageFormat; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=11, name="compressionCodec", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftHiveCompressionCodec getCompressionCodec() { return compressionCodec; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=12, name="encryptionInformation", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftEncryptionInformation getEncryptionInformation() { return encryptionInformation; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("schemaName", schemaName);
        helper.add("tableName", tableName);
        helper.add("inputColumns", inputColumns);
        helper.add("pageSinkMetadata", pageSinkMetadata);
        helper.add("locationHandle", locationHandle);
        helper.add("bucketProperty", bucketProperty);
        helper.add("preferredOrderingColumns", preferredOrderingColumns);
        helper.add("tableStorageFormat", tableStorageFormat);
        helper.add("partitionStorageFormat", partitionStorageFormat);
        helper.add("actualStorageFormat", actualStorageFormat);
        helper.add("compressionCodec", compressionCodec);
        helper.add("encryptionInformation", encryptionInformation);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftHiveWritableTableHandle other = (ThriftHiveWritableTableHandle)o;
    
        return
            Objects.equals(schemaName, other.schemaName) &&
            Objects.equals(tableName, other.tableName) &&
            Objects.equals(inputColumns, other.inputColumns) &&
            Objects.equals(pageSinkMetadata, other.pageSinkMetadata) &&
            Objects.equals(locationHandle, other.locationHandle) &&
            Objects.equals(bucketProperty, other.bucketProperty) &&
            Objects.equals(preferredOrderingColumns, other.preferredOrderingColumns) &&
            Objects.equals(tableStorageFormat, other.tableStorageFormat) &&
            Objects.equals(partitionStorageFormat, other.partitionStorageFormat) &&
            Objects.equals(actualStorageFormat, other.actualStorageFormat) &&
            Objects.equals(compressionCodec, other.compressionCodec) &&
            Objects.equals(encryptionInformation, other.encryptionInformation) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            schemaName,
            tableName,
            inputColumns,
            pageSinkMetadata,
            locationHandle,
            bucketProperty,
            preferredOrderingColumns,
            tableStorageFormat,
            partitionStorageFormat,
            actualStorageFormat,
            compressionCodec,
            encryptionInformation
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftHiveWritableTableHandle> asReader() {
      return ThriftHiveWritableTableHandle::read0;
    }
    
    public static ThriftHiveWritableTableHandle read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftHiveWritableTableHandle.NAMES_TO_IDS, ThriftHiveWritableTableHandle.THRIFT_NAMES_TO_IDS, ThriftHiveWritableTableHandle.FIELD_METADATA);
      ThriftHiveWritableTableHandle.Builder builder = new ThriftHiveWritableTableHandle.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _SCHEMANAME:
          if (__field.type == TType.STRING) {
            String schemaName = oprot.readString();
            builder.setSchemaName(schemaName);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TABLENAME:
          if (__field.type == TType.STRING) {
            String tableName = oprot.readString();
            builder.setTableName(tableName);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _INPUTCOLUMNS:
          if (__field.type == TType.LIST) {
            List<com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle> inputColumns;
                {
                TList _list = oprot.readListBegin();
                inputColumns = new ArrayList<com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle.read0(oprot);
                    inputColumns.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setInputColumns(inputColumns);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PAGESINKMETADATA:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftHivePageSinkMetadata pageSinkMetadata = com.facebook.presto.common.experimental.auto_gen.ThriftHivePageSinkMetadata.read0(oprot);
            builder.setPageSinkMetadata(pageSinkMetadata);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _LOCATIONHANDLE:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftLocationHandle locationHandle = com.facebook.presto.common.experimental.auto_gen.ThriftLocationHandle.read0(oprot);
            builder.setLocationHandle(locationHandle);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _BUCKETPROPERTY:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftHiveBucketProperty bucketProperty = com.facebook.presto.common.experimental.auto_gen.ThriftHiveBucketProperty.read0(oprot);
            builder.setBucketProperty(bucketProperty);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PREFERREDORDERINGCOLUMNS:
          if (__field.type == TType.LIST) {
            List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> preferredOrderingColumns;
                {
                TList _list = oprot.readListBegin();
                preferredOrderingColumns = new ArrayList<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn.read0(oprot);
                    preferredOrderingColumns.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setPreferredOrderingColumns(preferredOrderingColumns);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TABLESTORAGEFORMAT:
          if (__field.type == TType.I32) {
            com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat tableStorageFormat = com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat.fromInteger(oprot.readI32());
            builder.setTableStorageFormat(tableStorageFormat);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _PARTITIONSTORAGEFORMAT:
          if (__field.type == TType.I32) {
            com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat partitionStorageFormat = com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat.fromInteger(oprot.readI32());
            builder.setPartitionStorageFormat(partitionStorageFormat);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ACTUALSTORAGEFORMAT:
          if (__field.type == TType.I32) {
            com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat actualStorageFormat = com.facebook.presto.common.experimental.auto_gen.ThriftHiveStorageFormat.fromInteger(oprot.readI32());
            builder.setActualStorageFormat(actualStorageFormat);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _COMPRESSIONCODEC:
          if (__field.type == TType.I32) {
            com.facebook.presto.common.experimental.auto_gen.ThriftHiveCompressionCodec compressionCodec = com.facebook.presto.common.experimental.auto_gen.ThriftHiveCompressionCodec.fromInteger(oprot.readI32());
            builder.setCompressionCodec(compressionCodec);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _ENCRYPTIONINFORMATION:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftEncryptionInformation encryptionInformation = com.facebook.presto.common.experimental.auto_gen.ThriftEncryptionInformation.read0(oprot);
            builder.setEncryptionInformation(encryptionInformation);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (schemaName != null) {
        oprot.writeFieldBegin(SCHEMA_NAME_FIELD_DESC);
        oprot.writeString(this.schemaName);
        oprot.writeFieldEnd();
      }
      if (tableName != null) {
        oprot.writeFieldBegin(TABLE_NAME_FIELD_DESC);
        oprot.writeString(this.tableName);
        oprot.writeFieldEnd();
      }
      if (inputColumns != null) {
        oprot.writeFieldBegin(INPUT_COLUMNS_FIELD_DESC);
        List<com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle> _iter0 = inputColumns;
        oprot.writeListBegin(new TList(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftHiveColumnHandle _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      if (pageSinkMetadata != null) {
        oprot.writeFieldBegin(PAGE_SINK_METADATA_FIELD_DESC);
        this.pageSinkMetadata.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (locationHandle != null) {
        oprot.writeFieldBegin(LOCATION_HANDLE_FIELD_DESC);
        this.locationHandle.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (bucketProperty != null) {
        oprot.writeFieldBegin(BUCKET_PROPERTY_FIELD_DESC);
        this.bucketProperty.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (preferredOrderingColumns != null) {
        oprot.writeFieldBegin(PREFERRED_ORDERING_COLUMNS_FIELD_DESC);
        List<com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn> _iter0 = preferredOrderingColumns;
        oprot.writeListBegin(new TList(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftSortingColumn _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(TABLE_STORAGE_FORMAT_FIELD_DESC);
      oprot.writeI32(this.tableStorageFormat == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.tableStorageFormat));
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PARTITION_STORAGE_FORMAT_FIELD_DESC);
      oprot.writeI32(this.partitionStorageFormat == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.partitionStorageFormat));
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(ACTUAL_STORAGE_FORMAT_FIELD_DESC);
      oprot.writeI32(this.actualStorageFormat == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.actualStorageFormat));
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(COMPRESSION_CODEC_FIELD_DESC);
      oprot.writeI32(this.compressionCodec == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.compressionCodec));
      oprot.writeFieldEnd();
      if (encryptionInformation != null) {
        oprot.writeFieldBegin(ENCRYPTION_INFORMATION_FIELD_DESC);
        this.encryptionInformation.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftHiveWritableTableHandleLazy {
        private static final ThriftHiveWritableTableHandle _DEFAULT = new ThriftHiveWritableTableHandle.Builder().build();
    }
    
    public static ThriftHiveWritableTableHandle defaultInstance() {
        return  _ThriftHiveWritableTableHandleLazy._DEFAULT;
    }
}
