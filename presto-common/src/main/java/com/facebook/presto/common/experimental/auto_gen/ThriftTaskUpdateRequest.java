/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftTaskUpdateRequest", builder=ThriftTaskUpdateRequest.Builder.class)
public final class ThriftTaskUpdateRequest implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftTaskUpdateRequest(
        @com.facebook.swift.codec.ThriftField(value=1, name="session", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftSessionRepresentation session,
        @com.facebook.swift.codec.ThriftField(value=2, name="extraCredentials", requiredness=Requiredness.NONE) final Map<String, String> extraCredentials,
        @com.facebook.swift.codec.ThriftField(value=3, name="fragment", requiredness=Requiredness.OPTIONAL) final byte[] fragment,
        @com.facebook.swift.codec.ThriftField(value=4, name="sources", requiredness=Requiredness.NONE) final List<com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource> sources,
        @com.facebook.swift.codec.ThriftField(value=5, name="outputIds", requiredness=Requiredness.NONE) final com.facebook.presto.common.experimental.auto_gen.ThriftOutputBuffers outputIds,
        @com.facebook.swift.codec.ThriftField(value=6, name="tableWriteInfo", requiredness=Requiredness.OPTIONAL) final com.facebook.presto.common.experimental.auto_gen.ThriftTableWriteInfo tableWriteInfo
    ) {
        this.session = session;
        this.extraCredentials = extraCredentials;
        this.fragment = fragment;
        this.sources = sources;
        this.outputIds = outputIds;
        this.tableWriteInfo = tableWriteInfo;
    }
    
    @ThriftConstructor
    protected ThriftTaskUpdateRequest() {
      this.session = null;
      this.extraCredentials = null;
      this.fragment = null;
      this.sources = null;
      this.outputIds = null;
      this.tableWriteInfo = null;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftTaskUpdateRequest other) {
      return new Builder(other);
    }

    public static class Builder {
        private com.facebook.presto.common.experimental.auto_gen.ThriftSessionRepresentation session = null;
        private Map<String, String> extraCredentials = null;
        private byte[] fragment = null;
        private List<com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource> sources = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftOutputBuffers outputIds = null;
        private com.facebook.presto.common.experimental.auto_gen.ThriftTableWriteInfo tableWriteInfo = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="session", requiredness=Requiredness.NONE)    public Builder setSession(com.facebook.presto.common.experimental.auto_gen.ThriftSessionRepresentation session) {
            this.session = session;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftSessionRepresentation getSession() { return session; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="extraCredentials", requiredness=Requiredness.NONE)    public Builder setExtraCredentials(Map<String, String> extraCredentials) {
            this.extraCredentials = extraCredentials;
            return this;
        }
    
        public Map<String, String> getExtraCredentials() { return extraCredentials; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="fragment", requiredness=Requiredness.OPTIONAL)    public Builder setFragment(byte[] fragment) {
            this.fragment = fragment;
            return this;
        }
    
        public byte[] getFragment() { return fragment; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="sources", requiredness=Requiredness.NONE)    public Builder setSources(List<com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource> sources) {
            this.sources = sources;
            return this;
        }
    
        public List<com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource> getSources() { return sources; }
    
            @com.facebook.swift.codec.ThriftField(value=5, name="outputIds", requiredness=Requiredness.NONE)    public Builder setOutputIds(com.facebook.presto.common.experimental.auto_gen.ThriftOutputBuffers outputIds) {
            this.outputIds = outputIds;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftOutputBuffers getOutputIds() { return outputIds; }
    
            @com.facebook.swift.codec.ThriftField(value=6, name="tableWriteInfo", requiredness=Requiredness.OPTIONAL)    public Builder setTableWriteInfo(com.facebook.presto.common.experimental.auto_gen.ThriftTableWriteInfo tableWriteInfo) {
            this.tableWriteInfo = tableWriteInfo;
            return this;
        }
    
        public com.facebook.presto.common.experimental.auto_gen.ThriftTableWriteInfo getTableWriteInfo() { return tableWriteInfo; }
    
        public Builder() { }
        public Builder(ThriftTaskUpdateRequest other) {
            this.session = other.session;
            this.extraCredentials = other.extraCredentials;
            this.fragment = other.fragment;
            this.sources = other.sources;
            this.outputIds = other.outputIds;
            this.tableWriteInfo = other.tableWriteInfo;
        }
    
        @ThriftConstructor
        public ThriftTaskUpdateRequest build() {
            ThriftTaskUpdateRequest result = new ThriftTaskUpdateRequest (
                this.session,
                this.extraCredentials,
                this.fragment,
                this.sources,
                this.outputIds,
                this.tableWriteInfo
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftTaskUpdateRequest");
    private final com.facebook.presto.common.experimental.auto_gen.ThriftSessionRepresentation session;
    public static final int _SESSION = 1;
    private static final TField SESSION_FIELD_DESC = new TField("session", TType.STRUCT, (short)1);
        private final Map<String, String> extraCredentials;
    public static final int _EXTRACREDENTIALS = 2;
    private static final TField EXTRA_CREDENTIALS_FIELD_DESC = new TField("extraCredentials", TType.MAP, (short)2);
        private final byte[] fragment;
    public static final int _FRAGMENT = 3;
    private static final TField FRAGMENT_FIELD_DESC = new TField("fragment", TType.STRING, (short)3);
        private final List<com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource> sources;
    public static final int _SOURCES = 4;
    private static final TField SOURCES_FIELD_DESC = new TField("sources", TType.LIST, (short)4);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftOutputBuffers outputIds;
    public static final int _OUTPUTIDS = 5;
    private static final TField OUTPUT_IDS_FIELD_DESC = new TField("outputIds", TType.STRUCT, (short)5);
        private final com.facebook.presto.common.experimental.auto_gen.ThriftTableWriteInfo tableWriteInfo;
    public static final int _TABLEWRITEINFO = 6;
    private static final TField TABLE_WRITE_INFO_FIELD_DESC = new TField("tableWriteInfo", TType.STRUCT, (short)6);
    static {
      NAMES_TO_IDS.put("session", 1);
      THRIFT_NAMES_TO_IDS.put("session", 1);
      FIELD_METADATA.put(1, SESSION_FIELD_DESC);
      NAMES_TO_IDS.put("extraCredentials", 2);
      THRIFT_NAMES_TO_IDS.put("extraCredentials", 2);
      FIELD_METADATA.put(2, EXTRA_CREDENTIALS_FIELD_DESC);
      NAMES_TO_IDS.put("fragment", 3);
      THRIFT_NAMES_TO_IDS.put("fragment", 3);
      FIELD_METADATA.put(3, FRAGMENT_FIELD_DESC);
      NAMES_TO_IDS.put("sources", 4);
      THRIFT_NAMES_TO_IDS.put("sources", 4);
      FIELD_METADATA.put(4, SOURCES_FIELD_DESC);
      NAMES_TO_IDS.put("outputIds", 5);
      THRIFT_NAMES_TO_IDS.put("outputIds", 5);
      FIELD_METADATA.put(5, OUTPUT_IDS_FIELD_DESC);
      NAMES_TO_IDS.put("tableWriteInfo", 6);
      THRIFT_NAMES_TO_IDS.put("tableWriteInfo", 6);
      FIELD_METADATA.put(6, TABLE_WRITE_INFO_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="session", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftSessionRepresentation getSession() { return session; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="extraCredentials", requiredness=Requiredness.NONE)
    public Map<String, String> getExtraCredentials() { return extraCredentials; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="fragment", requiredness=Requiredness.OPTIONAL)
    public byte[] getFragment() { return fragment; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=4, name="sources", requiredness=Requiredness.NONE)
    public List<com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource> getSources() { return sources; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=5, name="outputIds", requiredness=Requiredness.NONE)
    public com.facebook.presto.common.experimental.auto_gen.ThriftOutputBuffers getOutputIds() { return outputIds; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=6, name="tableWriteInfo", requiredness=Requiredness.OPTIONAL)
    public com.facebook.presto.common.experimental.auto_gen.ThriftTableWriteInfo getTableWriteInfo() { return tableWriteInfo; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("session", session);
        helper.add("extraCredentials", extraCredentials);
        helper.add("fragment", fragment);
        helper.add("sources", sources);
        helper.add("outputIds", outputIds);
        helper.add("tableWriteInfo", tableWriteInfo);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftTaskUpdateRequest other = (ThriftTaskUpdateRequest)o;
    
        return
            Objects.equals(session, other.session) &&
            Objects.equals(extraCredentials, other.extraCredentials) &&
            Arrays.equals(fragment, other.fragment) &&
            Objects.equals(sources, other.sources) &&
            Objects.equals(outputIds, other.outputIds) &&
            Objects.equals(tableWriteInfo, other.tableWriteInfo) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            session,
            extraCredentials,
            fragment,
            sources,
            outputIds,
            tableWriteInfo
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftTaskUpdateRequest> asReader() {
      return ThriftTaskUpdateRequest::read0;
    }
    
    public static ThriftTaskUpdateRequest read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftTaskUpdateRequest.NAMES_TO_IDS, ThriftTaskUpdateRequest.THRIFT_NAMES_TO_IDS, ThriftTaskUpdateRequest.FIELD_METADATA);
      ThriftTaskUpdateRequest.Builder builder = new ThriftTaskUpdateRequest.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _SESSION:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftSessionRepresentation session = com.facebook.presto.common.experimental.auto_gen.ThriftSessionRepresentation.read0(oprot);
            builder.setSession(session);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _EXTRACREDENTIALS:
          if (__field.type == TType.MAP) {
            Map<String, String> extraCredentials;
                {
                TMap _map = oprot.readMapBegin();
                extraCredentials = new HashMap<String, String>(Math.max(0, _map.size));
                for (int _i = 0; (_map.size < 0) ? oprot.peekMap() : (_i < _map.size); _i++) {
                    
                    String _key1 = oprot.readString();
                    String _value1 = oprot.readString();
                    extraCredentials.put(_key1, _value1);
                }
                }
                oprot.readMapEnd();
            builder.setExtraCredentials(extraCredentials);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _FRAGMENT:
          if (__field.type == TType.STRING) {
            byte[] fragment = oprot.readBinary().array();
            builder.setFragment(fragment);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _SOURCES:
          if (__field.type == TType.LIST) {
            List<com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource> sources;
                {
                TList _list = oprot.readListBegin();
                sources = new ArrayList<com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource>(Math.max(0, _list.size));
                for (int _i = 0; (_list.size < 0) ? oprot.peekList() : (_i < _list.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource.read0(oprot);
                    sources.add(_value1);
                }
                oprot.readListEnd();
                }
            builder.setSources(sources);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _OUTPUTIDS:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftOutputBuffers outputIds = com.facebook.presto.common.experimental.auto_gen.ThriftOutputBuffers.read0(oprot);
            builder.setOutputIds(outputIds);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _TABLEWRITEINFO:
          if (__field.type == TType.STRUCT) {
            com.facebook.presto.common.experimental.auto_gen.ThriftTableWriteInfo tableWriteInfo = com.facebook.presto.common.experimental.auto_gen.ThriftTableWriteInfo.read0(oprot);
            builder.setTableWriteInfo(tableWriteInfo);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (session != null) {
        oprot.writeFieldBegin(SESSION_FIELD_DESC);
        this.session.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (extraCredentials != null) {
        oprot.writeFieldBegin(EXTRA_CREDENTIALS_FIELD_DESC);
        Map<String, String> _iter0 = extraCredentials;
        oprot.writeMapBegin(new TMap(TType.STRING, TType.STRING, _iter0.size()));
            for (Map.Entry<String, String> _iter1 : _iter0.entrySet()) {
              oprot.writeString(_iter1.getKey());
              oprot.writeString(_iter1.getValue());
            }
            oprot.writeMapEnd();
        oprot.writeFieldEnd();
      }
      if (fragment != null) {
        oprot.writeFieldBegin(FRAGMENT_FIELD_DESC);
        oprot.writeBinary(java.nio.ByteBuffer.wrap(this.fragment));
        oprot.writeFieldEnd();
      }
      if (sources != null) {
        oprot.writeFieldBegin(SOURCES_FIELD_DESC);
        List<com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource> _iter0 = sources;
        oprot.writeListBegin(new TList(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftTaskSource _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeListEnd();
        oprot.writeFieldEnd();
      }
      if (outputIds != null) {
        oprot.writeFieldBegin(OUTPUT_IDS_FIELD_DESC);
        this.outputIds.write0(oprot);
        oprot.writeFieldEnd();
      }
      if (tableWriteInfo != null) {
        oprot.writeFieldBegin(TABLE_WRITE_INFO_FIELD_DESC);
        this.tableWriteInfo.write0(oprot);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftTaskUpdateRequestLazy {
        private static final ThriftTaskUpdateRequest _DEFAULT = new ThriftTaskUpdateRequest.Builder().build();
    }
    
    public static ThriftTaskUpdateRequest defaultInstance() {
        return  _ThriftTaskUpdateRequestLazy._DEFAULT;
    }
}
