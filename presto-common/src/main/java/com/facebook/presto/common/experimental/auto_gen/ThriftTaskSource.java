/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.fbthrift.*;
import org.apache.fbthrift.transport.*;
import org.apache.fbthrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="ThriftTaskSource", builder=ThriftTaskSource.Builder.class)
public final class ThriftTaskSource implements com.facebook.thrift.payload.ThriftSerializable {
    @ThriftConstructor
    public ThriftTaskSource(
        @com.facebook.swift.codec.ThriftField(value=1, name="planNodeId", requiredness=Requiredness.NONE) final String planNodeId,
        @com.facebook.swift.codec.ThriftField(value=2, name="splits", requiredness=Requiredness.NONE) final Set<com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit> splits,
        @com.facebook.swift.codec.ThriftField(value=3, name="noMoreSplitsForLifespan", requiredness=Requiredness.NONE) final Set<com.facebook.presto.common.experimental.auto_gen.ThriftLifespan> noMoreSplitsForLifespan,
        @com.facebook.swift.codec.ThriftField(value=4, name="noMoreSplits", requiredness=Requiredness.NONE) final boolean noMoreSplits
    ) {
        this.planNodeId = planNodeId;
        this.splits = splits;
        this.noMoreSplitsForLifespan = noMoreSplitsForLifespan;
        this.noMoreSplits = noMoreSplits;
    }
    
    @ThriftConstructor
    protected ThriftTaskSource() {
      this.planNodeId = null;
      this.splits = null;
      this.noMoreSplitsForLifespan = null;
      this.noMoreSplits = false;
    }

    public static Builder builder() {
      return new Builder();
    }

    public static Builder builder(ThriftTaskSource other) {
      return new Builder(other);
    }

    public static class Builder {
        private String planNodeId = null;
        private Set<com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit> splits = null;
        private Set<com.facebook.presto.common.experimental.auto_gen.ThriftLifespan> noMoreSplitsForLifespan = null;
        private boolean noMoreSplits = false;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="planNodeId", requiredness=Requiredness.NONE)    public Builder setPlanNodeId(String planNodeId) {
            this.planNodeId = planNodeId;
            return this;
        }
    
        public String getPlanNodeId() { return planNodeId; }
    
            @com.facebook.swift.codec.ThriftField(value=2, name="splits", requiredness=Requiredness.NONE)    public Builder setSplits(Set<com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit> splits) {
            this.splits = splits;
            return this;
        }
    
        public Set<com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit> getSplits() { return splits; }
    
            @com.facebook.swift.codec.ThriftField(value=3, name="noMoreSplitsForLifespan", requiredness=Requiredness.NONE)    public Builder setNoMoreSplitsForLifespan(Set<com.facebook.presto.common.experimental.auto_gen.ThriftLifespan> noMoreSplitsForLifespan) {
            this.noMoreSplitsForLifespan = noMoreSplitsForLifespan;
            return this;
        }
    
        public Set<com.facebook.presto.common.experimental.auto_gen.ThriftLifespan> getNoMoreSplitsForLifespan() { return noMoreSplitsForLifespan; }
    
            @com.facebook.swift.codec.ThriftField(value=4, name="noMoreSplits", requiredness=Requiredness.NONE)    public Builder setNoMoreSplits(boolean noMoreSplits) {
            this.noMoreSplits = noMoreSplits;
            return this;
        }
    
        public boolean isNoMoreSplits() { return noMoreSplits; }
    
        public Builder() { }
        public Builder(ThriftTaskSource other) {
            this.planNodeId = other.planNodeId;
            this.splits = other.splits;
            this.noMoreSplitsForLifespan = other.noMoreSplitsForLifespan;
            this.noMoreSplits = other.noMoreSplits;
        }
    
        @ThriftConstructor
        public ThriftTaskSource build() {
            ThriftTaskSource result = new ThriftTaskSource (
                this.planNodeId,
                this.splits,
                this.noMoreSplitsForLifespan,
                this.noMoreSplits
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftTaskSource");
    private final String planNodeId;
    public static final int _PLANNODEID = 1;
    private static final TField PLAN_NODE_ID_FIELD_DESC = new TField("planNodeId", TType.STRING, (short)1);
        private final Set<com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit> splits;
    public static final int _SPLITS = 2;
    private static final TField SPLITS_FIELD_DESC = new TField("splits", TType.SET, (short)2);
        private final Set<com.facebook.presto.common.experimental.auto_gen.ThriftLifespan> noMoreSplitsForLifespan;
    public static final int _NOMORESPLITSFORLIFESPAN = 3;
    private static final TField NO_MORE_SPLITS_FOR_LIFESPAN_FIELD_DESC = new TField("noMoreSplitsForLifespan", TType.SET, (short)3);
        private final boolean noMoreSplits;
    public static final int _NOMORESPLITS = 4;
    private static final TField NO_MORE_SPLITS_FIELD_DESC = new TField("noMoreSplits", TType.BOOL, (short)4);
    static {
      NAMES_TO_IDS.put("planNodeId", 1);
      THRIFT_NAMES_TO_IDS.put("planNodeId", 1);
      FIELD_METADATA.put(1, PLAN_NODE_ID_FIELD_DESC);
      NAMES_TO_IDS.put("splits", 2);
      THRIFT_NAMES_TO_IDS.put("splits", 2);
      FIELD_METADATA.put(2, SPLITS_FIELD_DESC);
      NAMES_TO_IDS.put("noMoreSplitsForLifespan", 3);
      THRIFT_NAMES_TO_IDS.put("noMoreSplitsForLifespan", 3);
      FIELD_METADATA.put(3, NO_MORE_SPLITS_FOR_LIFESPAN_FIELD_DESC);
      NAMES_TO_IDS.put("noMoreSplits", 4);
      THRIFT_NAMES_TO_IDS.put("noMoreSplits", 4);
      FIELD_METADATA.put(4, NO_MORE_SPLITS_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="planNodeId", requiredness=Requiredness.NONE)
    public String getPlanNodeId() { return planNodeId; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=2, name="splits", requiredness=Requiredness.NONE)
    public Set<com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit> getSplits() { return splits; }

    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=3, name="noMoreSplitsForLifespan", requiredness=Requiredness.NONE)
    public Set<com.facebook.presto.common.experimental.auto_gen.ThriftLifespan> getNoMoreSplitsForLifespan() { return noMoreSplitsForLifespan; }

    
    
    @com.facebook.swift.codec.ThriftField(value=4, name="noMoreSplits", requiredness=Requiredness.NONE)
    public boolean isNoMoreSplits() { return noMoreSplits; }

    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("planNodeId", planNodeId);
        helper.add("splits", splits);
        helper.add("noMoreSplitsForLifespan", noMoreSplitsForLifespan);
        helper.add("noMoreSplits", noMoreSplits);
        return helper.toString();
    }

    @java.lang.Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        ThriftTaskSource other = (ThriftTaskSource)o;
    
        return
            Objects.equals(planNodeId, other.planNodeId) &&
            Objects.equals(splits, other.splits) &&
            Objects.equals(noMoreSplitsForLifespan, other.noMoreSplitsForLifespan) &&
            Objects.equals(noMoreSplits, other.noMoreSplits) &&
            true;
    }

    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new java.lang.Object[] {
            planNodeId,
            splits,
            noMoreSplitsForLifespan,
            noMoreSplits
        });
    }

    
    public static com.facebook.thrift.payload.Reader<ThriftTaskSource> asReader() {
      return ThriftTaskSource::read0;
    }
    
    public static ThriftTaskSource read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(ThriftTaskSource.NAMES_TO_IDS, ThriftTaskSource.THRIFT_NAMES_TO_IDS, ThriftTaskSource.FIELD_METADATA);
      ThriftTaskSource.Builder builder = new ThriftTaskSource.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _PLANNODEID:
          if (__field.type == TType.STRING) {
            String planNodeId = oprot.readString();
            builder.setPlanNodeId(planNodeId);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _SPLITS:
          if (__field.type == TType.SET) {
            Set<com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit> splits;
                {
                TSet _set = oprot.readSetBegin();
                splits = new HashSet<com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit>(Math.max(0, _set.size));
                for (int _i = 0; (_set.size < 0) ? oprot.peekSet() : (_i < _set.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit.read0(oprot);
                    splits.add(_value1);
                }
                oprot.readSetEnd();
                }
            builder.setSplits(splits);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _NOMORESPLITSFORLIFESPAN:
          if (__field.type == TType.SET) {
            Set<com.facebook.presto.common.experimental.auto_gen.ThriftLifespan> noMoreSplitsForLifespan;
                {
                TSet _set = oprot.readSetBegin();
                noMoreSplitsForLifespan = new HashSet<com.facebook.presto.common.experimental.auto_gen.ThriftLifespan>(Math.max(0, _set.size));
                for (int _i = 0; (_set.size < 0) ? oprot.peekSet() : (_i < _set.size); _i++) {
                    
                    com.facebook.presto.common.experimental.auto_gen.ThriftLifespan _value1 = com.facebook.presto.common.experimental.auto_gen.ThriftLifespan.read0(oprot);
                    noMoreSplitsForLifespan.add(_value1);
                }
                oprot.readSetEnd();
                }
            builder.setNoMoreSplitsForLifespan(noMoreSplitsForLifespan);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        case _NOMORESPLITS:
          if (__field.type == TType.BOOL) {
            boolean noMoreSplits = oprot.readBool();
            builder.setNoMoreSplits(noMoreSplits);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }

    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (planNodeId != null) {
        oprot.writeFieldBegin(PLAN_NODE_ID_FIELD_DESC);
        oprot.writeString(this.planNodeId);
        oprot.writeFieldEnd();
      }
      if (splits != null) {
        oprot.writeFieldBegin(SPLITS_FIELD_DESC);
        Set<com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit> _iter0 = splits;
        oprot.writeSetBegin(new TSet(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftScheduledSplit _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeSetEnd();
        oprot.writeFieldEnd();
      }
      if (noMoreSplitsForLifespan != null) {
        oprot.writeFieldBegin(NO_MORE_SPLITS_FOR_LIFESPAN_FIELD_DESC);
        Set<com.facebook.presto.common.experimental.auto_gen.ThriftLifespan> _iter0 = noMoreSplitsForLifespan;
        oprot.writeSetBegin(new TSet(TType.STRUCT, _iter0.size()));
            for (com.facebook.presto.common.experimental.auto_gen.ThriftLifespan _iter1 : _iter0) {
              _iter1.write0(oprot);
            }
            oprot.writeSetEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(NO_MORE_SPLITS_FIELD_DESC);
      oprot.writeBool(this.noMoreSplits);
      oprot.writeFieldEnd();
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

    private static class _ThriftTaskSourceLazy {
        private static final ThriftTaskSource _DEFAULT = new ThriftTaskSource.Builder().build();
    }
    
    public static ThriftTaskSource defaultInstance() {
        return  _ThriftTaskSourceLazy._DEFAULT;
    }
}
