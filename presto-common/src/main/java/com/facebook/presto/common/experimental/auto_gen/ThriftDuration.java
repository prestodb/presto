/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/**
 * Autogenerated by Thrift
 * <p>
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *
 * @generated
 */

package com.facebook.presto.common.experimental.auto_gen;

import com.facebook.swift.codec.SwiftGenerated;
import com.facebook.swift.codec.ThriftConstructor;
import com.facebook.swift.codec.ThriftField;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftStruct;
import org.apache.fbthrift.TException;
import org.apache.fbthrift.protocol.TField;
import org.apache.fbthrift.protocol.TProtocol;
import org.apache.fbthrift.protocol.TProtocolUtil;
import org.apache.fbthrift.protocol.TStruct;
import org.apache.fbthrift.protocol.TType;

import javax.annotation.Nullable;

import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.Objects;

import static com.google.common.base.MoreObjects.ToStringHelper;
import static com.google.common.base.MoreObjects.toStringHelper;

@SwiftGenerated
@ThriftStruct(value = "ThriftDuration", builder = ThriftDuration.Builder.class)
public final class ThriftDuration
        implements com.facebook.thrift.payload.ThriftSerializable
{
    @ThriftConstructor
    public ThriftDuration(
            @ThriftField(value = 1, name = "value", requiredness = Requiredness.NONE) final double value,
            @ThriftField(value = 2, name = "unit", requiredness = Requiredness.NONE) final ThriftTimeUnit unit
    )
    {
        this.value = value;
        this.unit = unit;
    }

    @ThriftConstructor
    protected ThriftDuration()
    {
        this.value = 0.;
        this.unit = ThriftTimeUnit.fromInteger(0);
    }

    public static Builder builder()
    {
        return new Builder();
    }

    public static Builder builder(ThriftDuration other)
    {
        return new Builder(other);
    }

    public static class Builder
    {
        private double value = 0.;
        private ThriftTimeUnit unit = ThriftTimeUnit.fromInteger(0);

        @ThriftField(value = 1, name = "value", requiredness = Requiredness.NONE)
        public Builder setValue(double value)
        {
            this.value = value;
            return this;
        }

        public double getValue() {return value;}

        @ThriftField(value = 2, name = "unit", requiredness = Requiredness.NONE)
        public Builder setUnit(ThriftTimeUnit unit)
        {
            this.unit = unit;
            return this;
        }

        public ThriftTimeUnit getUnit() {return unit;}

        public Builder() {}

        public Builder(ThriftDuration other)
        {
            this.value = other.value;
            this.unit = other.unit;
        }

        @ThriftConstructor
        public ThriftDuration build()
        {
            ThriftDuration result = new ThriftDuration(
                    this.value,
                    this.unit
            );
            return result;
        }
    }

    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap<>();
    public static final Map<String, Integer> THRIFT_NAMES_TO_IDS = new HashMap<>();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("ThriftDuration");
    private final double value;
    public static final int _VALUE = 1;
    private static final TField VALUE_FIELD_DESC = new TField("value", TType.DOUBLE, (short) 1);
    private final ThriftTimeUnit unit;
    public static final int _UNIT = 2;
    private static final TField UNIT_FIELD_DESC = new TField("unit", TType.I32, (short) 2);

    static {
        NAMES_TO_IDS.put("value", 1);
        THRIFT_NAMES_TO_IDS.put("value", 1);
        FIELD_METADATA.put(1, VALUE_FIELD_DESC);
        NAMES_TO_IDS.put("unit", 2);
        THRIFT_NAMES_TO_IDS.put("unit", 2);
        FIELD_METADATA.put(2, UNIT_FIELD_DESC);
    }

    @ThriftField(value = 1, name = "value", requiredness = Requiredness.NONE)
    public double getValue() {return value;}

    @Nullable
    @ThriftField(value = 2, name = "unit", requiredness = Requiredness.NONE)
    public ThriftTimeUnit getUnit() {return unit;}

    @Override
    public String toString()
    {
        ToStringHelper helper = toStringHelper(this);
        helper.add("value", value);
        helper.add("unit", unit);
        return helper.toString();
    }

    @Override
    public boolean equals(Object o)
    {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        ThriftDuration other = (ThriftDuration) o;

        return
                Objects.equals(value, other.value) &&
                        Objects.equals(unit, other.unit) &&
                        true;
    }

    @Override
    public int hashCode()
    {
        return Arrays.deepHashCode(new Object[] {
                value,
                unit
        });
    }

    public static com.facebook.thrift.payload.Reader<ThriftDuration> asReader()
    {
        return ThriftDuration::read0;
    }

    public static ThriftDuration read0(TProtocol oprot)
            throws TException
    {
        TField __field;
        oprot.readStructBegin(ThriftDuration.NAMES_TO_IDS, ThriftDuration.THRIFT_NAMES_TO_IDS, ThriftDuration.FIELD_METADATA);
        Builder builder = new Builder();
        while (true) {
            __field = oprot.readFieldBegin();
            if (__field.type == TType.STOP) {
                break;
            }
            switch (__field.id) {
                case _VALUE:
                    if (__field.type == TType.DOUBLE) {
                        double value = oprot.readDouble();
                        builder.setValue(value);
                    }
                    else {
                        TProtocolUtil.skip(oprot, __field.type);
                    }
                    break;
                case _UNIT:
                    if (__field.type == TType.I32) {
                        ThriftTimeUnit unit = ThriftTimeUnit.fromInteger(oprot.readI32());
                        builder.setUnit(unit);
                    }
                    else {
                        TProtocolUtil.skip(oprot, __field.type);
                    }
                    break;
                default:
                    TProtocolUtil.skip(oprot, __field.type);
                    break;
            }
            oprot.readFieldEnd();
        }
        oprot.readStructEnd();
        return builder.build();
    }

    public void write0(TProtocol oprot)
            throws TException
    {
        oprot.writeStructBegin(STRUCT_DESC);
        oprot.writeFieldBegin(VALUE_FIELD_DESC);
        oprot.writeDouble(this.value);
        oprot.writeFieldEnd();
        oprot.writeFieldBegin(UNIT_FIELD_DESC);
        oprot.writeI32(this.unit == null ? 0 : com.facebook.thrift.util.EnumUtil.getValue(this.unit));
        oprot.writeFieldEnd();
        oprot.writeFieldStop();
        oprot.writeStructEnd();
    }

    private static class _ThriftDurationLazy
    {
        private static final ThriftDuration _DEFAULT = new Builder().build();
    }

    public static ThriftDuration defaultInstance()
    {
        return _ThriftDurationLazy._DEFAULT;
    }
}
