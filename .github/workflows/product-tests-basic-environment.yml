name: product tests (basic)

on:
  pull_request:

env:
  # An envar that signals to tests we are executing in the CI environment
  CONTINUOUS_INTEGRATION: true
  MAVEN_OPTS: "-Xmx1024M -XX:+ExitOnOutOfMemoryError"
  MAVEN_INSTALL_OPTS: "-Xmx2G -XX:+ExitOnOutOfMemoryError"
  MAVEN_FAST_INSTALL: "-B -V --quiet -T 1C -DskipTests -Dair.check.skip-all --no-transfer-progress -Dmaven.javadoc.skip=true"
  RETRY: .github/bin/retry

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      codechange: ${{ steps.filter.outputs.codechange }}
    steps:
    # For pull requests it's not necessary to checkout the code
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          codechange:
            - '!presto-docs/**'
  product-tests-basic-environment:
    strategy:
      fail-fast: false
      matrix:
        java: [ 8, 17.0.13 ]
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.codechange == 'true'
    timeout-minutes: 60
    concurrency:
      group: ${{ github.workflow }}-product-tests-basic-environment-${{ github.event.pull_request.number }}-${{ matrix.java }}
      cancel-in-progress: true
    steps:
      - name: Free Disk Space
        run: |
          df -h
          sudo apt-get clean
          rm -rf /opt/hostedtoolcache
          df -h
      - uses: actions/checkout@v4
        with:
          show-progress: false
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
          cache: 'maven'
      - name: Download nodejs to maven cache
        run: .github/bin/download_nodejs
      - name: Maven install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -am -pl '!presto-docs,!presto-spark-package,!presto-spark-launcher,!presto-spark-testing,!presto-test-coverage'
      - name: Run Product Tests Basic Environment
        env:
          OVERRIDE_JDK_DIR: ${{ env.JAVA_HOME }}
        run: presto-product-tests/bin/run_on_docker.sh multinode -x quarantine,big_query,storage_formats,profile_specific_tests,tpcds,cassandra,mysql_connector,postgresql_connector,mysql,kafka,avro
