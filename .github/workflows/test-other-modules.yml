name: test other modules

on:
  pull_request:

env:
  # An envar that signals to tests we are executing in the CI environment
  CONTINUOUS_INTEGRATION: true
  MAVEN_OPTS: "-Xmx1024M -XX:+ExitOnOutOfMemoryError"
  MAVEN_INSTALL_OPTS: "-Xmx2G -XX:+ExitOnOutOfMemoryError"
  MAVEN_FAST_INSTALL: "-B -V --quiet -T C1 -DskipTests -Dair.check.skip-all -Dmaven.javadoc.skip=true"
  MAVEN_TEST: "-B -Dair.check.skip-all -Dmaven.javadoc.skip=true -DLogTestDurationListener.enabled=true --fail-at-end"
  RETRY: .github/bin/retry
  EXCLUDE_LIST: "\
!presto-tests,\
!presto-accumulo,\
!presto-cassandra,\
!presto-hive,\
!presto-kudu,\
!presto-docs,\
!presto-server,\
!presto-main,\
!presto-mongodb,\
!presto-spark-package,\
!presto-spark-launcher,\
!presto-spark-testing,\
!presto-spark-base,\
!presto-redis,\
!presto-elasticsearch,\
!presto-orc,\
!presto-thrift-connector,\
!presto-native-execution,\
!presto-test-coverage"
  BATCH_1: "\
!presto-testng-services,\
!presto-testing-docker,\
!presto-spark-classloader-interface,\
!presto-spark,\
!presto-common,\
!presto-parser,\
!presto-bytecode,\
!presto-matching,\
!presto-memory-context,\
!presto-spi,\
!presto-thrift-spec,\
!presto-plugin-toolkit,\
!presto-client,\
!presto-geospatial-toolkit,\
!presto-analyzer,\
!presto-expressions,\
!presto-tpch,\
!presto-thrift-api,\
!presto-resource-group-managers"
  BATCH_2: "\
!presto-hive-common,\
!presto-record-decoder,\
!presto-rcfile,\
!presto-tpcds,\
!presto-i18n-functions,\
!presto-teradata-functions,\
!presto-example-http,\
!presto-local-file,\
!presto-prometheus,\
!presto-password-authenticators,\
!presto-session-property-managers,\
!presto-node-ttl-fetchers,\
!presto-cluster-ttl-providers,\
!presto-testing-server-launcher,\
!presto-google-sheets,\
!presto-lark-sheets,\
!presto-open-telemetry,\
!presto-jmx,\
!presto-cli,\
!presto-benchmark-driver"
  BATCH_3: "\
!presto-spark-common,\
!presto-pinot-toolkit,\
!presto-druid,\
!presto-atop,\
!presto-bigquery,\
!presto-blackhole,\
!presto-memory,\
!presto-base-jdbc,\
!presto-ml,\
!presto-clickhouse,\
!presto-function-namespace-managers,\
!presto-thrift-testing-udf-server,\
!presto-thrift-testing-server,\
!presto-cache,\
!presto-hive-metastore,\
!presto-kafka,\
!presto-pinot,\
!presto-benchmark,\
!presto-hive-function-namespace,\
!presto-mysql"
  BATCH_4: "\
!presto-oracle,\
!presto-postgresql,\
!presto-redshift,\
!presto-sqlserver,\
!presto-grpc-api,\
!presto-hive-hadoop2,\
!presto-parquet,\
!presto-grpc-testing-udf-server,\
!presto-jdbc,\
!presto-iceberg,\
!presto-delta,\
!presto-hudi,\
!presto-product-tests,\
!presto-verifier"

jobs:
  test-other-modules-batch1:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    concurrency:
      group: ${{ github.workflow }}-test-other-modules-batch1-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache local Maven repository
        id: cache-maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-2-
      - name: Populate maven cache
        if: steps.cache-maven.outputs.cache-hit != 'true'
        run: ./mvnw de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl '!:presto-docs,!:presto-server,!presto-test-coverage'
      - name: Maven Tests
        run: ./mvnw test ${MAVEN_TEST} -pl ${EXCLUDE_LIST},${BATCH_2},${BATCH_3},${BATCH_4}

  test-other-modules-batch2:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    concurrency:
      group: ${{ github.workflow }}-test-other-modules-batch2-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache local Maven repository
        id: cache-maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-2-
      - name: Populate maven cache
        if: steps.cache-maven.outputs.cache-hit != 'true'
        run: ./mvnw de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl '!:presto-docs,!:presto-server,!presto-test-coverage'
      - name: Maven Tests
        run: ./mvnw test ${MAVEN_TEST} -pl ${EXCLUDE_LIST},${BATCH_1},${BATCH_3},${BATCH_4}

  test-other-modules-batch3:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    concurrency:
      group: ${{ github.workflow }}-test-other-modules-batch3-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache local Maven repository
        id: cache-maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-2-
      - name: Populate maven cache
        if: steps.cache-maven.outputs.cache-hit != 'true'
        run: ./mvnw de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl '!:presto-docs,!:presto-server,!presto-test-coverage'
      - name: Maven Tests
        run: ./mvnw test ${MAVEN_TEST} -pl ${EXCLUDE_LIST},${BATCH_1},${BATCH_2},${BATCH_4}

  test-other-modules-batch4:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    concurrency:
      group: ${{ github.workflow }}-test-other-modules-batch4-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache local Maven repository
        id: cache-maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-2-
      - name: Populate maven cache
        if: steps.cache-maven.outputs.cache-hit != 'true'
        run: ./mvnw de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl '!:presto-docs,!:presto-server,!presto-test-coverage'
      - name: Maven Tests
        run: ./mvnw test ${MAVEN_TEST} -pl ${EXCLUDE_LIST},${BATCH_1},${BATCH_2},${BATCH_3}

  test-other-modules:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    concurrency:
      group: ${{ github.workflow }}-test-other-modules-${{ github.event.pull_request.number }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Cache local Maven repository
        id: cache-maven
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-2-
      - name: Populate maven cache
        if: steps.cache-maven.outputs.cache-hit != 'true'
        run: ./mvnw de.qaware.maven:go-offline-maven-plugin:resolve-dependencies
      - name: Maven Install
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -pl '!:presto-docs,!:presto-server,!presto-test-coverage'
      - name: Maven Tests
        run: ./mvnw test ${MAVEN_TEST} -pl ${EXCLUDE_LIST},${BATCH_1},${BATCH_2},${BATCH_3},${BATCH_4}

