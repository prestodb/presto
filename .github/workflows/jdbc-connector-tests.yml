name: jdbc connector tests

on: pull_request

env:
  # An envar that signals to tests we are executing in the CI environment
  CONTINUOUS_INTEGRATION: true
  MAVEN_OPTS: -Xmx1024M -XX:+ExitOnOutOfMemoryError
  MAVEN_INSTALL_OPTS: -Xmx2G -XX:+ExitOnOutOfMemoryError
  MAVEN_FAST_INSTALL: -B -V --quiet -T 1C -DskipTests -Dair.check.skip-all --no-transfer-progress -Dmaven.javadoc.skip=true
  MAVEN_TEST: -B -Dair.check.skip-all -Dmaven.javadoc.skip=true -DLogTestDurationListener.enabled=true --no-transfer-progress --fail-at-end
  RETRY: .github/bin/retry

jobs:
  changes:
    runs-on: ubuntu-latest
    # Required permissions
    permissions:
      pull-requests: read
    # Set job outputs to values from filter step
    outputs:
      codechange: ${{ steps.filter.outputs.codechange }}
    steps:
      # For pull requests it's not necessary to checkout the code
      - uses: dorny/paths-filter@de90cc6fb38fc0963ad72b210f1f284cd68cea36 # v3.0.2
        id: filter
        with:
          filters: |
            codechange:
              - '!presto-docs/**'

  jdbc-connector-tests:
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        java: [17.0.15]
    runs-on: ubuntu-latest
    needs: changes
    timeout-minutes: 60
    concurrency:
      group: ${{ github.workflow }}-jdbc-connector-tests-${{ github.event.pull_request.number }}-${{ matrix.java }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        if: needs.changes.outputs.codechange == 'true'
        with:
          show-progress: false
          persist-credentials: false
      - uses: actions/setup-java@v4
        if: needs.changes.outputs.codechange == 'true'
        with:
          distribution: temurin
          java-version: ${{ matrix.java }}
          cache: maven
      - name: Download nodejs to maven cache
        if: needs.changes.outputs.codechange == 'true'
        run: .github/bin/download_nodejs
      - name: Install JDBC Connector Modules
        if: needs.changes.outputs.codechange == 'true'
        run: |
          export MAVEN_OPTS="${MAVEN_INSTALL_OPTS}"
          ./mvnw install ${MAVEN_FAST_INSTALL} -am -pl :presto-mysql,:presto-postgresql
      - name: Run MySQL and PostgreSQL Tests
        if: needs.changes.outputs.codechange == 'true'
        run: ./mvnw test ${MAVEN_TEST} -P ci -pl :presto-mysql,:presto-postgresql