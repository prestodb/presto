/**
 * Autogenerated by Thrift Compiler (0.21.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef TaskStatus_TYPES_H
#define TaskStatus_TYPES_H

#include <iosfwd>

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/TBase.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include <functional>
#include <memory>
#include "Common_types.h"


namespace protocol {

class ThriftTaskStatus;

typedef struct _ThriftTaskStatus__isset {
  _ThriftTaskStatus__isset() : taskInstanceIdLeastSignificantBits(false), taskInstanceIdMostSignificantBits(false), version(false), state(false), self(false), completedDriverGroups(false), failures(false), queuedPartitionedDrivers(false), runningPartitionedDrivers(false), outputBufferUtilization(false), outputBufferOverutilized(false), physicalWrittenDataSizeInBytes(false), memoryReservationInBytes(false), systemMemoryReservationInBytes(false), peakNodeTotalMemoryReservationInBytes(false), fullGcCount(false), fullGcTimeInMillis(false), totalCpuTimeInNanos(false), taskAgeInMillis(false), queuedPartitionedSplitsWeight(false), runningPartitionedSplitsWeight(false) {}
  bool taskInstanceIdLeastSignificantBits :1;
  bool taskInstanceIdMostSignificantBits :1;
  bool version :1;
  bool state :1;
  bool self :1;
  bool completedDriverGroups :1;
  bool failures :1;
  bool queuedPartitionedDrivers :1;
  bool runningPartitionedDrivers :1;
  bool outputBufferUtilization :1;
  bool outputBufferOverutilized :1;
  bool physicalWrittenDataSizeInBytes :1;
  bool memoryReservationInBytes :1;
  bool systemMemoryReservationInBytes :1;
  bool peakNodeTotalMemoryReservationInBytes :1;
  bool fullGcCount :1;
  bool fullGcTimeInMillis :1;
  bool totalCpuTimeInNanos :1;
  bool taskAgeInMillis :1;
  bool queuedPartitionedSplitsWeight :1;
  bool runningPartitionedSplitsWeight :1;
} _ThriftTaskStatus__isset;

class ThriftTaskStatus : public virtual ::apache::thrift::TBase {
 public:

  ThriftTaskStatus(const ThriftTaskStatus&);
  ThriftTaskStatus& operator=(const ThriftTaskStatus&);
  ThriftTaskStatus() noexcept;

  virtual ~ThriftTaskStatus() noexcept;
  int64_t taskInstanceIdLeastSignificantBits;
  int64_t taskInstanceIdMostSignificantBits;
  int64_t version;
  /**
   * 
   * @see com.facebook.presto.experimental.ThriftTaskState
   */
   ::protocol::ThriftTaskState::type state;
  std::string self;
  std::set< ::protocol::ThriftLifespan>  completedDriverGroups;
  std::vector< ::protocol::ThriftExecutionFailureInfo>  failures;
  int32_t queuedPartitionedDrivers;
  int32_t runningPartitionedDrivers;
  double outputBufferUtilization;
  bool outputBufferOverutilized;
  int64_t physicalWrittenDataSizeInBytes;
  int64_t memoryReservationInBytes;
  int64_t systemMemoryReservationInBytes;
  int64_t peakNodeTotalMemoryReservationInBytes;
  int64_t fullGcCount;
  int64_t fullGcTimeInMillis;
  int64_t totalCpuTimeInNanos;
  int64_t taskAgeInMillis;
  int64_t queuedPartitionedSplitsWeight;
  int64_t runningPartitionedSplitsWeight;

  _ThriftTaskStatus__isset __isset;

  void __set_taskInstanceIdLeastSignificantBits(const int64_t val);

  void __set_taskInstanceIdMostSignificantBits(const int64_t val);

  void __set_version(const int64_t val);

  void __set_state(const  ::protocol::ThriftTaskState::type val);

  void __set_self(const std::string& val);

  void __set_completedDriverGroups(const std::set< ::protocol::ThriftLifespan> & val);

  void __set_failures(const std::vector< ::protocol::ThriftExecutionFailureInfo> & val);

  void __set_queuedPartitionedDrivers(const int32_t val);

  void __set_runningPartitionedDrivers(const int32_t val);

  void __set_outputBufferUtilization(const double val);

  void __set_outputBufferOverutilized(const bool val);

  void __set_physicalWrittenDataSizeInBytes(const int64_t val);

  void __set_memoryReservationInBytes(const int64_t val);

  void __set_systemMemoryReservationInBytes(const int64_t val);

  void __set_peakNodeTotalMemoryReservationInBytes(const int64_t val);

  void __set_fullGcCount(const int64_t val);

  void __set_fullGcTimeInMillis(const int64_t val);

  void __set_totalCpuTimeInNanos(const int64_t val);

  void __set_taskAgeInMillis(const int64_t val);

  void __set_queuedPartitionedSplitsWeight(const int64_t val);

  void __set_runningPartitionedSplitsWeight(const int64_t val);

  bool operator == (const ThriftTaskStatus & rhs) const;
  bool operator != (const ThriftTaskStatus &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const ThriftTaskStatus & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot) override;
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const override;

  virtual void printTo(std::ostream& out) const;
};

void swap(ThriftTaskStatus &a, ThriftTaskStatus &b);

std::ostream& operator<<(std::ostream& out, const ThriftTaskStatus& obj);

} // namespace

#endif
