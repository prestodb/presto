/**
 * Autogenerated by Thrift for presto_protocol_api.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated  
 */
#pragma once

#include <cstdint>

// BEGIN forward_declare
namespace facebook::presto::protocol::cpp2 {
class SplitWrapper;
class TableWriteInfoWrapper;
class MetadataUpdatesWrapper;
class Lifespan;
class ErrorLocation;
class HostAddress;
class StageId;
class OutputBufferId;
class PageBufferInfo;
class PlanNodeId;
class DistributionSnapshot;
class RuntimeStats;
class ExchangeClientStatus;
class PageBufferClientStatus;
class LocalExchangeBufferInfo;
class TableFinishInfo;
class SplitOperatorInfo;
class HashCollisionsInfo;
class PartitionedOutputInfo;
class WindowInfo;
class DriverWindowInfo;
class TableWriterInfo;
class TableWriterMergeInfo;
class DynamicFilterStats;
class DriverStats;
class TransactionId;
class TimeZoneKey;
class ResourceEstimates;
class ConnectorId;
class SqlFunctionId;
class TypeSignature;
class Language;
class QualifiedObjectName;
class TypeVariableConstraint;
class LongVariableConstraint;
class TaskSource;
class ScheduledSplit;
class TaskStatus;
class ErrorCode;
class StageExecutionId;
class OutputBufferInfo;
class BufferInfo;
class TaskStats;
class PipelineStats;
class RuntimeMetric;
class JoinOperatorInfo;
class SessionRepresentation;
class SelectedRole;
class Parameter;
class RoutineCharacteristics;
class Signature;
class OutputBuffers;
class TaskUpdateRequest;
class ExecutionFailureInfo;
class TaskId;
class OperatorInfoUnion;
class SqlInvokedFunction;
class TaskInfo;
class OperatorStats;
} // namespace facebook::presto::protocol::cpp2
// END forward_declare

// BEGIN forward_declare_enums
namespace facebook::presto::protocol::cpp2 {
enum class TaskState;
enum class ErrorType;
enum class ErrorCause;
enum class BufferState;
enum class BlockedReason;
enum class RuntimeUnit;
enum class JoinType;
enum class Type;
enum class Determinism;
enum class NullCallClause;
enum class FunctionKind;
enum class BufferType;
} // namespace facebook::presto::protocol::cpp2
// END forward_declare_enums
