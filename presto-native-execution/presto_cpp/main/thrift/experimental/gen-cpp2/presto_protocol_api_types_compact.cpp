/**
 * Autogenerated by Thrift for presto_protocol_api.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated  
 */
#include "presto_protocol_api_types.tcc"

namespace facebook::presto::protocol::cpp2 {

template void SplitWrapper::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t SplitWrapper::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t SplitWrapper::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t SplitWrapper::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TableWriteInfoWrapper::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TableWriteInfoWrapper::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TableWriteInfoWrapper::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TableWriteInfoWrapper::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void MetadataUpdatesWrapper::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t MetadataUpdatesWrapper::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t MetadataUpdatesWrapper::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t MetadataUpdatesWrapper::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void Lifespan::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t Lifespan::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t Lifespan::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t Lifespan::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void ErrorLocation::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t ErrorLocation::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t ErrorLocation::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t ErrorLocation::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void HostAddress::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t HostAddress::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t HostAddress::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t HostAddress::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void StageId::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t StageId::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t StageId::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t StageId::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void OutputBufferId::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t OutputBufferId::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t OutputBufferId::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t OutputBufferId::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void PageBufferInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t PageBufferInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t PageBufferInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t PageBufferInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void PlanNodeId::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t PlanNodeId::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t PlanNodeId::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t PlanNodeId::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void DistributionSnapshot::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t DistributionSnapshot::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t DistributionSnapshot::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t DistributionSnapshot::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void RuntimeStats::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t RuntimeStats::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t RuntimeStats::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t RuntimeStats::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void ExchangeClientStatus::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t ExchangeClientStatus::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t ExchangeClientStatus::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t ExchangeClientStatus::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void PageBufferClientStatus::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t PageBufferClientStatus::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t PageBufferClientStatus::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t PageBufferClientStatus::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void LocalExchangeBufferInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t LocalExchangeBufferInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t LocalExchangeBufferInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t LocalExchangeBufferInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TableFinishInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TableFinishInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TableFinishInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TableFinishInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void SplitOperatorInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t SplitOperatorInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t SplitOperatorInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t SplitOperatorInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void HashCollisionsInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t HashCollisionsInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t HashCollisionsInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t HashCollisionsInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void PartitionedOutputInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t PartitionedOutputInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t PartitionedOutputInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t PartitionedOutputInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void WindowInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t WindowInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t WindowInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t WindowInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void DriverWindowInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t DriverWindowInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t DriverWindowInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t DriverWindowInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TableWriterInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TableWriterInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TableWriterInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TableWriterInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TableWriterMergeInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TableWriterMergeInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TableWriterMergeInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TableWriterMergeInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void DynamicFilterStats::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t DynamicFilterStats::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t DynamicFilterStats::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t DynamicFilterStats::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void DriverStats::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t DriverStats::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t DriverStats::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t DriverStats::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TransactionId::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TransactionId::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TransactionId::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TransactionId::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TimeZoneKey::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TimeZoneKey::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TimeZoneKey::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TimeZoneKey::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void ResourceEstimates::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t ResourceEstimates::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t ResourceEstimates::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t ResourceEstimates::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void ConnectorId::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t ConnectorId::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t ConnectorId::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t ConnectorId::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void SqlFunctionId::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t SqlFunctionId::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t SqlFunctionId::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t SqlFunctionId::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TypeSignature::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TypeSignature::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TypeSignature::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TypeSignature::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void Language::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t Language::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t Language::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t Language::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void QualifiedObjectName::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t QualifiedObjectName::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t QualifiedObjectName::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t QualifiedObjectName::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TypeVariableConstraint::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TypeVariableConstraint::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TypeVariableConstraint::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TypeVariableConstraint::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void LongVariableConstraint::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t LongVariableConstraint::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t LongVariableConstraint::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t LongVariableConstraint::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TaskSource::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TaskSource::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TaskSource::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TaskSource::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void ScheduledSplit::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t ScheduledSplit::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t ScheduledSplit::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t ScheduledSplit::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TaskStatus::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TaskStatus::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TaskStatus::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TaskStatus::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void ErrorCode::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t ErrorCode::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t ErrorCode::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t ErrorCode::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void StageExecutionId::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t StageExecutionId::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t StageExecutionId::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t StageExecutionId::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void OutputBufferInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t OutputBufferInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t OutputBufferInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t OutputBufferInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void BufferInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t BufferInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t BufferInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t BufferInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TaskStats::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TaskStats::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TaskStats::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TaskStats::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void PipelineStats::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t PipelineStats::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t PipelineStats::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t PipelineStats::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void RuntimeMetric::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t RuntimeMetric::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t RuntimeMetric::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t RuntimeMetric::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void JoinOperatorInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t JoinOperatorInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t JoinOperatorInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t JoinOperatorInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void SessionRepresentation::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t SessionRepresentation::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t SessionRepresentation::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t SessionRepresentation::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void SelectedRole::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t SelectedRole::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t SelectedRole::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t SelectedRole::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void Parameter::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t Parameter::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t Parameter::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t Parameter::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void RoutineCharacteristics::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t RoutineCharacteristics::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t RoutineCharacteristics::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t RoutineCharacteristics::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void Signature::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t Signature::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t Signature::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t Signature::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void OutputBuffers::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t OutputBuffers::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t OutputBuffers::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t OutputBuffers::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TaskUpdateRequest::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TaskUpdateRequest::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TaskUpdateRequest::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TaskUpdateRequest::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void ExecutionFailureInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t ExecutionFailureInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t ExecutionFailureInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t ExecutionFailureInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TaskId::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TaskId::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TaskId::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TaskId::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void OperatorInfoUnion::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t OperatorInfoUnion::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t OperatorInfoUnion::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t OperatorInfoUnion::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void SqlInvokedFunction::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t SqlInvokedFunction::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t SqlInvokedFunction::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t SqlInvokedFunction::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void TaskInfo::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t TaskInfo::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t TaskInfo::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t TaskInfo::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

template void OperatorStats::readNoXfer<>(apache::thrift::CompactProtocolReader*);
template uint32_t OperatorStats::write<>(apache::thrift::CompactProtocolWriter*) const;
template uint32_t OperatorStats::serializedSize<>(apache::thrift::CompactProtocolWriter const*) const;
template uint32_t OperatorStats::serializedSizeZC<>(apache::thrift::CompactProtocolWriter const*) const;

} // namespace facebook::presto::protocol::cpp2
