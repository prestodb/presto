// DO NOT EDIT : This file is generated by chevron
/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
#pragma once

// This file is generated DO NOT EDIT @generated

#include <cstdint>
#include <map>
#include <regex>
#include <string>

#include "presto_cpp/external/json/nlohmann/json.hpp"
#include "presto_cpp/presto_protocol/core/presto_protocol_core.h"

// ArrowFederationTransactionHandle is special since
// the corresponding class in Java is an enum.

namespace facebook::presto::protocol::arrow_federation {

struct ArrowFederationTransactionHandle : public ConnectorTransactionHandle {
  String instance = {};
};

void to_json(json& j, const ArrowFederationTransactionHandle& p);

void from_json(const json& j, ArrowFederationTransactionHandle& p);

} // namespace facebook::presto::protocol::arrow_federation
namespace facebook::presto::protocol::arrow_federation {
struct ArrowSplit : public ConnectorSplit {
  String schemaName = {};
  String tableName = {};
  String flightEndpointBytes = {};

  ArrowSplit() noexcept;
};
void to_json(json& j, const ArrowSplit& p);
void from_json(const json& j, ArrowSplit& p);
} // namespace facebook::presto::protocol::arrow_federation
namespace facebook::presto::protocol::arrow_federation {
struct ArrowTableHandle : public ConnectorTableHandle {
  String schema = {};
  String table = {};

  ArrowTableHandle() noexcept;
};
void to_json(json& j, const ArrowTableHandle& p);
void from_json(const json& j, ArrowTableHandle& p);
} // namespace facebook::presto::protocol::arrow_federation
namespace facebook::presto::protocol::arrow_federation {
struct ArrowTableLayoutHandle : public ConnectorTableLayoutHandle {
  ArrowTableHandle table = {};
  List<ArrowColumnHandle> columnHandles = {};
  TupleDomain<std::shared_ptr<ColumnHandle>> tupleDomain = {};

  ArrowTableLayoutHandle() noexcept;
};
void to_json(json& j, const ArrowTableLayoutHandle& p);
void from_json(const json& j, ArrowTableLayoutHandle& p);
} // namespace facebook::presto::protocol::arrow_federation
